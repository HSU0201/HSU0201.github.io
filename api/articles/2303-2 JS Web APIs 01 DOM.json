{"title":"JavaScript Web APIs - 第1天","uid":"0a48fb7912b57657825a8de1e5528e6f","slug":"2303-2 JS Web APIs 01 DOM","date":"2023-03-23T01:22:08.000Z","updated":"2023-03-26T01:51:05.947Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 01 DOM.json","keywords":null,"cover":null,"content":"<h1 id=\"複習：\"><a href=\"#複習：\" class=\"headerlink\" title=\"複習：\"></a>複習：</h1><p>splice() 方法用於添加或刪除陣列中的元素。</p>\n<p><strong>注意：</strong>這種方法會改變原始陣列。</p>\n<ol>\n<li><strong>刪除陣列：</strong></li>\n</ol>\n<p>splice(起始位置， 刪除的個數)</p>\n<p>比如：1</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let arr &#x3D; [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;]\narr.splice(1,1) &#x2F;&#x2F; 刪除green元素\nconsole.log(arr) &#x2F;&#x2F; [&#39;red, &#39;blue&#39;]</code></pre>\n\n<ol start=\"2\">\n<li><strong>添加元素</strong></li>\n</ol>\n<p>splice(起始位置，刪除個數，添加陣列元素)</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let arr &#x3D; [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;]\n&#x2F;&#x2F;arr.splice(1, 0, &#39;pink&#39;) &#x2F;&#x2F; 在索引號是1的位置添加 pink\n&#x2F;&#x2F;console.log(arr) &#x2F;&#x2F; [&#39;red&#39;, &#39;pink&#39;, &#39;green&#39;, &#39;blue&#39;]\narr.splice(1, 0, &#39;pink&#39;, &#39;hotpink&#39;) &#x2F;&#x2F; 在索引號是1的位置添加 pink  hotpink\nconsole.log(arr) &#x2F;&#x2F; [&#39;red&#39;, &#39;pink&#39;, &#39;hotpink&#39;, &#39;green&#39;, &#39;blue&#39;]</code></pre>\n\n<h2 id=\"聲明變數優先使用哪個？\"><a href=\"#聲明變數優先使用哪個？\" class=\"headerlink\" title=\"聲明變數優先使用哪個？\"></a>聲明變數優先使用哪個？</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>const<br>有了變數先給<code>const</code>，如果發現它後面是要被修改的，再改為<code>let</code></p></blockquote>\n<h2 id=\"為什麼const聲明的物件可以修改裡面的屬性？\"><a href=\"#為什麼const聲明的物件可以修改裡面的屬性？\" class=\"headerlink\" title=\"為什麼const聲明的物件可以修改裡面的屬性？\"></a>為什麼const聲明的物件可以修改裡面的屬性？</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>const 聲明的值不能更改，而且const聲明變量的時候需要裡面進行初始化， 但是對於引用數據類型，const聲明的變量，裡面存的不是”值”是”地址”。<br>因為物件是參考類型，裡面存儲的是位址，只要位址不變，就不會報錯<br>建議陣列和物件使用 <code>const</code> 來聲明</p></blockquote>\n<h2 id=\"什麼時候使用let聲明變數？\"><a href=\"#什麼時候使用let聲明變數？\" class=\"headerlink\" title=\"什麼時候使用let聲明變數？\"></a>什麼時候使用let聲明變數？</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果基本資料型別的值或者參考類型的位址發生變化的時候，需要用<code>let</code><br>比如 一個變數進行加減運算，比如 <strong>for迴圈</strong>中的 <code>i++</code></p></blockquote>\n<h1 id=\"Web-APIs-第1天筆記\"><a href=\"#Web-APIs-第1天筆記\" class=\"headerlink\" title=\"Web APIs - 第1天筆記\"></a>Web APIs - 第1天筆記</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>瞭解 DOM 的結構並掌握其基本的操作，體驗 DOM 的在開發中的作用</p></blockquote>\n<ul>\n<li>知道 ECMAScript 與 JavaScript 的關係</li>\n<li>瞭解 DOM 的相關概念及DOM 的本質是一個物件</li>\n<li>掌握查找節點的基本方法</li>\n<li>掌握節點屬性和文本的操作</li>\n<li>能夠使用間歇函數創建定時任務</li>\n</ul>\n<h2 id=\"介紹\"><a href=\"#介紹\" class=\"headerlink\" title=\"介紹\"></a>介紹</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知道 ECMAScript 與 JavaScript 的關係，Web APIs 是流覽器擴展的功能。</p></blockquote>\n<p>嚴格意義上講，我們在 JavaScript 階段學習的知識絕大部分屬於 ECMAScript 的知識體系，ECMAScript 簡稱 ES 它提供了一套語言標準規範，如變數、資料類型、運算式、語句、函數等語法規則都是由 ECMAScript 規定的。流覽器將 ECMAScript 大部分的規範加以實現，並且在此基礎上又擴展一些實用的功能，這些被擴展出來的內容我們稱為 Web APIs。</p>\n<p>ECMAScript 運行在流覽器中然後再結合 Web APIs 才是真正的 JavaScript，Web APIs 的核心是 DOM 和 BOM。</p>\n<p>擴展閱讀：ECMAScript 規範在不斷的更新中，存在多個不同的版本，早期的版本號採用數位順序編號如 ECMAScript3、ECMAScript5，後來由於更新速度較快便採用年份做為版本號，如 ECMAScript2017、ECMAScript2018 這種格式，ECMAScript6 是 2015 年發佈的，常叫做 EMCAScript2015。</p>\n<p>關於 JavaScript 歷史的<a href=\"https://javascript.ruanyifeng.com/introduction/history.html\">擴展閱讀</a>。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知道 DOM 相關的概念，建立對 DOM 的初步認識，學習 DOM 的基本操作，體會 DOM 的作用</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>DOM（Document Object Model）是將整個 HTML 文檔的每一個標籤元素視為一個物件，這個物件下包含了許多的屬性和方法，通過操作這些屬性或者調用這些方法實現對 HTML 的動態更新，為實現網頁特效以及用戶交互提供技術支撐。</p></blockquote>\n<p>簡言之 DOM 是用來動態修改 HTML 的，其目的是開發網頁特效及用戶交互。</p>\n<p>例如 當用戶分分別點擊【開始】或【結束】按鈕後，通過調試視窗可以觀察到 html 標籤的內容在不斷的發生改變，這便是通過 DOM 實現的。</p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><h3 id=\"DOM-樹\"><a href=\"#DOM-樹\" class=\"headerlink\" title=\"DOM 樹\"></a>DOM 樹</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n  &lt;title&gt;標題&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  文本\n  &lt;a href&#x3D;&quot;&quot;&gt;連結名&lt;&#x2F;a&gt;\n  &lt;div id&#x3D;&quot;&quot; class&#x3D;&quot;&quot;&gt;文本&lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>將 HTML 文檔以樹狀結構直觀的表現出來，我們稱之為文檔樹或 DOM 樹，<strong>文檔樹直觀的體現了標籤與標籤之間的關係。</strong></p>\n<h3 id=\"DOM-節點\"><a href=\"#DOM-節點\" class=\"headerlink\" title=\"DOM 節點\"></a>DOM 節點</h3><p>節點是文檔樹的組成部分，<strong>每一個節點都是一個 DOM 物件</strong>，主要分為元素節點、屬性節點、文本節點等。</p>\n<ol>\n<li>【元素節點】其實就是 HTML 標籤，如上圖中 <code>head</code>、<code>div</code>、<code>body</code> 等都屬於元素節點。</li>\n<li>【屬性節點】是指 HTML 標籤中的屬性，如上圖中 <code>a</code> 標籤的 <code>href</code> 屬性、<code>div</code> 標籤的 <code>class</code> 屬性。</li>\n<li>【文本節點】是指 HTML 標籤的文字內容，如 <code>title</code> 標籤中的文字。</li>\n<li>【根節點】特指 <code>html</code> 標籤。</li>\n<li>其它…</li>\n</ol>\n<h3 id=\"document\"><a href=\"#document\" class=\"headerlink\" title=\"document\"></a>document</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>網頁所有内容都在document里面<br><code>document</code> 是 JavaScript 內置的專門用於 DOM 的物件，該物件包含了若干的屬性和方法，<code>document</code> 是學習 DOM 的核心。</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\n  &#x2F;&#x2F; document 是內置的對象\n  &#x2F;&#x2F; console.log(typeof document);\n\n  &#x2F;&#x2F; 1. 通過 document 獲取根節點\n  console.log(document.documentElement); &#x2F;&#x2F; 對應 html 標籤\n\n  &#x2F;&#x2F; 2. 通過 document 節取 body 節點\n  console.log(document.body); &#x2F;&#x2F; 對應 body 標籤\n\n  &#x2F;&#x2F; 3. 通過 document.write 方法向網頁輸出內容\n  document.write(&#39;Hello World!&#39;);\n&lt;&#x2F;script&gt;</code></pre>\n\n<p>上述列舉了 <code>document</code> 物件的部分屬性和方法，我們先對 <code>document</code> 有一個整體的認識。</p>\n<h2 id=\"獲取DOM對象\"><a href=\"#獲取DOM對象\" class=\"headerlink\" title=\"獲取DOM對象\"></a>獲取DOM對象</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>document.querySelector(‘css選擇器’) &#x2F;&#x2F;css選擇器須加引號<br>瀏覽器根據html標籤生成的 JS對象（DOM對象）<br>DOM的核心就是把內容當對象來處理</p></blockquote>\n<ol>\n<li>querySelector   滿足條件的第一個元素</li>\n<li>querySelectorAll  滿足條件的元素集合 返回偽陣列</li>\n<li>瞭解其他方式<ol>\n<li>getElementById</li>\n<li>getElementsByTagName</li>\n</ol>\n</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n  &lt;title&gt;DOM - 查找節點&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  &lt;h3&gt;查找元素類型節點&lt;&#x2F;h3&gt;\n  &lt;p&gt;從整個 DOM 樹中查找 DOM 節點是學習 DOM 的第一個步驟。&lt;&#x2F;p&gt;\n  &lt;ul&gt;\n      &lt;li&gt;元素&lt;&#x2F;li&gt;\n      &lt;li&gt;元素&lt;&#x2F;li&gt;\n      &lt;li&gt;元素&lt;&#x2F;li&gt;\n      &lt;li&gt;元素&lt;&#x2F;li&gt;\n  &lt;&#x2F;ul&gt;\n  &lt;script&gt;\n    const p &#x3D; document.querySelector(&#39;p&#39;)  &#x2F;&#x2F; 獲取第一個p元素\n    const lis &#x3D; document.querySelectorAll(&#39;li&#39;)  &#x2F;&#x2F; 獲取第一個p元素\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>總結：</p>\n<ul>\n<li>document.getElementById 專門獲取元素類型節點，根據標籤的 <code>id</code>  屬性查找</li>\n<li>任意 DOM 物件都包含 nodeType 屬性，用來檢檢測節點類型</li>\n</ul>\n<h2 id=\"操作元素內容\"><a href=\"#操作元素內容\" class=\"headerlink\" title=\"操作元素內容\"></a>操作元素內容</h2><p><strong>通過修改 DOM 的文本內容，動態改變網頁的內容。</strong></p>\n<ol>\n<li><code>innerText</code> 將文本內容添加&#x2F;更新到任意標籤位置，<strong>文本中包含的標籤不會被解析。</strong></li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\n  &#x2F;&#x2F; innerText 將文本內容添加&#x2F;更新到任意標籤位置\n  const intro &#x3D; document.querySelector(&#39;.intro&#39;)\n  &#x2F;&#x2F; intro.innerText &#x3D; &#39;嗨~ 我叫李雷！&#39;\n  &#x2F;&#x2F; intro.innerText &#x3D; &#39;&lt;h4&gt;嗨~ 我叫李雷！&lt;&#x2F;h4&gt;&#39;\n&lt;&#x2F;script&gt;</code></pre>\n\n<ol start=\"2\">\n<li><code>innerHTML</code> 將文本內容添加&#x2F;更新到任意標籤位置，<strong>文本中包含的標籤會被解析。</strong></li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\n  &#x2F;&#x2F; innerHTML 將文本內容添加&#x2F;更新到任意標籤位置\n  const intro &#x3D; document.querySelector(&#39;.intro&#39;)\n  intro.innerHTML &#x3D; &#39;嗨~ 我叫韓梅梅！&#39;\n  intro.innerHTML &#x3D; &#39;&lt;h4&gt;嗨~ 我叫韓梅梅！&lt;&#x2F;h4&gt;&#39;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p>總結：如果文本內容中包含 <code>html</code> 標籤時推薦使用 <code>innerHTML</code>，否則建議使用 <code>innerText</code> 屬性。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>元素.innerText 屬性 只識別文本，不能解析標籤<br>元素.innerHTML 屬性 能識別文本，能夠解析標籤</p></blockquote>\n<h2 id=\"操作元素屬性\"><a href=\"#操作元素屬性\" class=\"headerlink\" title=\"操作元素屬性\"></a>操作元素屬性</h2><p>有3種方式可以實現對屬性的修改：</p>\n<h3 id=\"常用屬性修改\"><a href=\"#常用屬性修改\" class=\"headerlink\" title=\"常用屬性修改\"></a>常用屬性修改</h3><ol>\n<li>直接能過屬性名修改，最簡潔的語法</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\n  &#x2F;&#x2F; 1. 獲取 img 對應的 DOM 元素\n  const pic &#x3D; document.querySelector(&#39;.pic&#39;)\n  &#x2F;&#x2F; 2. 修改屬性\n  pic.src &#x3D; &#39;.&#x2F;images&#x2F;lion.webp&#39;\n  pic.width &#x3D; 400;\n  pic.alt &#x3D; &#39;圖片不見了...&#39;\n&lt;&#x2F;script&gt;</code></pre>\n\n<h3 id=\"控制樣式屬性\"><a href=\"#控制樣式屬性\" class=\"headerlink\" title=\"控制樣式屬性\"></a>控制樣式屬性</h3><ol>\n<li>應用【修改樣式】，通過修改行內樣式 <code>style</code> 屬性，實現對樣式的動態修改。</li>\n</ol>\n<p>通過元素節點獲得的 <code>style</code> 屬性本身的資料類型也是物件，如 <code>box.style.color</code>、<code>box.style.width</code> 分別用來獲取元素節點 CSS 樣式的 <code>color</code> 和 <code>width</code> 的值。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n  &lt;title&gt;練習 - 修改樣式&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  &lt;div class&#x3D;&quot;box&quot;&gt;隨便一些文本內容&lt;&#x2F;div&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; 獲取 DOM 節點\n    const box &#x3D; document.querySelector(&#39;.intro&#39;)\n    box.style.color &#x3D; &#39;red&#39;\n    box.style.width &#x3D; &#39;300px&#39;\n    &#x2F;&#x2F; css 屬性的 - 連接子與 JavaScript 的 減運算子\n    &#x2F;&#x2F; 衝突，所以要改成駝峰法\n    box.style.backgroundColor &#x3D; &#39;pink&#39;\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>任何標籤都有 <code>style</code> 屬性，通過 <code>style</code> 屬性可以動態更改網頁標籤的樣式，如要遇到 <code>css</code> 屬性中包含字元 <code>-</code> 時，要將 <code>-</code> 去掉並將其後面的字母改成大寫，如 <code>background-color</code> 要寫成 <code>box.style.backgroundColor</code></p>\n<ol start=\"2\">\n<li>操作類名(className) 操作CSS</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果<strong>修改的樣式比較多</strong>，直接通過style屬性修改比較繁瑣，我們可以通過借助於css類名的形式。<br>直接使用 className 賦值會覆盖以前的類名</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n  &lt;title&gt;練習 - 修改樣式&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        .pink &#123;\n            background: pink;\n            color: hotpink;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  &lt;div class&#x3D;&quot;box&quot;&gt;隨便一些文本內容&lt;&#x2F;div&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; 獲取 DOM 節點\n    const box &#x3D; document.querySelector(&#39;.intro&#39;)\n    box.className &#x3D; &#39;pink&#39;\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：</p>\n<p>1.由於class是關鍵字, 所以使用className去代替</p>\n<p>2.className是使用新值換舊值, 如果需要添加一個類,需要保留之前的類名</p></blockquote>\n<ol start=\"3\">\n<li>通過 classList 操作類控制CSS</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>為了解決className 容易覆蓋以前的類名，我們可以通過classList方式追加和刪除類名</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">\n&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        div &#123;\n            width: 200px;\n            height: 200px;\n            background-color: pink;\n        &#125;\n\n        .active &#123;\n            width: 300px;\n            height: 300px;\n            background-color: hotpink;\n            margin-left: 100px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n\n&lt;body&gt;\n\n    &lt;div class&#x3D;&quot;one&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;script&gt;\n        &#x2F;&#x2F; 1.獲取元素\n        &#x2F;&#x2F; let box &#x3D; document.querySelector(&#39;css選擇器&#39;)\n        let box &#x3D; document.querySelector(&#39;div&#39;)\n        &#x2F;&#x2F; add是個方法 添加  追加\n        &#x2F;&#x2F; box.classList.add(&#39;active&#39;)\n        &#x2F;&#x2F; remove() 移除 類\n        &#x2F;&#x2F; box.classList.remove(&#39;one&#39;)\n        &#x2F;&#x2F; 切換類\n        box.classList.toggle(&#39;one&#39;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n\n&lt;&#x2F;html&gt;</code></pre>\n\n<h3 id=\"動作表單元素屬性\"><a href=\"#動作表單元素屬性\" class=\"headerlink\" title=\"動作表單元素屬性\"></a>動作表單元素屬性</h3><p>表單很多情況，也需要修改屬性，比如點擊眼睛，可以看到密碼，本質是把表單類型轉換為文字方塊</p>\n<p>正常的有屬性有取值的跟其他的標籤屬性沒有任何區別</p>\n<p>獲取:DOM對象.屬性名</p>\n<p>設置:DOM對象.屬性名&#x3D; 新值</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">\n&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n\n&lt;&#x2F;head&gt;\n\n&lt;body&gt;\n    &lt;input type&#x3D;&quot;text&quot; value&#x3D;&quot;請輸入&quot;&gt;\n    &lt;button disabled&gt;按鈕&lt;&#x2F;button&gt;\n    &lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;&quot; id&#x3D;&quot;&quot; class&#x3D;&quot;agree&quot;&gt;\n    &lt;script&gt;\n        &#x2F;&#x2F; 1. 獲取元素\n        let input &#x3D; document.querySelector(&#39;input&#39;)\n        &#x2F;&#x2F; 2. 取值或者設置值  得到input裡面的值可以用 value\n        &#x2F;&#x2F; console.log(input.value)\n        input.value &#x3D; &#39;小米手機&#39;\n        input.type &#x3D; &#39;password&#39;\n\n        &#x2F;&#x2F; 2. 啟用按鈕\n        let btn &#x3D; document.querySelector(&#39;button&#39;)\n        &#x2F;&#x2F; disabled 不可用   &#x3D;  false  這樣可以讓按鈕啟用\n        btn.disabled &#x3D; false\n        &#x2F;&#x2F; 3. 勾選核取方塊\n        let checkbox &#x3D; document.querySelector(&#39;.agree&#39;)\n        checkbox.checked &#x3D; false\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n\n&lt;&#x2F;html&gt;</code></pre>\n\n<h3 id=\"自訂屬性\"><a href=\"#自訂屬性\" class=\"headerlink\" title=\"自訂屬性\"></a>自訂屬性</h3><p>標準屬性: 標籤天生自帶的屬性 比如class id title等, 可以直接使用點語法操作比如： disabled、checked、selected</p>\n<p>自訂屬性：</p>\n<p>在html5中推出來了專門的data-自訂屬性  </p>\n<p>在標籤上一律以data-開頭</p>\n<p>在DOM物件上一律以dataset物件方式獲取</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n\n&lt;&#x2F;head&gt;\n\n&lt;body&gt;\n   &lt;div data-id&#x3D;&quot;1&quot;&gt; 自訂屬性 &lt;&#x2F;div&gt;\n    &lt;script&gt;\n        &#x2F;&#x2F; 1. 獲取元素\n        let div &#x3D; document.querySelector(&#39;div&#39;)\n        &#x2F;&#x2F; 2. 獲取自訂屬性值\n         console.log(div.dataset.id)\n      \n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n\n&lt;&#x2F;html&gt;</code></pre>\n\n<h2 id=\"間歇函數\"><a href=\"#間歇函數\" class=\"headerlink\" title=\"間歇函數\"></a>間歇函數</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知道間歇函數的作用，利用間歇函數創建定時任務。</p></blockquote>\n<p><code>setInterval</code> 是 JavaScript 中內置的函數，它的作用是間隔固定的時間自動重複執行另一個函數，也叫計時器函數。</p>\n<p>定時器函數可以開啟和關閉定時器</p>\n<ol>\n<li>開啟定時器<pre class=\"line-numbers language-none\"><code class=\"language-none\">setInterval(函數, 間隔時間)</code></pre></li>\n</ol>\n<ul>\n<li>作用：每隔一段時間調用這個函數</li>\n<li>間隔時間單位是毫秒</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\n  &#x2F;&#x2F; 1. 定義一個普通函數\n  function repeat() &#123;\n    console.log(&#39;不知疲倦的執行下去....&#39;)\n  &#125;\n\n  &#x2F;&#x2F; 2. 使用 setInterval 調用 repeat 函數\n  &#x2F;&#x2F; 間隔 1000 毫秒，重複調用 repeat\n  setInterval(repeat, 1000)\n&lt;&#x2F;script&gt;</code></pre>\n<ol start=\"2\">\n<li>關閉定時器<pre class=\"line-numbers language-none\"><code class=\"language-none\">let 變量名 &#x3D; setInterval(函數, 間隔時間)\nclearInterval(變量名)</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>注意：<ul>\n<li>函數名字不需要加括號</li>\n<li>定時器返回的是一個id數字</li>\n</ul>\n</li>\n</ul></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">\n&lt;script&gt;\n  &#x2F;&#x2F; setInterval(函數名, 間隔時間)  函數名不要加小括號\n  let n &#x3D; setInterval(fn, 1000)\n  &#x2F;&#x2F; setInterval(&#39;fn()&#39;, 1000)\n  console.log(n)\n  &#x2F;&#x2F; 關閉定時器\n  clearInterval(n)\n&lt;&#x2F;script&gt;</code></pre></li>\n</ol>\n<h3 id=\"用戶註冊倒計時-範例\"><a href=\"#用戶註冊倒計時-範例\" class=\"headerlink\" title=\"用戶註冊倒計時(範例)\"></a>用戶註冊倒計時(範例)</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;textarea name&#x3D;&quot;&quot; id&#x3D;&quot;&quot; cols&#x3D;&quot;30&quot; rows&#x3D;&quot;10&quot;&gt;\n        用戶註冊協議\n        歡迎註冊成為京東用戶！在您註冊過程中，您需要完成我們的註冊流程並通過點擊同意的形式在線簽署以下協議，請您務必仔細閱讀、充分理解協議中的條款內容後再點擊同意（尤其是以粗體或下劃線標識的條款，因為這些條款可能會明確您應履行的義務或對您的權利有所限制）。\n        【請您注意】如果您不同意以下協議全部或任何條款約定，請您停止註冊。您停止註冊後將僅可以瀏覽我們的商品信息但無法享受我們的產品或服務。如您按照註冊流程提示填寫信息，閱讀並點擊同意上述協議且完成全部註冊流程後，即表示您已充分閱讀、理解並接受協議的全部內容，並表明您同意我們可以依據協議內容來處理您的個人信息，並同意我們將您的訂單信息共享給為完成此訂單所必須的第三方合作方（詳情查看\n    &lt;&#x2F;textarea&gt;\n    &lt;br&gt;\n    &lt;button class&#x3D;&quot;btn&quot; disabled&gt;我已經閱讀用戶協議(5)&lt;&#x2F;button&gt;\n    &lt;script&gt;\n        &#x2F;&#x2F; 1. 獲取元素\n        const btn &#x3D; document.querySelector(&#39;.btn&#39;)\n        &#x2F;&#x2F; console.log(btn.innerHTML)  butto按鈕特殊用innerHTML\n        &#x2F;&#x2F; 2. 倒計時\n        let i &#x3D; 5\n        &#x2F;&#x2F; 2.1 開啟定時器\n        let n &#x3D; setInterval(function () &#123;\n            i--\n            btn.innerHTML &#x3D; &#96;我已經閱讀用戶協議($&#123;i&#125;)&#96;\n            if (i &#x3D;&#x3D;&#x3D; 0) &#123;\n                clearInterval(n)  &#x2F;&#x2F; 關閉定時器\n                &#x2F;&#x2F; 定時器停了，我就可以開按鈕\n                btn.disabled &#x3D; false\n                btn.innerHTML &#x3D; &#39;同意&#39;\n            &#125;\n        &#125;, 1000)\n\n    &lt;&#x2F;script&gt;</code></pre>\n<h2 id=\"輪波圖計時器範例\"><a href=\"#輪波圖計時器範例\" class=\"headerlink\" title=\"輪波圖計時器範例\"></a>輪波圖計時器範例</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style&gt;\n  * &#123;\n    box-sizing: border-box;\n  &#125;\n\n  .slider &#123;\n    width: 560px;\n    height: 400px;\n    overflow: hidden;\n  &#125;\n\n  .slider-wrapper &#123;\n    width: 100%;\n    height: 320px;\n  &#125;\n\n  .slider-wrapper img &#123;\n    width: 100%;\n    height: 100%;\n    display: block;\n  &#125;\n\n  .slider-footer &#123;\n    height: 80px;\n    background-color: rgb(100, 67, 68);\n    padding: 12px 12px 0 12px;\n    position: relative;\n  &#125;\n\n  .slider-footer .toggle &#123;\n    position: absolute;\n    right: 0;\n    top: 12px;\n    display: flex;\n  &#125;\n\n  .slider-footer .toggle button &#123;\n    margin-right: 12px;\n    width: 28px;\n    height: 28px;\n    appearance: none;\n    border: none;\n    background: rgba(255, 255, 255, 0.1);\n    color: #fff;\n    border-radius: 4px;\n    cursor: pointer;\n  &#125;\n\n  .slider-footer .toggle button:hover &#123;\n    background: rgba(255, 255, 255, 0.2);\n  &#125;\n\n  .slider-footer p &#123;\n    margin: 0;\n    color: #fff;\n    font-size: 18px;\n    margin-bottom: 10px;\n  &#125;\n\n  .slider-indicator &#123;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    display: flex;\n    align-items: center;\n  &#125;\n\n  .slider-indicator li &#123;\n    width: 8px;\n    height: 8px;\n    margin: 4px;\n    border-radius: 50%;\n    background: #fff;\n    opacity: 0.4;\n    cursor: pointer;\n  &#125;\n\n  .slider-indicator li.active &#123;\n    width: 12px;\n    height: 12px;\n    opacity: 1;\n  &#125;\n&lt;&#x2F;style&gt;</code></pre>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;div class&#x3D;&quot;slider&quot;&gt;\n    &lt;div class&#x3D;&quot;slider-wrapper&quot;&gt;\n      &lt;img src&#x3D;&quot;.&#x2F;images&#x2F;slider01.jpg&quot; alt&#x3D;&quot;&quot; &#x2F;&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div class&#x3D;&quot;slider-footer&quot;&gt;\n      &lt;p&gt;對人類來說會不會太超前了？ &lt;&#x2F;p&gt;\n      &lt;ul class&#x3D;&quot;slider-indicator&quot;&gt;\n        &lt;li class&#x3D;&quot;active&quot;&gt;&lt;&#x2F;li&gt;\n        &lt;li&gt;&lt;&#x2F;li&gt;\n        &lt;li&gt;&lt;&#x2F;li&gt;\n        &lt;li&gt;&lt;&#x2F;li&gt;\n        &lt;li&gt;&lt;&#x2F;li&gt;\n        &lt;li&gt;&lt;&#x2F;li&gt;\n        &lt;li&gt;&lt;&#x2F;li&gt;\n        &lt;li&gt;&lt;&#x2F;li&gt;\n      &lt;&#x2F;ul&gt;\n      &lt;div class&#x3D;&quot;toggle&quot;&gt;\n        &lt;button class&#x3D;&quot;prev&quot;&gt;&lt;&lt;&#x2F;button&gt;\n        &lt;button class&#x3D;&quot;next&quot;&gt;&gt;&lt;&#x2F;button&gt;\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;div&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; 1. 初始數據\n    const sliderData &#x3D; [\n      &#123; url: &#39;.&#x2F;images&#x2F;slider01.jpg&#39;, title: &#39;對人類來說會不會太超前了？ &#39;, color: &#39;rgb(100, 67, 68)&#39; &#125;,\n      &#123; url: &#39;.&#x2F;images&#x2F;slider02.jpg&#39;, title: &#39;開啟劍與雪的黑暗傳說！ &#39;, color: &#39;rgb(43, 35, 26)&#39; &#125;,\n      &#123; url: &#39;.&#x2F;images&#x2F;slider03.jpg&#39;, title: &#39;真正的jo廚出現了！ &#39;, color: &#39;rgb(36, 31, 33)&#39; &#125;,\n      &#123; url: &#39;.&#x2F;images&#x2F;slider04.jpg&#39;, title: &#39;李玉剛：讓世界通過B站看到東方大國文化&#39;, color: &#39;rgb(139, 98, 66)&#39; &#125;,\n      &#123; url: &#39;.&#x2F;images&#x2F;slider05.jpg&#39;, title: &#39;快來分享你的寒假日常吧~&#39;, color: &#39;rgb(67, 90, 92)&#39; &#125;,\n      &#123; url: &#39;.&#x2F;images&#x2F;slider06.jpg&#39;, title: &#39;嗶哩嗶哩小年YEAH&#39;, color: &#39;rgb(166, 131, 143)&#39; &#125;,\n      &#123; url: &#39;.&#x2F;images&#x2F;slider07.jpg&#39;, title: &#39;一站式解決你的電腦配置問題！ ！ ！ &#39;, color: &#39;rgb(53, 29, 25)&#39; &#125;,\n      &#123; url: &#39;.&#x2F;images&#x2F;slider08.jpg&#39;, title: &#39;誰不想和小貓咪貼貼呢！ &#39;, color: &#39;rgb(99, 72, 114)&#39; &#125;,\n    ]\n    &#x2F;&#x2F; 1. 獲取元素 \n    const img &#x3D; document.querySelector(&#39;.slider-wrapper img&#39;)\n    const p &#x3D; document.querySelector(&#39;.slider-footer p&#39;)\n    let i &#x3D; 0  &#x2F;&#x2F; 信號量 控製圖片的張數\n    &#x2F;&#x2F; 2. 開啟定時器\n    &#x2F;&#x2F; console.log(sliderData[i])  拿到對應的對象啦\n    setInterval(function () &#123;\n      i++\n      &#x2F;&#x2F; 無縫銜接位置  一共八張圖片，到了最後一張就是 8， 數組的長度就是 8\n      if (i &gt;&#x3D; sliderData.length) &#123;\n        i &#x3D; 0\n      &#125;\n      &#x2F;&#x2F; console.log(i)\n      &#x2F;&#x2F; console.log(sliderData[i])\n      &#x2F;&#x2F; 更換圖片路徑  \n      img.src &#x3D; sliderData[i].url\n      &#x2F;&#x2F; 把字寫到 p裡面\n      p.innerHTML &#x3D; sliderData[i].title\n      &#x2F;&#x2F; 小圓點\n      &#x2F;&#x2F; 先刪除以前的active\n      document.querySelector(&#39;.slider-indicator .active&#39;).classList.remove(&#39;active&#39;)\n      &#x2F;&#x2F; 只讓當前li添加active\n      document.querySelector(&#96;.slider-indicator li:nth-child($&#123;i + 1&#125;)&#96;).classList.add(&#39;active&#39;)\n    &#125;, 1000)\n\n  &lt;&#x2F;script&gt;</code></pre>\n\n<p><strong>分析：</strong></p>\n<ul>\n<li>①：準備一個數組對象，裡麵包含詳細信息（素材包含）</li>\n<li>②：獲取元素</li>\n<li>③：設置定時器函數<ul>\n<li>設置一個變量++</li>\n<li>找到變量對應的對象</li>\n<li>更改圖片、文字信息</li>\n<li>激活小圓點：移除上一個高亮的類名，當前變量對應的小圓點添加類</li>\n</ul>\n</li>\n<li>④：處理圖片自動復原從頭播放（放到變量++後面，緊挨）<ul>\n<li>如果圖片播放到最後一張， 就是大於等於數組的長度</li>\n<li>則把變量重置為0</li>\n</ul>\n</li>\n</ul>\n","feature":null,"text":"複習：splice() 方法用於添加或刪除陣列中的元素。 注意：這種方法會改變原始陣列。 刪除陣列： splice(起始位置， 刪除的個數) 比如：1 let arr &#x3D; [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;] ...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A4%87%E7%BF%92%EF%BC%9A\"><span class=\"toc-text\">複習：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%81%B2%E6%98%8E%E8%AE%8A%E6%95%B8%E5%84%AA%E5%85%88%E4%BD%BF%E7%94%A8%E5%93%AA%E5%80%8B%EF%BC%9F\"><span class=\"toc-text\">聲明變數優先使用哪個？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%82%BA%E4%BB%80%E9%BA%BCconst%E8%81%B2%E6%98%8E%E7%9A%84%E7%89%A9%E4%BB%B6%E5%8F%AF%E4%BB%A5%E4%BF%AE%E6%94%B9%E8%A3%A1%E9%9D%A2%E7%9A%84%E5%B1%AC%E6%80%A7%EF%BC%9F\"><span class=\"toc-text\">為什麼const聲明的物件可以修改裡面的屬性？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E9%BA%BC%E6%99%82%E5%80%99%E4%BD%BF%E7%94%A8let%E8%81%B2%E6%98%8E%E8%AE%8A%E6%95%B8%EF%BC%9F\"><span class=\"toc-text\">什麼時候使用let聲明變數？</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Web-APIs-%E7%AC%AC1%E5%A4%A9%E7%AD%86%E8%A8%98\"><span class=\"toc-text\">Web APIs - 第1天筆記</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%B4%B9\"><span class=\"toc-text\">介紹</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DOM-%E6%A8%B9\"><span class=\"toc-text\">DOM 樹</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DOM-%E7%AF%80%E9%BB%9E\"><span class=\"toc-text\">DOM 節點</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#document\"><span class=\"toc-text\">document</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8D%B2%E5%8F%96DOM%E5%B0%8D%E8%B1%A1\"><span class=\"toc-text\">獲取DOM對象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0%E5%85%A7%E5%AE%B9\"><span class=\"toc-text\">操作元素內容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0%E5%B1%AC%E6%80%A7\"><span class=\"toc-text\">操作元素屬性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%B1%AC%E6%80%A7%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">常用屬性修改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E6%A8%A3%E5%BC%8F%E5%B1%AC%E6%80%A7\"><span class=\"toc-text\">控制樣式屬性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8B%95%E4%BD%9C%E8%A1%A8%E5%96%AE%E5%85%83%E7%B4%A0%E5%B1%AC%E6%80%A7\"><span class=\"toc-text\">動作表單元素屬性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E8%A8%82%E5%B1%AC%E6%80%A7\"><span class=\"toc-text\">自訂屬性</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%96%93%E6%AD%87%E5%87%BD%E6%95%B8\"><span class=\"toc-text\">間歇函數</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B6%E8%A8%BB%E5%86%8A%E5%80%92%E8%A8%88%E6%99%82-%E7%AF%84%E4%BE%8B\"><span class=\"toc-text\">用戶註冊倒計時(範例)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BC%AA%E6%B3%A2%E5%9C%96%E8%A8%88%E6%99%82%E5%99%A8%E7%AF%84%E4%BE%8B\"><span class=\"toc-text\">輪波圖計時器範例</span></a></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JavaScript Web APIs - 第2天","uid":"b74e92afe19531c6070a34e8d8d93dcd","slug":"2303-2 JS Web APIs 02 事件","date":"2023-03-24T01:22:08.000Z","updated":"2023-03-26T12:06:58.484Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 02 事件.json","keywords":null,"cover":null,"text":" 學會通過為DOM註冊事件來實現可交互的網頁特效。 能夠判斷函數運行的環境並確字 this 所指代的物件 理解事件的作用，知道應用事件的 3 個步驟 學習會為 DOM 註冊事件，實現簡單可交互的網頁特交。 事件事件是程式設計語言中的術語，它是用來描述程式的行為或狀態的，一旦行為或...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"JavaScript 基礎 - 第5天","uid":"866ec5a135e50f1f3d3c59488d09d968","slug":"2303-1 JS 基礎5 對象","date":"2023-03-21T16:00:00.000Z","updated":"2023-03-25T02:06:41.780Z","comments":true,"path":"api/articles/2303-1 JS 基礎5 對象.json","keywords":null,"cover":null,"text":" 知道物件資料類型的特徵，能夠利用陣列物件渲染頁面 理解什麼是物件，掌握定義物件的語法 掌握數學物件的使用 對象 物件為無序的資料的集合，是 JavaScript 資料類型的一種，之前已經學習了數數值型別、字串類型、布林類型、undefined。物件資料類型可以被理解成是一種資料...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}