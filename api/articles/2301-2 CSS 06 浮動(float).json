{"title":"CSS 06-浮動(float)","uid":"9ff528d9337f78a8c4f9529b9dd287e6","slug":"2301-2 CSS 06 浮動(float)","date":"2023-03-15T02:50:27.000Z","updated":"2023-03-27T01:38:12.086Z","comments":true,"path":"api/articles/2301-2 CSS 06 浮動(float).json","keywords":null,"cover":null,"content":"<h2 id=\"1-浮動-float\"><a href=\"#1-浮動-float\" class=\"headerlink\" title=\"1. 浮動(float)\"></a>1. 浮動(float)</h2><h3 id=\"目標\"><a href=\"#目標\" class=\"headerlink\" title=\"目標\"></a>目標</h3><ul>\n<li><strong>記憶</strong><ul>\n<li>CSS 的佈局的三種機制</li>\n</ul>\n</li>\n<li><strong>理解</strong><ul>\n<li>普通流在佈局中的特點</li>\n<li>為什麼用浮動</li>\n<li>為什麼要清除浮動</li>\n</ul>\n</li>\n<li><strong>應用</strong><ul>\n<li>利用浮動完成巡覽列案例</li>\n<li>清除浮動</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-1-CSS-佈局的三種機制\"><a href=\"#1-1-CSS-佈局的三種機制\" class=\"headerlink\" title=\"1.1 CSS 佈局的三種機制\"></a>1.1 CSS 佈局的三種機制</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>網頁佈局的核心——就是<strong>用 CSS 來擺放盒子</strong>。</p></blockquote>\n<p>CSS 提供了 <strong>3 種機制</strong>來設置盒子的擺放位置，分別是<strong>普通流</strong>（標準流）、<strong>浮動</strong>和<strong>定位</strong>，其中： </p>\n<ol>\n<li><strong>普通流</strong>（標準流）<ul>\n<li><strong>塊級元素</strong>會獨佔一行，<strong>從上向下</strong>順序排列；<ul>\n<li>常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table</li>\n</ul>\n</li>\n<li><strong>行內元素</strong>會按照順序，<strong>從左到右</strong>順序排列，碰到父元素邊緣則自動換行；<ul>\n<li>常用元素：span、a、i、em等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>浮動</strong><ul>\n<li>讓盒子從普通流中<strong>浮</strong>起來,主要作用讓多個塊級盒子一行顯示。</li>\n</ul>\n</li>\n<li><strong>定位</strong><ul>\n<li>將盒子<strong>定</strong>在流覽器的某一個<strong>位</strong>置——CSS 離不開定位，特別是後面的 js 特效。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-為什麼需要浮動？\"><a href=\"#1-2-為什麼需要浮動？\" class=\"headerlink\" title=\"1.2 為什麼需要浮動？\"></a>1.2 為什麼需要浮動？</h3><p>思考題：</p>\n<p> 首先要思考以下2個佈局中最常見的問題？</p>\n<ol>\n<li><p>如何讓多個盒子(div)水準排列成一行？</p>\n</li>\n<li><p>如何實現盒子的左右對齊？</p>\n</li>\n</ol>\n<p>雖然學過行內塊（inline-block） 但是他卻有自己的缺陷：</p>\n<ol>\n<li>它可以實現多個元素一行顯示，但是中間會有<em>空白縫隙</em>，不能滿足以上第一個問題。</li>\n<li>它<em>不能</em>實現以上第二個問題，盒子左右對齊</li>\n</ol>\n<p><strong>總結</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>因為一些網頁佈局要求，標準流不能滿足我們的需要了，因此我們需要浮動來完成網頁佈局。</p></blockquote>\n<h3 id=\"1-3-什麼是浮動-float\"><a href=\"#1-3-什麼是浮動-float\" class=\"headerlink\" title=\"1.3  什麼是浮動(float)\"></a>1.3  什麼是浮動(float)</h3><p><strong>概念</strong>：元素的浮動是指<strong>設置了浮動屬性的元素</strong>會</p>\n<ol>\n<li>脫離標準普通流的控制</li>\n<li>移動到指定位置。</li>\n</ol>\n<h4 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h4><ol>\n<li><strong>讓多個盒子(div)水準排列成一行</strong>，使得浮動成為佈局的重要手段。</li>\n<li>可以實現盒子的左右對齊等等..</li>\n<li>浮動最早是用來<strong>控制圖片</strong>，實現<strong>文字環繞圖片的效果</strong>。</li>\n</ol>\n<h4 id=\"語法\"><a href=\"#語法\" class=\"headerlink\" title=\"語法\"></a>語法</h4><p>在 CSS 中，通過 <code>float</code>  屬性定義<strong>浮動</strong>，語法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">選擇器 &#123; float: 屬性值; &#125;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>屬性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>none</strong></td>\n<td>元素不浮動（<strong>預設值</strong>）</td>\n</tr>\n<tr>\n<td><strong>left</strong></td>\n<td>元素向<strong>左</strong>浮動</td>\n</tr>\n<tr>\n<td><strong>right</strong></td>\n<td>元素向<strong>右</strong>浮動</td>\n</tr>\n</tbody></table>\n<p>記法 <code>float</code>   —  浮 漏 特</p>\n<h4 id=\"1-浮動口訣之-浮\"><a href=\"#1-浮動口訣之-浮\" class=\"headerlink\" title=\"1). 浮動口訣之 浮\"></a>1). 浮動口訣之 浮</h4><p>浮動——浮<del>浮</del>浮~~~漂浮在普通流的上面。  脫離標準流。 俗稱 “<strong>脫標</strong>”   </p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: skyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>小結</strong>：</p>\n<ul>\n<li><code>float</code> 屬性會讓盒子漂浮在標準流的上面，所以第二個標準流的盒子跑到浮動盒子的<strong>底下</strong>了。</li>\n</ul>\n<h4 id=\"2-浮動口訣之-漏\"><a href=\"#2-浮動口訣之-漏\" class=\"headerlink\" title=\"2).  浮動口訣之 漏\"></a>2).  浮動口訣之 漏</h4><p>浮動——漏<del>漏</del>漏~  浮動的盒子，把自己原來的位置漏給下面標準流的盒子，就是不佔有原來位置，是脫離標準流的，我們俗稱 “脫標”。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.5</span>);</span><br><span class=\"line\">    <span class=\"comment\">/* 讓第 1 個盒子漂浮起來，不占位置 */</span></span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: skyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p> 所以，box2下面的其實就是跑到box1盒子下面了， 被box1給壓住了，遮擋起來了</p>\n<h4 id=\"3-浮動口訣之-特\"><a href=\"#3-浮動口訣之-特\" class=\"headerlink\" title=\"3). 浮動口訣之 特\"></a>3). 浮動口訣之 特</h4><p>浮動——特性  float屬性會<strong>改變元素display屬性</strong>。</p>\n<p>任何元素都可以浮動。浮動元素會生成一個塊級框，而不論它本身是何種元素。 生成的塊級框和我們前面的行內塊極其相似。</p>\n<p>案例——div 水準排列</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: pink;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* 轉換為行內塊元素，可以水準顯示，不過 div 之間有間隙，不方便處理 */</span></span><br><span class=\"line\">    <span class=\"comment\">/* display: inline-block; */</span></span><br><span class=\"line\">    <span class=\"comment\">/* 設置浮動屬性，可以讓 div 水準排列，並且沒有間隙 */</span></span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.two</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: hotpink;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意： 浮動的元素互相貼靠一起的，但是如果父級寬度裝不下這些浮動的盒子， 多出的盒子會另起一行對齊</strong></p>\n<h3 id=\"1-4-浮動-float-小結\"><a href=\"#1-4-浮動-float-小結\" class=\"headerlink\" title=\"1.4 浮動(float)小結\"></a>1.4 浮動(float)小結</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我們使用浮動的核心目的——讓多個塊級盒子在同一行顯示。 因為這是我們最常見的一種佈局方式</p></blockquote>\n<p><strong>float</strong> —— <strong>浮漏特</strong></p>\n<table>\n<thead>\n<tr>\n<th>特點</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>浮</td>\n<td>加了浮動的盒子<strong>是浮起來</strong>的，漂浮在其他標準流盒子的上面。</td>\n</tr>\n<tr>\n<td>漏</td>\n<td>加了浮動的盒子<strong>是不占位置的</strong>，它原來的位置<strong>漏給了標準流的盒子</strong>。</td>\n</tr>\n<tr>\n<td>特</td>\n<td><strong>特別注意</strong>：浮動元素會改變display屬性， 類似轉換為了行內塊，但是元素之間沒有空白縫隙</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-5-浮動-float-的應用（重要）\"><a href=\"#1-5-浮動-float-的應用（重要）\" class=\"headerlink\" title=\"1.5 浮動(float)的應用（重要）\"></a>1.5 浮動(float)的應用（重要）</h3><h4 id=\"浮動和標準流的父盒子搭配\"><a href=\"#浮動和標準流的父盒子搭配\" class=\"headerlink\" title=\"浮動和標準流的父盒子搭配\"></a>浮動和標準流的父盒子搭配</h4><p>我們知道，浮動是脫標的，會影響下面的標準流元素，此時，我們需要給浮動的元素添加一個標準流的父親，這樣，最大化的減小了對其他標準流的影響。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一個完整的網頁，是 標準流 +  浮動 +  我們後面要講的定位 一起完成的。</p></blockquote>\n<p>注意，實際重要的巡覽列中，我們不會直接用連結a 而是用 li  包含連結(li+a)的做法。</p>\n<ol>\n<li>li+a 語義更清晰，一看這就是有條理的清單型內容。</li>\n<li>如果直接用a，搜尋引擎容易辨別為有堆砌關鍵字嫌疑（故意堆砌關鍵字容易被搜尋引擎有降權的風險），從而影響網站排名</li>\n</ol>\n<h3 id=\"1-6-浮動-float-的擴展\"><a href=\"#1-6-浮動-float-的擴展\" class=\"headerlink\" title=\"1.6  浮動(float)的擴展\"></a>1.6  浮動(float)的擴展</h3><h4 id=\"1-浮動元素與父盒子的關係\"><a href=\"#1-浮動元素與父盒子的關係\" class=\"headerlink\" title=\"1). 浮動元素與父盒子的關係\"></a>1). 浮動元素與父盒子的關係</h4><ul>\n<li>子盒子的浮動參照父盒子對齊</li>\n<li>不會與父盒子的邊框重疊，也不會超過父盒子的內邊距</li>\n</ul>\n<h4 id=\"2-浮動元素與兄弟盒子的關係\"><a href=\"#2-浮動元素與兄弟盒子的關係\" class=\"headerlink\" title=\"2). 浮動元素與兄弟盒子的關係\"></a>2). 浮動元素與兄弟盒子的關係</h4><p>在一個父級盒子中，如果<strong>前一個兄弟盒子</strong>是：</p>\n<ul>\n<li><strong>浮動</strong>的，那麼<strong>當前盒子</strong>會與前一個盒子的<em>頂部對齊</em>；</li>\n<li><strong>普通流</strong>的，那麼<strong>當前盒子</strong>會顯示在前一個兄弟<em>盒子的下方</em>。</li>\n</ul>\n<hr>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>浮動只會影響當前的或者是後面的標準流盒子，不會影響前面的標準流。</p></blockquote>\n<p><strong>建議</strong></p>\n<p><strong>如果一個盒子裡面有多個子盒子，如果其中一個盒子浮動了，其他兄弟也應該浮動。防止引起問題</strong></p>\n<h2 id=\"2-清除浮動\"><a href=\"#2-清除浮動\" class=\"headerlink\" title=\"2. 清除浮動\"></a>2. 清除浮動</h2><h3 id=\"2-1-為什麼要清除浮動\"><a href=\"#2-1-為什麼要清除浮動\" class=\"headerlink\" title=\"2.1 為什麼要清除浮動\"></a>2.1 為什麼要清除浮動</h3><p>因為父級盒子很多情況下，不方便給高度，但是<strong>子盒子浮動就不佔有位置</strong>，最後父級盒子<em>高度為0</em>，就影響了下面的標準流盒子。</p>\n<ul>\n<li>總結：<ul>\n<li>由於浮動元素不再佔用原文檔流的位置，所以它會對後面的元素排版產生影響</li>\n<li>準確地說，並不是清除浮動，而是<strong>清除浮動後造成的影響</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-2-清除浮動本質\"><a href=\"#2-2-清除浮動本質\" class=\"headerlink\" title=\"2.2 清除浮動本質\"></a>2.2 清除浮動本質</h3><p> 清除浮動主要為了<strong>解決父級元素因為子級浮動引起內部高度為0 的問題。</strong><br> 清除浮動之後， <strong>父級就會根據浮動的子盒子自動檢測高度。</strong><br> <strong>父級有了高度，就不會影響下面的標準流了</strong></p>\n<h3 id=\"2-3-清除浮動的方法\"><a href=\"#2-3-清除浮動的方法\" class=\"headerlink\" title=\"2.3 清除浮動的方法\"></a>2.3 清除浮動的方法</h3><p>在CSS中，clear屬性用於清除浮動，在這裡，我們先記住清除浮動的方法，具體的原理，等我們學完css會再回頭分析。</p>\n<ul>\n<li>語法：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">選擇器&#123;clear:屬性值;&#125;   clear 清除  </span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>屬性值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>left</td>\n<td>不允許左側有浮動元素（清除左側浮動的影響）</td>\n</tr>\n<tr>\n<td>right</td>\n<td>不允許右側有浮動元素（清除右側浮動的影響）</td>\n</tr>\n<tr>\n<td>both</td>\n<td>同時清除左右兩側浮動的影響</td>\n</tr>\n</tbody></table>\n<p>但是我們實際工作中， 幾乎只用 clear: both;</p>\n<h4 id=\"1-額外標籤法-隔牆法\"><a href=\"#1-額外標籤法-隔牆法\" class=\"headerlink\" title=\"1).額外標籤法(隔牆法)\"></a>1).額外標籤法(隔牆法)</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">是W3C推薦的做法是通過在浮動元素末尾添加一個空的標籤</span><br><span class=\"line\">例如 <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">”clear:both”</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>，或則其他標籤br等亦可。</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>優點： 通俗易懂，書寫方便</li>\n<li>缺點： 添加許多無意義的標籤，結構化較差。</li>\n</ul>\n<h4 id=\"2-父級添加overflow屬性方法\"><a href=\"#2-父級添加overflow屬性方法\" class=\"headerlink\" title=\"2).父級添加overflow屬性方法\"></a>2).父級添加overflow屬性方法</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">可以給父級添加： <span class=\"attribute\">overflow</span>為 hidden| auto| scroll  都可以實現。</span><br></pre></td></tr></table></figure>\n\n<p>優點：  代碼簡潔</p>\n<p>缺點：  內容增多時候容易造成不會自動換行導致內容被隱藏掉，無法顯示需要溢出的元素。</p>\n<h4 id=\"3-使用after偽元素清除浮動\"><a href=\"#3-使用after偽元素清除浮動\" class=\"headerlink\" title=\"3).使用after偽元素清除浮動\"></a>3).使用after偽元素清除浮動</h4><p><strong>:after 方式為空元素額外標籤法的升級版，好處是不用單獨加標籤了</strong> </p>\n<p>使用方法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span> &#123;  </span><br><span class=\"line\">   <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>; </span><br><span class=\"line\">   <span class=\"attribute\">display</span>: block; </span><br><span class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">   <span class=\"attribute\">clear</span>: both; </span><br><span class=\"line\">   <span class=\"attribute\">visibility</span>: hidden;  </span><br><span class=\"line\"> &#125;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span> &#123;*zoom: <span class=\"number\">1</span>;&#125;   <span class=\"comment\">/* IE6、7 專有 */</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>優點： 符合閉合浮動思想  結構語義化正確</li>\n<li>缺點： 由於IE6-7不支持:after，使用 zoom:1觸發 hasLayout。</li>\n</ul>\n<h4 id=\"4-使用雙偽元素清除浮動\"><a href=\"#4-使用雙偽元素清除浮動\" class=\"headerlink\" title=\"4).使用雙偽元素清除浮動\"></a>4).使用雙偽元素清除浮動</h4><p>使用方法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:before</span>,<span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">content</span>:<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>:table; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\"> <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span> &#123;</span><br><span class=\"line\">  *zoom:<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>優點：  代碼更簡潔</p>\n</li>\n<li><p>缺點：  由於IE6-7不支持:after，使用 zoom:1觸發 hasLayout。</p>\n</li>\n</ul>\n<h3 id=\"2-4-清除浮動總結\"><a href=\"#2-4-清除浮動總結\" class=\"headerlink\" title=\"2.4 清除浮動總結\"></a>2.4 清除浮動總結</h3><p><strong>什麼時候用清除浮動？</strong></p>\n<ol>\n<li>父級沒高度</li>\n<li>子盒子浮動了</li>\n<li>影響下面佈局了，我們就應該清除浮動了。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>清除浮動的方式</th>\n<th align=\"left\">優點</th>\n<th align=\"left\">缺點</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>額外標籤法（隔牆法）</td>\n<td align=\"left\">通俗易懂，書寫方便</td>\n<td align=\"left\">添加許多無意義的標籤，結構化較差。</td>\n</tr>\n<tr>\n<td>父級overflow:hidden;</td>\n<td align=\"left\">書寫簡單</td>\n<td align=\"left\">溢出隱藏</td>\n</tr>\n<tr>\n<td>父級after偽元素</td>\n<td align=\"left\">結構語義化正確</td>\n<td align=\"left\">由於IE6-7不支持:after，相容性問題</td>\n</tr>\n<tr>\n<td>父級雙偽元素</td>\n<td align=\"left\">結構語義化正確</td>\n<td align=\"left\">由於IE6-7不支持:after，相容性問題</td>\n</tr>\n</tbody></table>\n","feature":null,"text":"1. 浮動(float)目標 記憶 CSS 的佈局的三種機制 理解 普通流在佈局中的特點 為什麼用浮動 為什麼要清除浮動 應用 利用浮動完成巡覽列案例 清除浮動...","permalink":"/post/2301-2 CSS 06 浮動(float)","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%B5%AE%E5%8B%95-float\"><span class=\"toc-text\">1. 浮動(float)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E6%A8%99\"><span class=\"toc-text\">目標</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-CSS-%E4%BD%88%E5%B1%80%E7%9A%84%E4%B8%89%E7%A8%AE%E6%A9%9F%E5%88%B6\"><span class=\"toc-text\">1.1 CSS 佈局的三種機制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E7%82%BA%E4%BB%80%E9%BA%BC%E9%9C%80%E8%A6%81%E6%B5%AE%E5%8B%95%EF%BC%9F\"><span class=\"toc-text\">1.2 為什麼需要浮動？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E4%BB%80%E9%BA%BC%E6%98%AF%E6%B5%AE%E5%8B%95-float\"><span class=\"toc-text\">1.3  什麼是浮動(float)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AA%9E%E6%B3%95\"><span class=\"toc-text\">語法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%B5%AE%E5%8B%95%E5%8F%A3%E8%A8%A3%E4%B9%8B-%E6%B5%AE\"><span class=\"toc-text\">1). 浮動口訣之 浮</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E6%B5%AE%E5%8B%95%E5%8F%A3%E8%A8%A3%E4%B9%8B-%E6%BC%8F\"><span class=\"toc-text\">2).  浮動口訣之 漏</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E6%B5%AE%E5%8B%95%E5%8F%A3%E8%A8%A3%E4%B9%8B-%E7%89%B9\"><span class=\"toc-text\">3). 浮動口訣之 特</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E6%B5%AE%E5%8B%95-float-%E5%B0%8F%E7%B5%90\"><span class=\"toc-text\">1.4 浮動(float)小結</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-%E6%B5%AE%E5%8B%95-float-%E7%9A%84%E6%87%89%E7%94%A8%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89\"><span class=\"toc-text\">1.5 浮動(float)的應用（重要）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E5%8B%95%E5%92%8C%E6%A8%99%E6%BA%96%E6%B5%81%E7%9A%84%E7%88%B6%E7%9B%92%E5%AD%90%E6%90%AD%E9%85%8D\"><span class=\"toc-text\">浮動和標準流的父盒子搭配</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-6-%E6%B5%AE%E5%8B%95-float-%E7%9A%84%E6%93%B4%E5%B1%95\"><span class=\"toc-text\">1.6  浮動(float)的擴展</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E6%B5%AE%E5%8B%95%E5%85%83%E7%B4%A0%E8%88%87%E7%88%B6%E7%9B%92%E5%AD%90%E7%9A%84%E9%97%9C%E4%BF%82\"><span class=\"toc-text\">1). 浮動元素與父盒子的關係</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E6%B5%AE%E5%8B%95%E5%85%83%E7%B4%A0%E8%88%87%E5%85%84%E5%BC%9F%E7%9B%92%E5%AD%90%E7%9A%84%E9%97%9C%E4%BF%82\"><span class=\"toc-text\">2). 浮動元素與兄弟盒子的關係</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95\"><span class=\"toc-text\">2. 清除浮動</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95\"><span class=\"toc-text\">2.1 為什麼要清除浮動</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95%E6%9C%AC%E8%B3%AA\"><span class=\"toc-text\">2.2 清除浮動本質</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.3 清除浮動的方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E9%A1%8D%E5%A4%96%E6%A8%99%E7%B1%A4%E6%B3%95-%E9%9A%94%E7%89%86%E6%B3%95\"><span class=\"toc-text\">1).額外標籤法(隔牆法)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E7%88%B6%E7%B4%9A%E6%B7%BB%E5%8A%A0overflow%E5%B1%AC%E6%80%A7%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2).父級添加overflow屬性方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E4%BD%BF%E7%94%A8after%E5%81%BD%E5%85%83%E7%B4%A0%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95\"><span class=\"toc-text\">3).使用after偽元素清除浮動</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E4%BD%BF%E7%94%A8%E9%9B%99%E5%81%BD%E5%85%83%E7%B4%A0%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95\"><span class=\"toc-text\">4).使用雙偽元素清除浮動</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95%E7%B8%BD%E7%B5%90\"><span class=\"toc-text\">2.4 清除浮動總結</span></a></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"CSS 07-定位(position)","uid":"a80bc05c620a4e285b16be71646cc7c5","slug":"2301-2 CSS 07 定位(position)","date":"2023-03-16T02:50:27.000Z","updated":"2023-03-27T01:38:16.278Z","comments":true,"path":"api/articles/2301-2 CSS 07 定位(position).json","keywords":null,"cover":null,"text":"定位(position)目標 理解 為什麼要用定位 定位的4種分類 4種定位的各自特點 為什麼常用子絕父相佈局 1. CSS 佈局的三種機制 網頁佈局的核心 —...","permalink":"/post/2301-2 CSS 07 定位(position)","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"CSS 05-盒子模型+拓展規範","uid":"8c021a3b84d7a0602ad12ca159c8b3ca","slug":"2301-2 CSS 05 盒子模型+拓展規範","date":"2023-03-14T02:50:27.000Z","updated":"2023-03-27T01:38:07.612Z","comments":true,"path":"api/articles/2301-2 CSS 05 盒子模型+拓展規範.json","keywords":null,"cover":null,"text":"盒子模型（CSS重點） css學習三大重點： css 盒子模型 、 浮動 、 定位 目標： 理解： 盒子模型有那四部分組成 內邊距的作用以及對盒子的影響 pad...","permalink":"/post/2301-2 CSS 05 盒子模型+拓展規範","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}