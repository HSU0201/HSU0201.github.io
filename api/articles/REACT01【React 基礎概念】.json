{"title":"React 基礎概念","uid":"0accc38d4c4501dbdd10e33fbe16b72b","slug":"REACT01【React 基礎概念】","date":"2024-01-25T04:20:05.000Z","updated":"2024-02-13T00:54:37.062Z","comments":true,"path":"api/articles/REACT01【React 基礎概念】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/blog-Article-Cover/734257355c559d394eb900a70ea03a08.jpg?raw=true","content":"<h1 id=\"01-【React-基礎概念】\"><a href=\"#01-【React-基礎概念】\" class=\"headerlink\" title=\"01 【React 基礎概念】\"></a>01 【React 基礎概念】</h1><h2 id=\"1-React-簡介\"><a href=\"#1-React-簡介\" class=\"headerlink\" title=\"1. React 簡介\"></a>1. React 簡介</h2><p>Facebook 於 2013 年發表了 React。在發表當時 Facebook 內部早已使用 React 解決許多內部問題。技術上來說 React 並不是框架，而是一個用來渲染 UI 組件的函式庫。React 通常會配合其他函式庫來建立應用程式：例如 React 搭配 React Native 建立手機程式、React 與 ReactDOM 建立網路程式…等等。</p>\n<p>由於 React 與 ReactDOM 通常會搭在一起用，React 在通俗上會被理解為 <a href=\"https://developer.mozilla.org/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">JavaScript 框架</a>。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>框架是個針對軟體構建，提供完整解決方案的函式庫。這些選項能讓應用程式，開始能預測和同質化。可預測性讓軟體能擴展到巨大的規模時依舊能維護；可預測性和可維護性則對軟體的健康和長壽至關重要。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Vue 是一個流行的 JavaScript 框架，由中國團隊維護和開發。然而，在台灣的公家單位中，可能出於安全性或政治等因素，不願意或不被允許使用來自中國的技術產品。</p></blockquote>\n<h3 id=\"1-1-react-是什麼？\"><a href=\"#1-1-react-是什麼？\" class=\"headerlink\" title=\"1.1 react 是什麼？\"></a>1.1 react 是什麼？</h3><p><strong>React</strong> 用來實作使用者操作介面的 JavaScript 函式庫 ~ reactjs.org。</p>\n<p><strong>React</strong> 用於網站或原生使用者操作介面的函式庫 ~ react.dev</p>\n<ul>\n<li>是一個將資料渲染為 HTML 視圖的開源 JS 庫</li>\n<li>它遵循基於元件的方法，有助於建構可重用的 UI 元件</li>\n<li>它用於開發複雜的互動式的 web 和移動 UI</li>\n</ul>\n<h3 id=\"1-2-React-是什麼-what-is\"><a href=\"#1-2-React-是什麼-what-is\" class=\"headerlink\" title=\"1.2 React 是什麼 (what is)\"></a>1.2 React 是什麼 (what is)</h3><ol>\n<li>由 Meta(Facebook) 創造與維護</li>\n<li>最早對外發佈於 2013 年，目前為 v18(2022&#x2F;3)</li>\n<li>React 通常指的是瀏覽器端的網頁應用程式以 CSR 與 SPA 技術來開發</li>\n<li>可延伸至伺服器端的 SSR&#x2F;SSG 技術(Next)</li>\n<li>可延伸至手機 App 開發(React Native)</li>\n<li>開放原始碼授權(MIT)</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>React 不是完整的程式框架(Framework)，相當於軟體 MVC 設計模式的 View(視圖)</p></blockquote>\n<h3 id=\"1-3-React-五大特點\"><a href=\"#1-3-React-五大特點\" class=\"headerlink\" title=\"1.3 React 五大特點\"></a>1.3 React 五大特點</h3><p><img src=\"https://github.com/HSU0201/images/blob/main/react/react.png?raw=true\" alt=\"React 五大特性\"><br>◎ Photo by iSpan</p>\n<ol>\n<li>**Virtual DOM(虛擬 DOM)**：React 使用虛擬 DOM 來代表真實 DOM，提高了應用程序的性能。</li>\n<li><strong>單向資料流</strong>：React 採用單向資料流，從父組件向子組件傳遞資料，使程式易於除錯和最佳化。</li>\n<li><strong>宣告式程式開發</strong>：React 使用類似 HTML 的語法來撰寫元件，處理 DOM 事件，使程式易於維護與除錯。</li>\n<li><strong>以元件為基礎</strong>：React 以元件為基礎，使用類別或函式來開發，並組合它們以拆分功能和介面。</li>\n<li><strong>JSX</strong>：JSX 是 JavaScript 的語法擴充，用於建立虛擬 DOM，允許在 JavaScript 中嵌入類似 HTML 的標記。</li>\n</ol>\n<h3 id=\"1-4-React-Ecosystem-生態圈\"><a href=\"#1-4-React-Ecosystem-生態圈\" class=\"headerlink\" title=\"1.4 React Ecosystem(生態圈)\"></a>1.4 React Ecosystem(生態圈)</h3><table>\n<thead>\n<tr>\n<th>分類</th>\n<th>工具&#x2F;庫</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SSR&#x2F;SSG</td>\n<td>Next</td>\n</tr>\n<tr>\n<td></td>\n<td>Remix</td>\n</tr>\n<tr>\n<td>State Management(狀態管理)</td>\n<td>Redux Toolkit</td>\n</tr>\n<tr>\n<td></td>\n<td>Zustand</td>\n</tr>\n<tr>\n<td>Styling(樣式)</td>\n<td>Styled Components</td>\n</tr>\n<tr>\n<td></td>\n<td>Emotion</td>\n</tr>\n<tr>\n<td></td>\n<td>CSS Modules</td>\n</tr>\n<tr>\n<td></td>\n<td>Tailwind (整合)</td>\n</tr>\n<tr>\n<td>UI libraries(UI 庫)</td>\n<td>MUI</td>\n</tr>\n<tr>\n<td></td>\n<td>Ant Design</td>\n</tr>\n<tr>\n<td></td>\n<td>Chakra UI</td>\n</tr>\n<tr>\n<td></td>\n<td>React Bootstrap (整合)</td>\n</tr>\n<tr>\n<td>Mobile(行動裝置)</td>\n<td>React Native</td>\n</tr>\n</tbody></table>\n<p><strong>為什麼學？</strong></p>\n<p>1.原生 JS 操作 DOM 繁瑣，效率低</p>\n<p>2.使用 JS 直接操作 DOM,瀏覽器會進行大量的重繪重排</p>\n<p>3.原生 JS 沒有元件化編碼方案，代碼複用低</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前置工作~ 了解 npm 的知識：</p>\n<p><a href=\"https://blog.csdn.net/qq_25502269/article/details/79346545\">npm</a></p></blockquote>\n<h2 id=\"2-React-基礎案例\"><a href=\"#2-React-基礎案例\" class=\"headerlink\" title=\"2. React 基礎案例\"></a>2. React 基礎案例</h2><h2 id=\"3-虛擬-DOM（Virtual-DOM）\"><a href=\"#3-虛擬-DOM（Virtual-DOM）\" class=\"headerlink\" title=\"3. 虛擬 DOM（Virtual DOM）\"></a>3. 虛擬 DOM（Virtual DOM）</h2><p>虛擬 DOM 是 React 中的一個核心概念，它在記憶體中構建了一個樹狀結構，用來表示真實 DOM 的抽象。React 使用虛擬 DOM 以最小化對實際 DOM 的操作，從而提高應用程式的性能和效能。</p>\n<h3 id=\"工作原理\"><a href=\"#工作原理\" class=\"headerlink\" title=\"工作原理\"></a>工作原理</h3><ol>\n<li><p><strong>構建虛擬 DOM：</strong> 當 React 應用程式進行渲染時，首先構建一個虛擬 DOM，這是一個 JavaScript 物件，包含整個應用程式的 UI 結構和狀態。虛擬 DOM 的構建基於 React 元件的層次結構。</p>\n</li>\n<li><p><strong>狀態變更引發更新：</strong> 當應用程式的狀態發生變化時，React 重新構建虛擬 DOM。新的虛擬 DOM 與之前的進行比較，找出變化的部分。</p>\n</li>\n<li><p><strong>虛擬 DOM 的比較：</strong> React 使用「調和（Reconciliation）」演算法，比較新的虛擬 DOM 與之前的虛擬 DOM，找出差異。這個比較是高效的，因為虛擬 DOM 是輕量級的，存在於記憶體中。</p>\n</li>\n</ol>\n<p><img src=\"https://github.com/HSU0201/images/blob/main/react/3.jpg?raw=true\" alt=\"虛擬DOM與真實DOM\"><br>◎ Photo by iSpan</p>\n<ol start=\"4\">\n<li><p><strong>差異更新：</strong> React 計算出虛擬 DOM 的變化部分，僅更新這些部分，而不是整個真實 DOM。這節省計算資源，提高性能。</p>\n</li>\n<li><p><strong>產生真實 DOM 操作：</strong> 根據虛擬 DOM 的變化，React 生成對應的真實 DOM 操作，例如新增、更新或刪除元素。</p>\n</li>\n<li><p><strong>應用變化：</strong> React 將這些真實 DOM 操作應用到實際 DOM 上，保持 UI 與應用程式狀態同步。</p>\n</li>\n</ol>\n<h3 id=\"優勢\"><a href=\"#優勢\" class=\"headerlink\" title=\"優勢\"></a>優勢</h3><ul>\n<li><p><strong>性能優化：</strong> 透過最小化對實際 DOM 的直接操作，減少瀏覽器的重新繪製次數，提高應用程式性能。</p>\n</li>\n<li><p><strong>開發效率：</strong> React 開發者無需手動處理 DOM 操作，專注於應用程式狀態和 UI 邏輯，React 會自動優化和管理 DOM 更新過程。</p>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>總的來說，虛擬 DOM 是 React 實現高效且快速 UI 更新的核心機制之一。</p></blockquote>\n<h2 id=\"4-單向資料流程（One-Way-Data-Flow）\"><a href=\"#4-單向資料流程（One-Way-Data-Flow）\" class=\"headerlink\" title=\"4. 單向資料流程（One-Way Data Flow）\"></a>4. 單向資料流程（One-Way Data Flow）</h2><p>單向資料流程是一種軟體設計模式，其中資料在應用程式中的流動方向是單一且明確的。這種模式通常應用在使用者介面（UI）的開發中，特別是在 React 等前端框架中。以下是單向資料流程的一些優缺點：</p>\n<h3 id=\"優點：\"><a href=\"#優點：\" class=\"headerlink\" title=\"優點：\"></a>優點：</h3><ul>\n<li><strong>可預測性：</strong> 單向資料流程使應用程式的狀態變得可預測，因為資料的流動是單一方向的，不會有雙向綁定可能引起的混亂。</li>\n<li><strong>易於追蹤錯誤：</strong> 因為資料流動是單一方向的，當應用程式中發生錯誤時，可以更輕鬆地追蹤錯誤的來源，不需要考慮雙向綁定可能帶來的複雜性。</li>\n<li><strong>可維護性：</strong> 單向資料流程使應用程式的結構更清晰，易於維護。開發者更容易理解資料的流動路徑，並進行相應的修改。</li>\n<li><strong>組件化：</strong> 單向資料流程通常與組件化的開發風格相結合，每個組件都可以被看作是一個獨立的單位，這使得代碼的重用性更強，也更容易進行單元測試。</li>\n</ul>\n<h3 id=\"缺點：\"><a href=\"#缺點：\" class=\"headerlink\" title=\"缺點：\"></a>缺點：</h3><ul>\n<li><strong>複雜性：</strong> 對於小型應用程式，單向資料流程可能會帶來一些不必要的複雜性。在某些情況下，雙向綁定可能更加簡單和直觀。</li>\n<li><strong>學習曲線：</strong> 對於初學者來說，單向資料流程的學習曲線可能相對較陡峭。理解資料的單向流動可能需要一些時間和實踐。</li>\n<li><strong>冗餘代碼：</strong> 在某些情況下，為了實現單向資料流程，可能需要寫更多的冗餘代碼，這可能會增加開發時間和代碼量。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>總的來說，單向資料流程在大型應用程式和團隊協作中通常表現得更好，因為它提供了更高的可維護性和可預測性。然而，對於較小的專案或個人開發者來說，可能需要權衡其複雜性和學習成本。</p></blockquote>\n<h2 id=\"DEEP-DIVE-“HTML-in-JS”-和-“CSS-in-JS”\"><a href=\"#DEEP-DIVE-“HTML-in-JS”-和-“CSS-in-JS”\" class=\"headerlink\" title=\"[DEEP DIVE] “HTML in JS” 和 “CSS in JS”\"></a>[<strong>DEEP DIVE</strong>] “HTML in JS” 和 “CSS in JS”</h2><p>“HTML in JS” 和 “CSS in JS” 是指在 JavaScript 文件中直接嵌入 HTML 和 CSS 的一種開發模式。這種模式通常與一些 JavaScript 框架或庫結合使用，例如 React，Vue，或者一些 CSS-in-JS 的庫（如 Styled Components）。</p>\n<h3 id=\"HTML-in-JS：\"><a href=\"#HTML-in-JS：\" class=\"headerlink\" title=\"HTML in JS：\"></a>HTML in JS：</h3><p>在 React 中，JSX（JavaScript XML）是一種語法擴展，它允許開發者在 JavaScript 文件中直接撰寫類似 XML（或 HTML）的語法。JSX 最終會被編譯成 JavaScript。以下是一個簡單的 React 組件，展示了 HTML 在 JavaScript 文件中的使用：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">MyComponent</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, JSX!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is an example of HTML in JS using JSX.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">MyComponent</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這種方式使得 UI 的結構和邏輯能夠更加緊密地結合在一起，方便了組件的定義和維護。</p>\n<h3 id=\"CSS-in-JS：\"><a href=\"#CSS-in-JS：\" class=\"headerlink\" title=\"CSS in JS：\"></a>CSS in JS：</h3><p>“CSS in JS” 是一種將 CSS 代碼嵌入到 JavaScript 文件中的模式。這種方式可以提供一些額外的好處，如範圍作用域（Scoped Styles）和動態生成樣式。以下是使用 Styled Components 库的一個簡單範例：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> styled <span class=\"keyword\">from</span> <span class=\"string\">&quot;styled-components&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">StyledDiv</span> = styled.<span class=\"property\">div</span><span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">  background-color: lightblue;</span></span><br><span class=\"line\"><span class=\"string\">  padding: 20px;</span></span><br><span class=\"line\"><span class=\"string\">`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">MyStyledComponent</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">StyledDiv</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is a styled component with CSS in JS.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">StyledDiv</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">MyStyledComponent</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這裡，styled.div 是 Styled Components 提供的函數，它接受一個包含 CSS 屬性的模板字符串。這樣的做法使得 CSS 能夠更好地與組件綁定在一起，同時避免了全局命名空間的衝突。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>總的來說，HTML in JS 和 CSS in JS 這兩種模式通過將不同語言的代碼放在同一個文件中，使得代碼的組織和維護更加方便，同時提供了一些額外的特性，如組件級別的樣式和動態生成樣式。</p></blockquote>\n<h2 id=\"DEEP-DIVE-Accessibility-a11y\"><a href=\"#DEEP-DIVE-Accessibility-a11y\" class=\"headerlink\" title=\"[DEEP DIVE] Accessibility (a11y)\"></a>[<strong>DEEP DIVE</strong>] Accessibility (a11y)</h2><p>“a11y” 是 “<code>accessibility</code>“ 這個單詞的縮寫。它代表著網頁或應用程式的可及性（accessibility）方面，強調讓所有使用者，包括身心障礙者，都能方便地訪問和使用網頁或應用程式。</p>\n<p>透過可及性的設計，我們可以確保<strong>所有使用者</strong>都能獲得相同的資訊、功能和互動體驗，而不論他們是否有視力、聽力、運動能力或認知能力的障礙。提升可及性不僅是一種道德責任，還能擴大受眾並提升用戶滿意度。</p>\n<p>以下是一些可提升可及性的常見做法：</p>\n<ul>\n<li><p>有意義的 HTML</p>\n<ul>\n<li>使用正確的 HTML 標籤，確保文檔結構清晰，並使用標題標籤（<code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, 等等）來組織內容。</li>\n</ul>\n</li>\n<li><p>表單可及性</p>\n<ul>\n<li>提供明確的表單標籤，使用標籤（<code>&lt;label&gt;</code>）來關聯表單元素和其標籤，以及提供適當的提示。</li>\n</ul>\n</li>\n<li><p>鍵盤導航</p>\n<ul>\n<li>確保所有功能都可以使用鍵盤進行操作，而不僅僅依賴滑鼠。</li>\n</ul>\n</li>\n<li><p>對比度</p>\n<ul>\n<li>使用高對比度的色彩，以確保文字和背景之間的區別明顯，有助於視力較差的使用者。</li>\n</ul>\n</li>\n<li><p>無障礙的多媒體內容</p>\n<ul>\n<li>提供音訊描述（audio descriptions）和字幕（captions）來支援聽覺或視覺障礙的使用者。</li>\n</ul>\n</li>\n<li><p>焦點可見性</p>\n<ul>\n<li>在焦點移動時，確保使用者可以清楚看到焦點所在的位置，這對於使用鍵盤導航的人很重要。</li>\n</ul>\n</li>\n<li><p>動態內容的可訪問性</p>\n<ul>\n<li>當有動態內容（例如單頁應用程序）時，確保內容對螢幕助讀器和其他輔助技術可訪問。</li>\n</ul>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>總的來說，”a11y” 的目標是讓所有使用者都能夠平等地獲得和使用網站或應用程式的功能，而不受他們的能力或特殊需求的影響。</p></blockquote>\n","feature":null,"text":"01 【React 基礎概念】1. React 簡介Facebook 於 2013 年發表了 React。在發表當時 Facebook 內部早已使用 React...","permalink":"/post/REACT01【React 基礎概念】","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"React","slug":"React","count":8,"path":"api/categories/React.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":31,"path":"api/tags/桃園資展筆記.json"},{"name":"React","slug":"React","count":5,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#01-%E3%80%90React-%E5%9F%BA%E7%A4%8E%E6%A6%82%E5%BF%B5%E3%80%91\"><span class=\"toc-text\">01 【React 基礎概念】</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-React-%E7%B0%A1%E4%BB%8B\"><span class=\"toc-text\">1. React 簡介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-react-%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%9F\"><span class=\"toc-text\">1.1 react 是什麼？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-React-%E6%98%AF%E4%BB%80%E9%BA%BC-what-is\"><span class=\"toc-text\">1.2 React 是什麼 (what is)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-React-%E4%BA%94%E5%A4%A7%E7%89%B9%E9%BB%9E\"><span class=\"toc-text\">1.3 React 五大特點</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-React-Ecosystem-%E7%94%9F%E6%85%8B%E5%9C%88\"><span class=\"toc-text\">1.4 React Ecosystem(生態圈)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-React-%E5%9F%BA%E7%A4%8E%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">2. React 基礎案例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%99%9B%E6%93%AC-DOM%EF%BC%88Virtual-DOM%EF%BC%89\"><span class=\"toc-text\">3. 虛擬 DOM（Virtual DOM）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">工作原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%84%AA%E5%8B%A2\"><span class=\"toc-text\">優勢</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%96%AE%E5%90%91%E8%B3%87%E6%96%99%E6%B5%81%E7%A8%8B%EF%BC%88One-Way-Data-Flow%EF%BC%89\"><span class=\"toc-text\">4. 單向資料流程（One-Way Data Flow）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%84%AA%E9%BB%9E%EF%BC%9A\"><span class=\"toc-text\">優點：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%BA%E9%BB%9E%EF%BC%9A\"><span class=\"toc-text\">缺點：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DEEP-DIVE-%E2%80%9CHTML-in-JS%E2%80%9D-%E5%92%8C-%E2%80%9CCSS-in-JS%E2%80%9D\"><span class=\"toc-text\">[DEEP DIVE] “HTML in JS” 和 “CSS in JS”</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTML-in-JS%EF%BC%9A\"><span class=\"toc-text\">HTML in JS：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS-in-JS%EF%BC%9A\"><span class=\"toc-text\">CSS in JS：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DEEP-DIVE-Accessibility-a11y\"><span class=\"toc-text\">[DEEP DIVE] Accessibility (a11y)</span></a></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"React入門","uid":"60ae19ae3fed7b17d85b4bb42c8c860e","slug":"REACT01【react入門】","date":"2024-01-25T04:20:05.000Z","updated":"2024-02-03T14:46:57.462Z","comments":true,"path":"api/articles/REACT01【react入門】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/blog-Article-Cover/734257355c559d394eb900a70ea03a08.jpg?raw=true","text":"01 【react 入門】1. React 簡介Facebook 於 2013 年發表了 React。在發表當時 Facebook 內部早已使用 React 解...","permalink":"/post/REACT01【react入門】","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"React","slug":"React","count":8,"path":"api/categories/React.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":31,"path":"api/tags/桃園資展筆記.json"},{"name":"React","slug":"React","count":5,"path":"api/tags/React.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"240124React零碎知識點","uid":"6587c0dcefcdc69eda60933087e365f3","slug":"240124React零碎知識點","date":"2024-01-24T11:28:08.000Z","updated":"2024-01-28T04:24:25.865Z","comments":true,"path":"api/articles/240124React零碎知識點.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/blog-Article-Cover/734257355c559d394eb900a70ea03a08.jpg?raw=true","text":"單向資料流程（One-Way Data Flow）單向資料流程是一種軟體設計模式，其中資料在應用程式中的流動方向是單一且明確的。這種模式通常應用在使用者介面（U...","permalink":"/post/240124React零碎知識點","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"React","slug":"React","count":8,"path":"api/categories/React.json"}],"tags":[{"name":"資策會上課筆記","slug":"資策會上課筆記","count":5,"path":"api/tags/資策會上課筆記.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}