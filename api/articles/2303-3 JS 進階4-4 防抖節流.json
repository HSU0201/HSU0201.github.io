{"title":"JavaScript 進階 - 第4天","uid":"956114e1932534f6adc2e3848138c40e","slug":"2303-3 JS 進階4-4 防抖節流","date":"2023-04-01T01:22:08.000Z","updated":"2023-04-13T09:14:41.375Z","comments":true,"path":"api/articles/2303-3 JS 進階4-4 防抖節流.json","keywords":null,"cover":null,"content":"<h1 id=\"防抖節流\"><a href=\"#防抖節流\" class=\"headerlink\" title=\"防抖節流\"></a>防抖節流</h1><p><strong>節流 和防抖的區別是？</strong></p>\n<ol>\n<li>防抖（debounce）</li>\n</ol>\n<ul>\n<li>所謂防抖，就是指觸發事件後在 n 秒內函數<strong>只能執行一次</strong>(最後一次)，如果在 n 秒內又觸發了事件，則會重新計算函數執行時間</li>\n</ul>\n<ol start=\"2\">\n<li>節流（throttle）</li>\n</ol>\n<ul>\n<li>所謂節流，就是指連續觸發事件但是在 n 秒中只<strong>執行一次函數</strong>(不會被打斷)</li>\n</ul>\n<p><strong>節流和防抖 的使用場景是</strong></p>\n<ul>\n<li>防抖 : 搜索框輸入，設定每次輸入完畢 n 秒後發送請求，如果期<br>間還有輸入，則從新計算時間</li>\n<li>節流 : 鼠標移動<code>mousemove</code>，頁面尺寸發生變化<code>resize</code>，滾動條滾動<code>scroll</code>等開銷比較大的情況下</li>\n</ul>\n","feature":null,"text":"防抖節流節流 和防抖的區別是？ 防抖（debounce） 所謂防抖，就是指觸發事件後在 n 秒內函數只能執行一次(最後一次)，如果在 n 秒內又觸發了事件，則會重新計算函數執行時間 節流（throttle） 所謂節流，就是指連續觸發事件但是在 n 秒中只執行一次函數(不會被打斷)...","link":"","photos":[],"count_time":{"symbolsCount":266,"symbolsTime":"1 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%98%B2%E6%8A%96%E7%AF%80%E6%B5%81\"><span class=\"toc-text\">防抖節流</span></a></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JavaScript 進階 - 第4天","uid":"956114e1932534f6adc2e3848138c40e","slug":"2303-3 JS 進階4-3 處理this","date":"2023-04-01T01:22:08.000Z","updated":"2023-04-13T09:15:36.220Z","comments":true,"path":"api/articles/2303-3 JS 進階4-3 處理this.json","keywords":null,"cover":null,"text":"處理this 瞭解函數中 this 在不同場景下的預設值，知道動態指定函數 this 值的方法。 this 是 JavaScript 最具“魅惑”的知識點，不同的應用場合 this 的取值可能會有意想不到的結果，在此我們對以往學習過的關於【 this 預設的取值】情況進行歸納和總...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"JavaScript 進階 - 第3天","uid":"c43b2d50b25bb22e84622db700db53eb","slug":"2303-3 JS 進階3","date":"2023-03-31T01:22:08.000Z","updated":"2023-04-05T01:18:28.622Z","comments":true,"path":"api/articles/2303-3 JS 進階3.json","keywords":null,"cover":[],"text":" 瞭解構造函數原型物件的語法特徵，掌握 JavaScript 中物件導向程式設計的實現方式，基於物件導向程式設計思想實現 DOM 操作的封裝。 瞭解物件導向程式設計的一般特徵 掌握基於構造函數原型物件的邏輯封裝 掌握基於原型物件實現的繼承 理解什麼原型鏈及其作用 能夠處理常式異常...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}