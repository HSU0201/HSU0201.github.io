{"title":"JavaScript 進階 - 第1天","uid":"35ba1b013b453118df98cec61f2a93fb","slug":"2303-3 JS 進階1","date":"2023-03-29T01:22:08.000Z","updated":"2023-04-01T13:58:55.500Z","comments":true,"path":"api/articles/2303-3 JS 進階1.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>學習作用域、變數提升、閉包等語言特徵，加深對 JavaScript 的理解，掌握變數賦值、函式宣告的簡潔語法，降低代碼的冗餘度。</p></blockquote>\n<ul>\n<li>理解作用域對程式執行的影響</li>\n<li>能夠分析程式執行的作用域範圍</li>\n<li>理解閉包本質，利用閉包創建隔離作用域</li>\n<li>瞭解什麼變數提升及函數提升</li>\n<li>掌握箭頭函數、解析剩餘參數等簡潔語法</li>\n</ul>\n<h1 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>瞭解作用域對程式執行的影響及作用域鏈的查找機制，使用閉包函數創建隔離作用域避免全域變數污染。</p></blockquote>\n<p>作用域（scope）規定了變數能夠被訪問的“範圍”，離開了這個“範圍”變數便不能被訪問，作用域分為全域作用域和局部作用域。</p>\n<h2 id=\"局部作用域\"><a href=\"#局部作用域\" class=\"headerlink\" title=\"局部作用域\"></a>局部作用域</h2><p>局部作用域分為函數作用域和塊作用域。</p>\n<h3 id=\"函數作用域\"><a href=\"#函數作用域\" class=\"headerlink\" title=\"函數作用域\"></a>函數作用域</h3><p>在函數內部聲明的變數只能在函數內部被訪問，外部無法直接訪問。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 聲明 counter 函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">counter</span>(<span class=\"params\">x, y</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 函數內部聲明的變數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> s = x + y</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s) <span class=\"comment\">// 18</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 設用 counter 函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">counter</span>(<span class=\"number\">10</span>, <span class=\"number\">8</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 訪問變數 s</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s)<span class=\"comment\">// 報錯</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>函數內部聲明的變數，在函數外部無法被訪問</li>\n<li>函數的參數也是函數內部的區域變數</li>\n<li>不同函數內部聲明的變數無法互相訪問</li>\n<li>函數執行完畢後，函數內部的變數實際被清空了</li>\n</ol>\n<h3 id=\"塊作用域\"><a href=\"#塊作用域\" class=\"headerlink\" title=\"塊作用域\"></a>塊作用域</h3><p>在 JavaScript 中使用 <code>&#123;&#125;</code> 包裹的代碼稱為代碼塊，代碼塊內部聲明的變數外部將【有可能】無法被訪問。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// age 只能在該代碼塊中被訪問</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> age = <span class=\"number\">18</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age); <span class=\"comment\">// 正常</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 超出了 age 的作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age) <span class=\"comment\">// 報錯</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span>(flag) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// str 只能在該代碼塊中被訪問</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> str = <span class=\"string\">&#x27;hello world!&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str); <span class=\"comment\">// 正常</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 超出了 age 的作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str); <span class=\"comment\">// 報錯</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> t = <span class=\"number\">1</span>; t &lt;= <span class=\"number\">6</span>; t++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// t 只能在該代碼塊中被訪問</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t); <span class=\"comment\">// 正常</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 超出了 t 的作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(t); <span class=\"comment\">// 報錯</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript 中除了變數外還有常量，常量與變數本質的區別是【常量必須要有值且不允許被重新賦值】，常量值為物件時其屬性和方法允許重新賦值。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 必須要有值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> version = <span class=\"string\">&#x27;1.0.0&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 不能重新賦值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// version = &#x27;1.0.1&#x27;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 常量值為對象類型</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> user = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 不能重新賦值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  user = &#123;&#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 屬性和方法允許被修改</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  user.<span class=\"property\">name</span> = <span class=\"string\">&#x27;小小明&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  user.<span class=\"property\">gender</span> = <span class=\"string\">&#x27;男&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li><code>let</code> 聲明的變數會產生塊作用域，<code>var</code> 不會產生塊作用域</li>\n<li><code>const</code> 聲明的常量也會產生塊作用域</li>\n<li>不同代碼塊之間的變數無法互相訪問</li>\n<li>推薦使用 <code>let</code> 或 <code>const</code></li>\n</ol>\n<p>注：開發中 <code>let</code> 和 <code>const</code> 經常不加區分的使用，如果擔心某個值會不小被修改時，則只能使用 <code>const</code> 聲明成常量。</p>\n<h2 id=\"全域作用域\"><a href=\"#全域作用域\" class=\"headerlink\" title=\"全域作用域\"></a>全域作用域</h2><p><code>&lt;script&gt;</code> 標籤和 <code>.js</code> 檔的【最外層】就是所謂的全域作用域，在此聲明的變數在函數內部也可以被訪問。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 此處是全域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 此處為局部</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 此處為全域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>全域作用域中聲明的變數，任何其它作用域都可以被訪問，如下代碼所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 全域變數 name</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;小明&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 函數作用域中訪問全域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 此處為局部</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;你好&#x27;</span> + name)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 全域變數 flag 和 x</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> flag = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> x = <span class=\"number\">10</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 塊作用域中訪問全域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(flag) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">let</span> y = <span class=\"number\">5</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x + y) <span class=\"comment\">// x 是全域的</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>為 <code>window</code> 物件動態添加的屬性預設也是全域的，不推薦！</li>\n<li>函數中未使用任何關鍵字聲明的變數為全域變數，不推薦！！！</li>\n<li>盡可能少的聲明全域變數，防止全域變數被污染</li>\n</ol>\n<p>JavaScript 中的作用域是程式被執行時的底層機制，瞭解這一機制有助於規範代碼書寫習慣，避免因作用域導致的語法錯誤。</p>\n<h2 id=\"作用域鏈\"><a href=\"#作用域鏈\" class=\"headerlink\" title=\"作用域鏈\"></a>作用域鏈</h2><p>在解釋什麼是作用域鏈前先來看一段代碼：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 全域作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 局部作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> c</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 局部作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">g</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">let</span> d = <span class=\"string\">&#x27;yo&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>函數內部允許創建新的函數，<code>f</code> 函數內部創建的新函數 <code>g</code>，會產生新的函數作用域，由此可知作用域產生了嵌套的關係。</p>\n<p>如下圖所示，父子關係的作用域關聯在一起形成了鏈狀的結構，作用域鏈的名字也由此而來。</p>\n<p><strong>作用域鏈本質上是底層的變數查找機制</strong>，在函數被執行時，會優先查找當前函數作用域中查找變數，如果當前作用域查找不到則會<strong>依次逐級查找</strong>父級作用域直到全域作用域，如下代碼所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 全域作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 局部作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">f</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> c</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// let a = 10;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a) <span class=\"comment\">// 1 或 10</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d) <span class=\"comment\">// 報錯</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 局部作用域</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">g</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">let</span> d = <span class=\"string\">&#x27;yo&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// let b = 20;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b) <span class=\"comment\">// 2 或 20</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 調用 g 函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">g</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c) <span class=\"comment\">// 報錯</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d) <span class=\"comment\">// 報錯</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">f</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>嵌套關係的作用域串聯起來形成了作用域鏈</li>\n<li>相同作用域鏈中按著從小到大的規則查找變數</li>\n<li>子作用域能夠訪問父作用域，<strong>父級作用域無法訪問子級作用域</strong></li>\n</ol>\n<h2 id=\"JS垃圾回收機制\"><a href=\"#JS垃圾回收機制\" class=\"headerlink\" title=\"JS垃圾回收機制\"></a>JS垃圾回收機制</h2><p>垃圾回收機制(Garbage Collection) 簡稱 GC<br>JS中內存的分配和回收都是自動完成的，<strong>內存在不使用的時候會被垃圾回收器自動回收。 **<br>如果不了解JS的內存管理機制，我們同樣非常容易成內存洩漏（內存無法被回收）的情況<br><em>不再用到的內存，沒有及時釋放</em>，就叫做**內存洩漏</strong></p>\n<hr>\n<p><strong>內存的生命週期</strong><br>JS環境中分配的內存, 一般有如下生命週期：</p>\n<ol>\n<li>內存分配：當我們聲明變量、函數、對象的時候，系統會自動為他們分配內存</li>\n<li>內存使用：即讀寫內存，也就是使用變量、函數等</li>\n<li>內存回收：使用完畢，由垃圾回收自動回收不再使用的內存</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>說明：</p>\n<ul>\n<li>全局變量一般不會回收(關閉頁面回收)；</li>\n<li>一般情況下局部變量的值, 不用了, 會被自動回收掉</li>\n</ul></blockquote>\n<hr>\n<p><strong>算法說明</strong><br>堆棧空間分配區別：</p>\n<ol>\n<li>棧（操作系統）: 由操作系統自動分配釋放函數的參數值、局部變量等，基本數據類型放到棧裡面。</li>\n<li>堆（操作系統）: 一般由程序員分配釋放，若程序員不釋放，由垃圾回收機制回收。複雜數據類型放到堆裡面。</li>\n</ol>\n<hr>\n<p><strong>常見的瀏覽器垃圾回收算法</strong>: 引用計數法 和 標記清除法</p>\n<p><strong>引用計數</strong><br>IE採用的引用計數算法, 定義“內存不再使用”，就是看一個對像是否有指向它的引用，沒有引用了就回收對象</p>\n<ol>\n<li>跟踪記錄被引用的次數</li>\n<li>如果被引用了一次，那麼就記錄次數1,多次引用會累加 ++</li>\n<li>如果減少一個引用就減1 –</li>\n<li>如果引用次數是0 ，則釋放內存</li>\n</ol>\n<p><strong>標記清除法</strong><br>現代的瀏覽器已經不再使用引用計數算法了。<br>現代瀏覽器通用的大多是基於標記清除算法的某些改進算法，總體思想都是一致的。<br>核心：</p>\n<ol>\n<li>標記清除算法將“<strong>不再使用的對象</strong>”定義為“無法達到的對象”。</li>\n<li>就是從根部（在JS中就是全局對象）出發定時掃描內存中的對象。凡是能從根部到達的對象，都是還需要使用的。</li>\n<li>那些無法由根部出發觸及到的對像被標記為不再使用，稍後進行回收。</li>\n</ol>\n<h2 id=\"閉包\"><a href=\"#閉包\" class=\"headerlink\" title=\"閉包\"></a>閉包</h2><p>閉包是一種比較特殊和函數，使用閉包能夠訪問函數作用域中的變數。從代碼形式上看閉包是一個做為返回值的函數，如下代碼所示：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>閉包 : 內層函數 + 外層函數變數</p></blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1. 閉包 : 內層函數 + 外層函數變數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// function outer() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//外層函數變數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   const a = 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//內層函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   function f() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//     console.log(a)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   f()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// outer()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 2. 閉包的應用： 統計函數的調用次數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// let count = 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// function fn() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   count++</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   console.log(`函數被調用$&#123;count&#125;次`)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//  因为 count 是全局變量，容易被修改</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 3. 閉包的升級寫法 實現資料的私有。 統計函數的調用次數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">outer</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">let</span> count = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">function</span> <span class=\"title function_\">fn</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        count++</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`函數被調用<span class=\"subst\">$&#123;count&#125;</span>次`</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> fn</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//全局~</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> re = <span class=\"title function_\">outer</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const re = function fn() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   count++</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   console.log(`函數被調用$&#123;count&#125;次`)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">re</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">re</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = function() &#123; &#125;  函數運算式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 4. 閉包存在的問題： 可能會造成記憶體洩漏</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<p>1.怎麼理解閉包？</p>\n<ul>\n<li>閉包 &#x3D; 內層函數 + 外層函數的變數</li>\n</ul>\n<p>2.閉包的作用？</p>\n<ul>\n<li>封閉資料，實現資料私有，外部也可以訪問函數內部的變數</li>\n<li>閉包很有用，因為它允許將函數與其所操作的某些資料（環境）關聯起來</li>\n</ul>\n<p>3.閉包可能引起的問題？</p>\n<ul>\n<li>記憶體洩漏</li>\n</ul>\n<h2 id=\"變數提升\"><a href=\"#變數提升\" class=\"headerlink\" title=\"變數提升\"></a>變數提升</h2><p>變數提升是 JavaScript 中比較“奇怪”的現象，它允許在變數聲明之前即被訪問，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 訪問變數 str</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str + <span class=\"string\">&#x27;world!&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 聲明變數 str</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;hello &#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>變數在未聲明即被訪問時會報語法錯誤</li>\n<li>變數在聲明之前即被訪問，變數的值為 <code>undefined</code></li>\n<li><code>let</code> 聲明的變數不存在變數提升，推薦使用 <code>let</code></li>\n<li>變數提升出現在相同作用域當中</li>\n<li>實際開發中推薦先聲明再訪問變數</li>\n</ol>\n<p>注：關於變數提升的原理分析會涉及較為複雜的詞法分析等知識，而開發中使用 <code>let</code> 可以輕鬆規避變數的提升，因此在此不做過多的探討，有興趣可<a href=\"https://segmentfault.com/a/1190000013915935\">查閱資料</a>。</p>\n<h1 id=\"函數\"><a href=\"#函數\" class=\"headerlink\" title=\"函數\"></a>函數</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知道函數參數預設值、動態參數、剩餘參數的使用細節，提升函數應用的靈活度，知道箭頭函數的語法及與普通函數的差異。</p></blockquote>\n<h2 id=\"函數提升\"><a href=\"#函數提升\" class=\"headerlink\" title=\"函數提升\"></a>函數提升</h2><p>函數提升與變數提升比較類似，是指函數在聲明之前即可被調用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 調用函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">foo</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 聲明函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;聲明之前即被調用...&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 不存在提升現象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">bar</span>()  <span class=\"comment\">// 錯誤</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> bar = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;函數運算式不存在提升現象...&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>函數提升能夠使函數的聲明調用更靈活</li>\n<li>函數運算式不存在提升的現象</li>\n<li>函數提升出現在相同作用域當中</li>\n</ol>\n<h2 id=\"函數參數\"><a href=\"#函數參數\" class=\"headerlink\" title=\"函數參數\"></a>函數參數</h2><p>函數參數的使用細節，能夠提升函數應用的靈活度。</p>\n<h3 id=\"預設值\"><a href=\"#預設值\" class=\"headerlink\" title=\"預設值\"></a>預設值</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 設置參數預設值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sayHi</span>(<span class=\"params\">name=<span class=\"string\">&quot;小明&quot;</span>, age=<span class=\"number\">18</span></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">`&lt;p&gt;大家好，我叫<span class=\"subst\">$&#123;name&#125;</span>，我今年<span class=\"subst\">$&#123;age&#125;</span>歲了。&lt;/p&gt;`</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 調用函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">sayHi</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">sayHi</span>(<span class=\"string\">&#x27;小紅&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">sayHi</span>(<span class=\"string\">&#x27;小剛&#x27;</span>, <span class=\"number\">21</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>聲明函數時為形參賦值即為參數的預設值</li>\n<li>如果參數未自訂預設值時，參數的預設值為 <code>undefined</code></li>\n<li>調用函數時沒有傳入對應實參時，參數的預設值被當做實參傳入</li>\n</ol>\n<h4 id=\"動態參數\"><a href=\"#動態參數\" class=\"headerlink\" title=\"動態參數\"></a>動態參數</h4><p><code>arguments</code> 是函數內部內置的偽陣列變數，它包含了調用函數時傳入的所有實參。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 求生函數，計算所有參數的和</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">sum</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(arguments)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> s = <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">arguments</span>.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      s += <span class=\"variable language_\">arguments</span>[i]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(s)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 調用求和函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">sum</span>(<span class=\"number\">5</span>, <span class=\"number\">10</span>)<span class=\"comment\">// 兩個參數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">sum</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>) <span class=\"comment\">// 兩個參數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li><code>arguments</code> 是一個偽陣列</li>\n<li><code>arguments</code> 的作用是動態獲取函數的實參</li>\n</ol>\n<h3 id=\"剩餘參數-與-展開運算符-相似\"><a href=\"#剩餘參數-與-展開運算符-相似\" class=\"headerlink\" title=\"剩餘參數 (與 展開運算符 相似)\"></a>剩餘參數 (與 展開運算符 相似)</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">config</span>(<span class=\"params\">baseURL, ...other</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(baseURL) <span class=\"comment\">// 得到 &#x27;http://baidu.com&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(other)  <span class=\"comment\">// other  得到 [&#x27;get&#x27;, &#x27;json&#x27;]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 調用函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">config</span>(<span class=\"string\">&#x27;http://baidu.com&#x27;</span>, <span class=\"string\">&#x27;get&#x27;</span>, <span class=\"string\">&#x27;json&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li><code>...</code> 是語法符號，置於最末函數形參之前，用於獲取多餘的實參</li>\n<li>借助 <code>...</code> 獲取的剩餘實參，是個真陣列</li>\n</ol>\n<p><strong>展開運算符 or 剩餘參數</strong><br>剩餘參數：函數參數使用，得到真數組<br>展開運算符：數組中使用，數組展開</p>\n<h2 id=\"箭頭函數\"><a href=\"#箭頭函數\" class=\"headerlink\" title=\"箭頭函數\"></a>箭頭函數</h2><p>箭頭函數是一種聲明函數的簡潔語法，它與普通函數並無本質的區別，差異性更多體現在語法格式上，更適用於那些本來需要匿名函數的地方。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   console.log(123)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1. 箭頭函數 基本語法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = () =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   console.log(123)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// fn()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = (x) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   console.log(x)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// fn(1)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 2. 只有一個形參的時候，可以省略小括弧</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = x =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   console.log(x)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// fn(1)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// // 3. 只有一行代碼的時候，我們可以省略大括弧</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = x =&gt; console.log(x)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// fn(1)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 4. 只有一行代碼的時候，可以省略return</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = x =&gt; x + x</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(fn(1))</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 5. 箭頭函數可以直接返回一個物件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const fn = (uname) =&gt; (&#123; uname: uname &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(fn(&#x27;劉德華&#x27;))</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>箭頭函數屬於運算式函數，因此不存在函數提升</li>\n<li>箭頭函數只有一個參數時可以省略圓括號 <code>()</code></li>\n<li>箭頭函數函數體只有一行代碼時可以省略花括弧 <code>&#123;&#125;</code>，並自動做為返回值被返回</li>\n</ol>\n<h3 id=\"箭頭函數參數\"><a href=\"#箭頭函數參數\" class=\"headerlink\" title=\"箭頭函數參數\"></a>箭頭函數參數</h3><p>箭頭函數中沒有動態參數 <code>arguments</code>，只能使用剩餘參數 <code>...</code> 動態獲取實參</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1. 利用箭頭函數來求和</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> <span class=\"title function_\">getSum</span> = (<span class=\"params\">...arr</span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        sum += arr[i]</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> sum</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> result = <span class=\"title function_\">getSum</span>(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result) <span class=\"comment\">// 9</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"箭頭函數-this\"><a href=\"#箭頭函數-this\" class=\"headerlink\" title=\"箭頭函數 this\"></a>箭頭函數 this</h3><p>箭頭函數不會創建自己的this,它只會從自己的作用域鏈的上一層沿用this。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// 以前this的指向：  誰調用的這個函數，this 就指向誰</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// console.log(this)  // window</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// // 普通函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// function fn() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   console.log(this)  // window</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// window.fn()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// // 物件方法裡面的this</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// const obj = &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   name: &#x27;andy&#x27;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   sayHi: function () &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//     console.log(this)  // obj</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// obj.sayHi()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// 2. 箭頭函數的this  是上一層作用域的this 指向</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// const fn = () =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   console.log(this)  // window</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// fn()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// 物件方法箭頭函數 this</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// const obj = &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   uname: &#x27;pink老師&#x27;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   sayHi: () =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//     console.log(this)  // this 指向誰？ window</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//   &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">// obj.sayHi()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"keyword\">const</span> obj = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">     <span class=\"attr\">uname</span>: <span class=\"string\">&#x27;老師&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">     <span class=\"attr\">sayHi</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>)  <span class=\"comment\">// obj</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"keyword\">let</span> i = <span class=\"number\">10</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"keyword\">const</span> <span class=\"title function_\">count</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">         <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>)  <span class=\"comment\">// obj </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">       &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">       <span class=\"title function_\">count</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">     &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">   &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">   obj.<span class=\"title function_\">sayHi</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"> </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>箭頭函數不會創建自己的this,它只會從自己的作用域鏈的上一層沿用this<br>DOM事件回調函數不推薦使用箭頭函數嗎，特別是需要用到this的時候<br>事件回調函數使用箭頭函數時，this 為全局的 window</p></blockquote>\n<h1 id=\"解構賦值\"><a href=\"#解構賦值\" class=\"headerlink\" title=\"解構賦值\"></a>解構賦值</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知道解構的語法及分類，使用解構簡潔語法快速為變數賦值。</p></blockquote>\n<p>解構賦值是一種快速為變數賦值的簡潔語法，本質上仍然是為變數賦值，分為陣列解構、物件解構兩大類型。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console [變量1,變量2,變量3] = [單元值1, 單元值2, 單元值3]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"陣列解構\"><a href=\"#陣列解構\" class=\"headerlink\" title=\"陣列解構\"></a>陣列解構</h2><p>陣列解構是將陣列的單元值快速批量賦值給一系列變數的簡潔語法，如下代碼所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 普通的陣列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 批量聲明變數 a b c </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 同時將陣列單元值 1 2 3 依次賦值給變數 a b c</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> [a, b, c] = arr</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(b); <span class=\"comment\">// 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(c); <span class=\"comment\">// 3</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// const arr = [100, 60, 80]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 數組解構 賦值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // const [max, min, avg] = arr</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> [max, min, avg] = [<span class=\"number\">100</span>, <span class=\"number\">60</span>, <span class=\"number\">80</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // const max = arr[0]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // const min = arr[1]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// // const avg = arr[2]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(max) <span class=\"comment\">// 100</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(avg) <span class=\"comment\">// 80</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 交換2個變量的值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  [b, a] = [a, b]</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a, b)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1. 立即执行函数要加</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// (function () &#123; &#125;)();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// (function () &#123; &#125;)();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 2. 使用数组的时候</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const arr = [1, 2, 3]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;pink&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> b = <span class=\"number\">2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      ;[b, a] = [a, b]</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a, b)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const pc = [&#x27;海爾&#x27;, &#x27;聯想&#x27;, &#x27;小米&#x27;, &#x27;方正&#x27;];</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// [hr, lx, mi, fz] = pc</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(hr, lx, mi, fz);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// function getValue() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   return [100, 60]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// [max, min] = getValue()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(max, min);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const pc = [&#x27;海爾&#x27;, &#x27;聯想&#x27;, &#x27;小米&#x27;, &#x27;方正&#x27;]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [hr, lx, mi, fz] = [&#x27;海爾&#x27;, &#x27;聯想&#x27;, &#x27;小米&#x27;, &#x27;方正&#x27;]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(hr)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(lx)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(mi)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(fz)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// // 請將最大值和最小值函數返回值解構 max 和min 兩個變量</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// function getValue() &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   return [100, 60]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [max, min] = getValue()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(max)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(min)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1. 變量多， 單元值少 ， undefined</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a, b, c, d] = [1, 2, 3]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(a) // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(b) // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(c) // 3</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(d) // undefined</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 2. 變量少， 單元值多</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a, b] = [1, 2, 3]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(a) // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(b) // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 3.  剩餘參數 變量少， 單元值多</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a, b, ...c] = [1, 2, 3, 4]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(a) // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(b) // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(c) // [3, 4]  真數組</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 4.  防止 undefined 傳遞</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a = 0, b = 0] = [1, 2]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a = 0, b = 0] = []</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(a) // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(b) // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 5.  按需導入賦值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a, b, , d] = [1, 2, 3, 4]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(a) // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(b) // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(d) // 4</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const arr = [1, 2, [3, 4]]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(arr[0])  // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(arr[1])  // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(arr[2])  // [3,4]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(arr[2][0])  // 3</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 多維數組解構</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const arr = [1, 2, [3, 4]]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a, b, c] = [1, 2, [3, 4]]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(a) // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(b) // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(c) // [3,4]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const [a, b, [c, d]] = [1, 2, [3, 4]]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(a) // 1</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(b) // 2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(c) // 3</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(d) // 4</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>總結：</p>\n<ol>\n<li>設定運算子 <code>=</code> 左側的 <code>[]</code> 用於<strong>批量聲明變數</strong>，右側陣列的單元值將被賦值給左側的變數</li>\n<li>變數的順序對應陣列單元值的位置依次進行賦值操作</li>\n<li>變數的數量大於單元值數量時，多餘的變數將被賦值為  <code>undefined</code></li>\n<li>變數的數量小於單元值數量時，可以通過 <code>...</code> 獲取剩餘單元值，但只能置於最末位</li>\n<li>允許初始化變數的預設值，且只有單元值為 <code>undefined</code> 時預設值才會生效</li>\n</ol>\n<p>注：支持多維解構賦值，比較複雜後續有應用需求時再進一步分析</p>\n<h2 id=\"對象解構-重要\"><a href=\"#對象解構-重要\" class=\"headerlink\" title=\"對象解構 (重要)\"></a>對象解構 (重要)</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>複習: 數組中括號[]，對象大括號{}</p></blockquote>\n<p>物件解構是將物件屬性和方法快速批量賦值給一系列變數的簡潔語法，如下代碼所示：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 普通對象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> user = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;小明&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 批量聲明變數 name age</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 同時將陣列單元值 小明  18 依次賦值給變數 name  age</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">//解構的語法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> &#123;name, age&#125; = user</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// const &#123;name, age&#125; = &#123;name: &#x27;小明&#x27;,age: 18&#125; 亦可</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 等價於 const name =  obj.name</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"comment\">// 要求屬性名和變量名必須一直才可以</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name) <span class=\"comment\">// 小明</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age) <span class=\"comment\">// 18</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>總結：</p>\n<ol>\n<li>設定運算子 <code>=</code> 左側的 <code>&#123;&#125;</code> 用於批量聲明變數，右側物件的屬性值將被賦值給左側的變數</li>\n<li>物件<strong>屬性的值</strong>將被賦值給與<strong>屬性名相同</strong>的變數</li>\n<li>物件中找不到與變數名一致的屬性時變數值為 <code>undefined</code></li>\n<li>允許初始化變數的預設值，屬性不存在或單元值為 <code>undefined</code> 時預設值才會生效</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1. 對象解構的變量名 可以重新改名  舊變量名: 新變量名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const &#123; uname: username, age &#125; = &#123; uname: &#x27;老師&#x27;, age: 18 &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// // console.log(username)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// // console.log(age)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 2. 解構數組對象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> pig = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">uname</span>: <span class=\"string\">&#x27;佩奇&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">age</span>: <span class=\"number\">6</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> [&#123; uname, age &#125;] = pig</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(uname)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(age)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：支持多維解構賦值</p></blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 1. 這是後臺傳遞過來的資料</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> msg = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;code&quot;</span>: <span class=\"number\">200</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;msg&quot;</span>: <span class=\"string\">&quot;獲取新聞列表成功&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"string\">&quot;data&quot;</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">1</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;5G商用自己，三大運用商收入下降&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;count&quot;</span>: <span class=\"number\">58</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">2</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;國際媒體頭條速覽&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;count&quot;</span>: <span class=\"number\">56</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;id&quot;</span>: <span class=\"number\">3</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;title&quot;</span>: <span class=\"string\">&quot;烏克蘭和俄羅斯持續衝突&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;count&quot;</span>: <span class=\"number\">1669</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      ]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 需求1： 請將以上msg物件  採用物件解構的方式 只選出  data 方面後面使用渲染頁面</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const &#123; data &#125; = msg</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(data)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 需求2： 上面msg是後臺傳遞過來的資料，我們需要把data選出當做參數傳遞給 函數</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const &#123; data &#125; = msg</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// msg 雖然很多屬性，但是我們利用解構只要 data值</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">render</span>(<span class=\"params\">&#123; data &#125;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// const &#123; data &#125; = arr</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 我們只要 data 資料</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 內部處理</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">render</span>(msg)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//給新的變量名賦值(冒號表示 “ 什麼值：賦值給誰 ”)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 需求3， 為了防止msg裡面的data名字混淆，要求渲染函數裡面的資料名改為 myData</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">render</span>(<span class=\"params\">&#123; data: myData &#125;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 要求將 獲取過來的 data資料 更名為 myData</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">// 內部處理</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myData)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">render</span>(msg)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"綜合案例\"><a href=\"#綜合案例\" class=\"headerlink\" title=\"綜合案例\"></a>綜合案例</h1><h2 id=\"forEach遍歷陣列\"><a href=\"#forEach遍歷陣列\" class=\"headerlink\" title=\"forEach遍歷陣列\"></a>forEach遍歷陣列</h2><p>forEach() 方法用於調用陣列的每個元素，並將元素傳遞給回呼函數</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">語法:</span><br><span class=\"line\">被遍歷的數組.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">當前數組元素, 當前元素索引號</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//函數體</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：  </p>\n<p>1.forEach 主要是遍歷陣列</p>\n<p>2.參數當前陣列元素是必須要寫的， 索引號可選。</p></blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// forEach 就是遍歷  加強版的for迴圈  適合於遍歷陣列物件</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> arr = [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> result = arr.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(item)  <span class=\"comment\">// 陣列元素 red  green pink</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index) <span class=\"comment\">// 索引號</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// console.log(result)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"filter篩選陣列\"><a href=\"#filter篩選陣列\" class=\"headerlink\" title=\"filter篩選陣列\"></a>filter篩選陣列</h2><p>filter() 方法創建一個新的陣列，新陣列中的元素是通過檢查指定陣列中符合條件的所有元素</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">語法:</span><br><span class=\"line\">被遍歷的數組.<span class=\"title function_\">filter</span>(<span class=\"keyword\">function</span> (<span class=\"params\">参數, index</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> 篩選條件</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>主要使用場景： 篩選陣列符合條件的元素，並返回篩選之後元素的新陣列</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> arr = [<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// const newArr = arr.filter(function (item, index) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   // console.log(item)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   // console.log(index)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//   return item &gt;= 20</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 返回的符合條件的新陣列</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> newArr = arr.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item &gt;= <span class=\"number\">20</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newArr)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n","feature":null,"text":" 學習作用域、變數提升、閉包等語言特徵，加深對 JavaScript 的理解，掌握變數賦值、函式宣告的簡潔語法，降低代碼的冗餘度。 理解作用域對程式執行的影響 ...","permalink":"/post/2303-3 JS 進階1","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">作用域</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B1%80%E9%83%A8%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">局部作用域</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B8%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">函數作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A1%8A%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">塊作用域</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%9F%9F%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">全域作用域</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%8F%88\"><span class=\"toc-text\">作用域鏈</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%A9%9F%E5%88%B6\"><span class=\"toc-text\">JS垃圾回收機制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%96%89%E5%8C%85\"><span class=\"toc-text\">閉包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%8A%E6%95%B8%E6%8F%90%E5%8D%87\"><span class=\"toc-text\">變數提升</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B8\"><span class=\"toc-text\">函數</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B8%E6%8F%90%E5%8D%87\"><span class=\"toc-text\">函數提升</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B8%E5%8F%83%E6%95%B8\"><span class=\"toc-text\">函數參數</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A0%90%E8%A8%AD%E5%80%BC\"><span class=\"toc-text\">預設值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8B%95%E6%85%8B%E5%8F%83%E6%95%B8\"><span class=\"toc-text\">動態參數</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%A9%E9%A4%98%E5%8F%83%E6%95%B8-%E8%88%87-%E5%B1%95%E9%96%8B%E9%81%8B%E7%AE%97%E7%AC%A6-%E7%9B%B8%E4%BC%BC\"><span class=\"toc-text\">剩餘參數 (與 展開運算符 相似)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%AD%E9%A0%AD%E5%87%BD%E6%95%B8\"><span class=\"toc-text\">箭頭函數</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%AD%E9%A0%AD%E5%87%BD%E6%95%B8%E5%8F%83%E6%95%B8\"><span class=\"toc-text\">箭頭函數參數</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%AD%E9%A0%AD%E5%87%BD%E6%95%B8-this\"><span class=\"toc-text\">箭頭函數 this</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%A7%8B%E8%B3%A6%E5%80%BC\"><span class=\"toc-text\">解構賦值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%99%A3%E5%88%97%E8%A7%A3%E6%A7%8B\"><span class=\"toc-text\">陣列解構</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8D%E8%B1%A1%E8%A7%A3%E6%A7%8B-%E9%87%8D%E8%A6%81\"><span class=\"toc-text\">對象解構 (重要)</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%B6%9C%E5%90%88%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">綜合案例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#forEach%E9%81%8D%E6%AD%B7%E9%99%A3%E5%88%97\"><span class=\"toc-text\">forEach遍歷陣列</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#filter%E7%AF%A9%E9%81%B8%E9%99%A3%E5%88%97\"><span class=\"toc-text\">filter篩選陣列</span></a></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"JavaScript 進階 - 第2天","uid":"b57064d0869ba36d27730b8b11beee0b","slug":"2303-3 JS 進階2","date":"2023-03-30T01:22:08.000Z","updated":"2023-04-04T00:04:34.343Z","comments":true,"path":"api/articles/2303-3 JS 進階2.json","keywords":null,"cover":[],"text":" 瞭解物件導向程式設計的基礎概念及構造函數的作用，體會 JavaScript 一切皆物件的語言特徵，掌握常見的物件屬性和方法的使用。 瞭解物件導向程式設計中的一...","permalink":"/post/2303-3 JS 進階2","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"JavaScript Web APIs - 第6天","uid":"1359ad702c466c1bb96b6c62885f8401","slug":"2303-2 JS Web APIs 06","date":"2023-03-28T01:22:08.000Z","updated":"2023-03-30T03:57:26.346Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 06.json","keywords":null,"cover":[],"text":" 目標：能夠利用規則運算式完成小兔鮮註冊頁面的表單驗證，具備常見的表單驗證能力 規則運算式 綜合案例 階段案例 規則運算式規則運算式（Regular Expre...","permalink":"/post/2303-2 JS Web APIs 06","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}