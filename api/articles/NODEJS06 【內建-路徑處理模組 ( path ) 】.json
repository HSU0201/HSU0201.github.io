{"title":"內建-路徑處理模組 ( path )","uid":"1033bc320af8e95a06637ef625a7542f","slug":"NODEJS06 【內建-路徑處理模組 ( path ) 】","date":"2024-01-05T11:30:05.000Z","updated":"2024-02-10T10:48:36.190Z","comments":true,"path":"api/articles/NODEJS06 【內建-路徑處理模組 ( path ) 】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/node.js/what-is-npm.png?raw=true","content":"<h1 id=\"06-【內建-路徑處理模組-path-】\"><a href=\"#06-【內建-路徑處理模組-path-】\" class=\"headerlink\" title=\"06 【內建-路徑處理模組 ( path ) 】\"></a>06 【內建-路徑處理模組 ( path ) 】</h1><h2 id=\"1-path模組簡介\"><a href=\"#1-path模組簡介\" class=\"headerlink\" title=\"1. path模組簡介\"></a>1. path模組簡介</h2><p>路徑處理模組（path module）是 Node.js 核心模組之一，用於處理文件路徑和目錄路徑。它提供了一組方法，可幫助開發者在不同平台上處理文件路徑時確保一致性。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>path 模組提供了 操作路徑 的功能，較為常用的幾個 API：</p></blockquote>\n<table>\n<thead>\n<tr>\n<th>API</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>path.resolve</td>\n<td>拚接規範的絕對路徑 常用</td>\n</tr>\n<tr>\n<td>path.sep</td>\n<td>獲取操作系統的路徑分隔符</td>\n</tr>\n<tr>\n<td>path.parse</td>\n<td>解析路徑並返回物件</td>\n</tr>\n<tr>\n<td>path.dirname</td>\n<td>獲取路徑的目錄名</td>\n</tr>\n<tr>\n<td>path.basename</td>\n<td>獲取路徑的基礎名稱</td>\n</tr>\n<tr>\n<td>path.extname</td>\n<td>獲得路徑的副檔名</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-獲取路徑-文件名-副檔名\"><a href=\"#2-獲取路徑-文件名-副檔名\" class=\"headerlink\" title=\"2 獲取路徑&#x2F;文件名&#x2F;副檔名\"></a>2 獲取路徑&#x2F;文件名&#x2F;副檔名</h2><ul>\n<li>獲取路徑：path.dirname(filepath)</li>\n<li>獲取文件名：path.basename(filepath)</li>\n<li>獲取副檔名：path.extname(filepath)</li>\n</ul>\n<h3 id=\"2-1-獲取所在路徑\"><a href=\"#2-1-獲取所在路徑\" class=\"headerlink\" title=\"2.1 獲取所在路徑\"></a>2.1 獲取所在路徑</h3><p>例子如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> filepath = <span class=\"string\">&quot;/tmp/demo/js/test.js&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出：/tmp/demo/js</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">dirname</span>(filepath));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-獲取文件名\"><a href=\"#2-2-獲取文件名\" class=\"headerlink\" title=\"2.2 獲取文件名\"></a>2.2 獲取文件名</h3><p>嚴格來說，path.basename(filepath) 函數僅返回指定路徑中的最後一部分，而不考慮該部分是否確實是文件名。</p>\n<p>然而，在實際應用中，通常可以將其視為獲取文件名的簡單方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出：test.js</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">basename</span>(<span class=\"string\">&quot;/tmp/demo/js/test.js&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出：test</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">basename</span>(<span class=\"string\">&quot;/tmp/demo/js/test/&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出：test</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">basename</span>(<span class=\"string\">&quot;/tmp/demo/js/test&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>如果只想獲取文件名，單不包括文件擴展呢？可以用上第二個參數。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 輸出：test</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">basename</span>(<span class=\"string\">&quot;/tmp/demo/js/test.js&quot;</span>, <span class=\"string\">&quot;.js&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-獲取文件副檔名\"><a href=\"#2-3-獲取文件副檔名\" class=\"headerlink\" title=\"2.3 獲取文件副檔名\"></a>2.3 獲取文件副檔名</h3><p>簡單的例子如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> filepath = <span class=\"string\">&quot;/tmp/demo/js/test.js&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出：.js</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">extname</span>(filepath));</span><br></pre></td></tr></table></figure>\n\n<p>更詳細的規則是如下：（假設 path.basename(filepath) &#x3D;&#x3D;&#x3D; B ）</p>\n<ul>\n<li>從 B 的最後一個<code>.</code>開始截取，直到最後一個字符。</li>\n<li>如果 B 中不存在<code>.</code>，或者 B 的第一個字符就是<code>.</code>，那麼返回空字符串。</li>\n</ul>\n<p>直接看<a href=\"https://nodejs.org/api/path.html#path_path_extname_path\">官方文檔</a>的例子</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">path.<span class=\"title function_\">extname</span>(<span class=\"string\">&quot;index.html&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// returns &#x27;.html&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">extname</span>(<span class=\"string\">&quot;index.coffee.md&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// returns &#x27;.md&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">extname</span>(<span class=\"string\">&quot;index.&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// returns &#x27;.&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">extname</span>(<span class=\"string\">&quot;index&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// returns &#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">extname</span>(<span class=\"string\">&quot;.index&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// returns &#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-路徑組合\"><a href=\"#3-路徑組合\" class=\"headerlink\" title=\"3 路徑組合\"></a>3 路徑組合</h2><ul>\n<li>path.join([…paths])</li>\n<li>path.resolve([…paths])</li>\n</ul>\n<h3 id=\"3-1-path-resolve-生成完成的絕對路徑\"><a href=\"#3-1-path-resolve-生成完成的絕對路徑\" class=\"headerlink\" title=\"3.1 path.resolve() 生成完成的絕對路徑\"></a>3.1 path.resolve() 生成完成的絕對路徑</h3><p>語法格式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">path.<span class=\"title function_\">resolve</span>([...myPaths]);</span><br></pre></td></tr></table></figure>\n\n<p>解釋：</p>\n<ul>\n<li>將路徑或路徑片段的序列解析為絕對路徑。</li>\n<li>返回的路徑是<strong>從右往左</strong>處理，後面的每個 myPath 被依次解析，直到構造出一個完整的絕對路徑。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>你可以想象現在你在 shell 下面，從左到右執行一遍<code>cd path</code>指令，最終獲取的絕對路徑&#x2F;文件名，就是這個 API 所返回的結果了。</p></blockquote>\n<p>代碼舉例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = [<span class=\"string\">&quot;/foo1/foo2&quot;</span>, <span class=\"string\">&quot;dselegent&quot;</span>, <span class=\"string\">&quot;foo3&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> result1 = path.<span class=\"title function_\">resolve</span>(...arr1);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1); <span class=\"comment\">// 列印結果：/foo1/foo2/dselegent/foo3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr2 = [<span class=\"string\">&quot;/foo1/foo2&quot;</span>, <span class=\"string\">&quot;/dselegent&quot;</span>, <span class=\"string\">&quot;foo3&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> result2 = path.<span class=\"title function_\">resolve</span>(...arr2);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2); <span class=\"comment\">// 列印結果：/dselegent/foo3</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 假設當前工作路徑是 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;.&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出 /foo/bar/baz</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;/foo/bar&quot;</span>, <span class=\"string\">&quot;./baz&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出 /foo/bar/baz</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;/foo/bar&quot;</span>, <span class=\"string\">&quot;./baz/&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出 /tmp/file</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;/foo/bar&quot;</span>, <span class=\"string\">&quot;/tmp/file/&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 輸出 /Users/a/Documents/git-code/nodejs-learning-guide/examples/2016.11.08-node-path/www/js/mod.js</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(<span class=\"string\">&quot;www&quot;</span>, <span class=\"string\">&quot;js/upload&quot;</span>, <span class=\"string\">&quot;../mod.js&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-path-join-將多個路徑進行拚接\"><a href=\"#3-2-path-join-將多個路徑進行拚接\" class=\"headerlink\" title=\"3.2 path.join() 將多個路徑進行拚接\"></a>3.2 path.join() 將多個路徑進行拚接</h3><p>利用 path.join() 方法將路徑進行拚接，避免手動拼接錯誤。</p>\n<p>語法格式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">path.<span class=\"title function_\">join</span>([...paths]);</span><br></pre></td></tr></table></figure>\n\n<p>解釋：使用平臺特定的分隔符作為定界符將所有給定的 path 片段連接在一起，然後規範化生成的路徑。</p>\n<p>代碼舉例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result1 = path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&quot;./app.js&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result1);</span><br><span class=\"line\"><span class=\"comment\">// 返回：/Users/smyhvae/dselegent/app.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result2 = path.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;/foo1&quot;</span>, <span class=\"string\">&quot;foo2&quot;</span>, <span class=\"string\">&quot;./foo3&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result2);</span><br><span class=\"line\"><span class=\"comment\">// 返回：/foo1/foo2/foo3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result3 = path.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;/foo1&quot;</span>, <span class=\"string\">&quot;foo2&quot;</span>, <span class=\"string\">&quot;/foo3&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result3);</span><br><span class=\"line\"><span class=\"comment\">// 返回：/foo1/foo2/foo3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result4 = path.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;/foo1&quot;</span>, <span class=\"string\">&quot;foo2&quot;</span>, <span class=\"string\">&quot;/foo3&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result4);</span><br><span class=\"line\"><span class=\"comment\">// Throws &#x27;TypeError: Path must be a string. Received &#123;&#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result5 = path.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;/foo&quot;</span>, <span class=\"string\">&quot;bar&quot;</span>, <span class=\"string\">&quot;baz/asdf&quot;</span>, <span class=\"string\">&quot;quux&quot;</span>, <span class=\"string\">&quot;..&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result5);</span><br><span class=\"line\"><span class=\"comment\">// Returns: &#x27;/foo/bar/baz/asdf&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 注意，最後的 &#x27;..&#x27; 會返回上一級目錄，因此在結果中被忽略了。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-path-resolve-和-path-join-區別\"><a href=\"#3-3-path-resolve-和-path-join-區別\" class=\"headerlink\" title=\"3.3 path.resolve 和 path.join 區別\"></a>3.3 path.resolve 和 path.join 區別</h3><p>path.resolve 和 path.join 都是屬於 path 核心模組下的方法，用來拚接路徑。</p>\n<p>都可以拚接成一個完整路徑.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dirname = <span class=\"string\">&quot;/User/Desktop&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> basename = <span class=\"string\">&quot;abc.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">join</span>(dirname, basename); <span class=\"comment\">// /User/Desktop/abc.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">resolve</span>(dirname, basename); <span class=\"comment\">// /User/Desktop/abc.txt</span></span><br></pre></td></tr></table></figure>\n\n<p>如果 dirname 是以 .&#x2F; 、..&#x2F;、不加 &#x2F; 開頭的話，那麼 resolve 會找到磁盤下的根目錄</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dirname = <span class=\"string\">&quot;../User/Desktop&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> basename = <span class=\"string\">&quot;abc.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">join</span>(dirname, basename); <span class=\"comment\">// ../User/Desktop/abc.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">resolve</span>(dirname, basename); <span class=\"comment\">// /Users/Desktop/node/User/Desktop/abc.txt</span></span><br></pre></td></tr></table></figure>\n\n<p>如果 basename 是以 &#x2F; 開頭的，那麼 resolve 就會直接返回 basename</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> dirname = <span class=\"string\">&quot;/User/Desktop&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> basename = <span class=\"string\">&quot;/abc.txt&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">join</span>(dirname, basename); <span class=\"comment\">// /User/Desktop/abc.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\">path.<span class=\"title function_\">resolve</span>(dirname, basename); <span class=\"comment\">// /abc.txt</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-其他常見屬性或方法\"><a href=\"#4-其他常見屬性或方法\" class=\"headerlink\" title=\"4 其他常見屬性或方法\"></a>4 其他常見屬性或方法</h2><h3 id=\"4-1-sep-取得當前作業系統中用於分隔檔案路徑部分的特殊符號\"><a href=\"#4-1-sep-取得當前作業系統中用於分隔檔案路徑部分的特殊符號\" class=\"headerlink\" title=\"4.1 sep 取得當前作業系統中用於分隔檔案路徑部分的特殊符號\"></a>4.1 sep 取得當前作業系統中用於分隔檔案路徑部分的特殊符號</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; sep &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(sep); <span class=\"comment\">// 輸出結果將會根據你的作業系統而變化，可能是 &#x27;\\&#x27; 或 &#x27;/&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-parse-，將一個路徑字串解析成一個物件\"><a href=\"#4-2-parse-，將一個路徑字串解析成一個物件\" class=\"headerlink\" title=\"4.2 parse()，將一個路徑字串解析成一個物件\"></a>4.2 parse()，將一個路徑字串解析成一個物件</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; parse &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">parse</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  root: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">dir</span>: <span class=\"string\">&#x27;file:///Users/benchen/Downloads/test01_ESM&#x27;</span>,</span><br><span class=\"line\">  base: <span class=\"string\">&#x27;testPath.mjs&#x27;</span>,</span><br><span class=\"line\">  ext: <span class=\"string\">&#x27;.mjs&#x27;</span>,</span><br><span class=\"line\">  name: <span class=\"string\">&#x27;testPath&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>parse()方法解析的物件包含了這個路徑的各個組成部分，包括：root（根路徑）、dir（目錄名）、base（基本名稱，包括副檔名）、ext（副檔名）以及 name（檔名，不包括副檔名）</p>\n<p><strong>如果再經由 url 模組下的 fileURLToPath 轉成相對路徑，再由 parse() 這個方法取用</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; parse &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; fileURLToPath &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;url&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">parse</span>(<span class=\"title function_\">fileURLToPath</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>)));</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  root: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">  <span class=\"built_in\">dir</span>: <span class=\"string\">&#x27;/Users/benchen/Downloads/test01_ESM&#x27;</span>,</span><br><span class=\"line\">  base: <span class=\"string\">&#x27;testPath.mjs&#x27;</span>,</span><br><span class=\"line\">  ext: <span class=\"string\">&#x27;.mjs&#x27;</span>,</span><br><span class=\"line\">  name: <span class=\"string\">&#x27;testPath&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在 root 與 dir 上會有差異</li>\n<li>在 CommonJS 模組下的 <code>__filename</code> 就等同於 fileURLToPath(import.meta.url)</li>\n</ul>\n<h3 id=\"4-3-basename-，取出一個路徑字串的基本名稱\"><a href=\"#4-3-basename-，取出一個路徑字串的基本名稱\" class=\"headerlink\" title=\"4.3 basename()，取出一個路徑字串的基本名稱\"></a>4.3 basename()，取出一個路徑字串的基本名稱</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; basename &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">basename</span>(<span class=\"string\">&quot;/Users/test/Desktop/demo.txt&quot;</span>));</span><br><span class=\"line\"><span class=\"comment\">// 輸出：&#x27;demo.txt&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-dirname-，取出一個路徑字串的目錄名稱\"><a href=\"#4-4-dirname-，取出一個路徑字串的目錄名稱\" class=\"headerlink\" title=\"4.4 dirname()，取出一個路徑字串的目錄名稱\"></a>4.4 dirname()，取出一個路徑字串的目錄名稱</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; dirname &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">dirname</span>(<span class=\"string\">&quot;/Users/test/Desktop/demo.txt&quot;</span>));</span><br><span class=\"line\"><span class=\"comment\">// 輸出：&#x27;/Users/test/Desktop&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-5-extname-，取出一個路徑字串的副檔名\"><a href=\"#4-5-extname-，取出一個路徑字串的副檔名\" class=\"headerlink\" title=\"4.5 extname()，取出一個路徑字串的副檔名\"></a>4.5 extname()，取出一個路徑字串的副檔名</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; extname &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">extname</span>(<span class=\"string\">&quot;/Users/test/Desktop/demo.txt&quot;</span>));</span><br><span class=\"line\"><span class=\"comment\">// 輸出：&#x27;.txt&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-幾個常見路徑\"><a href=\"#5-幾個常見路徑\" class=\"headerlink\" title=\"5 幾個常見路徑\"></a>5 幾個常見路徑</h2><ul>\n<li><code>__dirname</code>：這是一個常數，表示：當前執行文件所在<strong>完整目錄</strong>。</li>\n<li><code>__filename</code>：這是一個常數。表示：當前執行文件的<strong>完整目錄 + 文件名</strong>。</li>\n<li><code>process.cwd</code>：獲取當前執行 Node 指令 時的目錄名。</li>\n</ul>\n<p>代碼舉例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(__dirname);</span><br><span class=\"line\"><span class=\"comment\">// /Users/aaaaa/bbbbb</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(__filename);</span><br><span class=\"line\"><span class=\"comment\">// /Users/aaaaa/bbbbb/app.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(process.<span class=\"title function_\">cwd</span>());</span><br><span class=\"line\"><span class=\"comment\">// /Users/aaaaa/bbbbb</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-速查範例\"><a href=\"#6-速查範例\" class=\"headerlink\" title=\"6.速查範例\"></a>6.速查範例</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 匯入 fs 模組</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> fs <span class=\"keyword\">from</span> <span class=\"string\">&quot;fs&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 匯入 path 模組</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&quot;path&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 寫入文件</span></span><br><span class=\"line\"><span class=\"comment\">// fs.writeFileSync(__dirname + &#x27;/index.html&#x27;, &#x27;love&#x27;);</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(__dirname + <span class=\"string\">&quot;/index.html&quot;</span>); <span class=\"comment\">//=&gt;D:\\Desktop\\Node\\code\\04-path/index.html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解決問題並拼接絕對路徑</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&quot;./index.html&quot;</span>)); <span class=\"comment\">//=&gt;D:\\Desktop\\Node\\code\\04-path\\index.html</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&quot;index.html&quot;</span>)); <span class=\"comment\">//=&gt;D:\\Desktop\\Node\\code\\04-path\\index.html</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&quot;/index.html&quot;</span>, <span class=\"string\">&quot;./test&quot;</span>)); <span class=\"comment\">//=&gt;D:\\index.html\\test</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 獲取路徑分隔符</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"property\">sep</span>); <span class=\"comment\">//=&gt; window \\  linux /</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解析路徑</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>); <span class=\"comment\">//=&gt;文件的絕對路徑 //=&gt;D:\\Desktop\\Node\\code\\04-path\\01-path.js</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">&quot;D:\\\\Desktop\\\\Node\\\\code\\\\04-path\\\\01-path.js&quot;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">parse</span>(str));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 獲取路徑基礎名稱</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">basename</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 獲取路徑的目錄名</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">dirname</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 獲取路徑的擴展名</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(path.<span class=\"title function_\">extname</span>(<span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>));</span><br></pre></td></tr></table></figure>\n","feature":null,"text":"06 【內建-路徑處理模組 ( path ) 】1. path模組簡介路徑處理模組（path module）是 Node.js 核心模組之一，用於處理文件路徑和...","permalink":"/post/NODEJS06 【內建-路徑處理模組 ( path ) 】","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"node.js","slug":"node-js","count":6,"path":"api/categories/node-js.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":29,"path":"api/tags/桃園資展筆記.json"},{"name":"node.js","slug":"node-js","count":8,"path":"api/tags/node-js.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#06-%E3%80%90%E5%85%A7%E5%BB%BA-%E8%B7%AF%E5%BE%91%E8%99%95%E7%90%86%E6%A8%A1%E7%B5%84-path-%E3%80%91\"><span class=\"toc-text\">06 【內建-路徑處理模組 ( path ) 】</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-path%E6%A8%A1%E7%B5%84%E7%B0%A1%E4%BB%8B\"><span class=\"toc-text\">1. path模組簡介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E7%8D%B2%E5%8F%96%E8%B7%AF%E5%BE%91-%E6%96%87%E4%BB%B6%E5%90%8D-%E5%89%AF%E6%AA%94%E5%90%8D\"><span class=\"toc-text\">2 獲取路徑&#x2F;文件名&#x2F;副檔名</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E7%8D%B2%E5%8F%96%E6%89%80%E5%9C%A8%E8%B7%AF%E5%BE%91\"><span class=\"toc-text\">2.1 獲取所在路徑</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E7%8D%B2%E5%8F%96%E6%96%87%E4%BB%B6%E5%90%8D\"><span class=\"toc-text\">2.2 獲取文件名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E7%8D%B2%E5%8F%96%E6%96%87%E4%BB%B6%E5%89%AF%E6%AA%94%E5%90%8D\"><span class=\"toc-text\">2.3 獲取文件副檔名</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%B7%AF%E5%BE%91%E7%B5%84%E5%90%88\"><span class=\"toc-text\">3 路徑組合</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-path-resolve-%E7%94%9F%E6%88%90%E5%AE%8C%E6%88%90%E7%9A%84%E7%B5%95%E5%B0%8D%E8%B7%AF%E5%BE%91\"><span class=\"toc-text\">3.1 path.resolve() 生成完成的絕對路徑</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-path-join-%E5%B0%87%E5%A4%9A%E5%80%8B%E8%B7%AF%E5%BE%91%E9%80%B2%E8%A1%8C%E6%8B%9A%E6%8E%A5\"><span class=\"toc-text\">3.2 path.join() 將多個路徑進行拚接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-path-resolve-%E5%92%8C-path-join-%E5%8D%80%E5%88%A5\"><span class=\"toc-text\">3.3 path.resolve 和 path.join 區別</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%85%B6%E4%BB%96%E5%B8%B8%E8%A6%8B%E5%B1%AC%E6%80%A7%E6%88%96%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">4 其他常見屬性或方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-sep-%E5%8F%96%E5%BE%97%E7%95%B6%E5%89%8D%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1%E4%B8%AD%E7%94%A8%E6%96%BC%E5%88%86%E9%9A%94%E6%AA%94%E6%A1%88%E8%B7%AF%E5%BE%91%E9%83%A8%E5%88%86%E7%9A%84%E7%89%B9%E6%AE%8A%E7%AC%A6%E8%99%9F\"><span class=\"toc-text\">4.1 sep 取得當前作業系統中用於分隔檔案路徑部分的特殊符號</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-parse-%EF%BC%8C%E5%B0%87%E4%B8%80%E5%80%8B%E8%B7%AF%E5%BE%91%E5%AD%97%E4%B8%B2%E8%A7%A3%E6%9E%90%E6%88%90%E4%B8%80%E5%80%8B%E7%89%A9%E4%BB%B6\"><span class=\"toc-text\">4.2 parse()，將一個路徑字串解析成一個物件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-basename-%EF%BC%8C%E5%8F%96%E5%87%BA%E4%B8%80%E5%80%8B%E8%B7%AF%E5%BE%91%E5%AD%97%E4%B8%B2%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%90%8D%E7%A8%B1\"><span class=\"toc-text\">4.3 basename()，取出一個路徑字串的基本名稱</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-dirname-%EF%BC%8C%E5%8F%96%E5%87%BA%E4%B8%80%E5%80%8B%E8%B7%AF%E5%BE%91%E5%AD%97%E4%B8%B2%E7%9A%84%E7%9B%AE%E9%8C%84%E5%90%8D%E7%A8%B1\"><span class=\"toc-text\">4.4 dirname()，取出一個路徑字串的目錄名稱</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-extname-%EF%BC%8C%E5%8F%96%E5%87%BA%E4%B8%80%E5%80%8B%E8%B7%AF%E5%BE%91%E5%AD%97%E4%B8%B2%E7%9A%84%E5%89%AF%E6%AA%94%E5%90%8D\"><span class=\"toc-text\">4.5 extname()，取出一個路徑字串的副檔名</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%B9%BE%E5%80%8B%E5%B8%B8%E8%A6%8B%E8%B7%AF%E5%BE%91\"><span class=\"toc-text\">5 幾個常見路徑</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E9%80%9F%E6%9F%A5%E7%AF%84%E4%BE%8B\"><span class=\"toc-text\">6.速查範例</span></a></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"nodejs 簡介","uid":"977c23653e58c4b66e13f0c68d29b569","slug":"NODEJS01 【nodejs简介】","date":"2024-01-05T11:30:05.000Z","updated":"2024-02-13T04:56:26.504Z","comments":true,"path":"api/articles/NODEJS01 【nodejs简介】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/blog-Article-Cover/3050a56ba33ff757c6fa4872a4a672f2.jpg?raw=true","text":"01 【nodejs 簡介】1、Node.js 使用 JavaScript 語言開發伺服器端應用，是一個開源的、跨平台的 JavaScript 運行環境。 2、...","permalink":"/post/NODEJS01 【nodejs简介】","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"node.js","slug":"node-js","count":6,"path":"api/categories/node-js.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":29,"path":"api/tags/桃園資展筆記.json"},{"name":"node.js","slug":"node-js","count":8,"path":"api/tags/node-js.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"nodejs 開發環境安裝","uid":"080396e1adb14ff1690d9b335f3a1888","slug":"NODEJS07 【內建-檔案系統模組 file system (fs)】","date":"2024-01-05T11:30:05.000Z","updated":"2024-02-14T09:04:00.246Z","comments":true,"path":"api/articles/NODEJS07 【內建-檔案系統模組 file system (fs)】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/blog-Article-Cover/3050a56ba33ff757c6fa4872a4a672f2.jpg?raw=true","text":"07 【內建-檔案系統模組 file system (fs)】fs 全稱為 file system ，稱之為 文件系統 ，是 Node.js 中的 內建模組 ，...","permalink":"/post/NODEJS07 【內建-檔案系統模組 file system (fs)】","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"node.js","slug":"node-js","count":6,"path":"api/categories/node-js.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":29,"path":"api/tags/桃園資展筆記.json"},{"name":"node.js","slug":"node-js","count":8,"path":"api/tags/node-js.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}