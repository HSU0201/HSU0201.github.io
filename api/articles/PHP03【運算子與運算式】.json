{"title":"運算子與運算式","uid":"56db2cad4299ff0a006fb12b8d33d535","slug":"PHP03【運算子與運算式】","date":"2024-11-25T05:20:05.000Z","updated":"2024-02-04T04:59:52.011Z","comments":true,"path":"api/articles/PHP03【運算子與運算式】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/blog-Article-Cover/PHPSS.png?raw=true","content":"<h1 id=\"03【運算子與運算式】\"><a href=\"#03【運算子與運算式】\" class=\"headerlink\" title=\"03【運算子與運算式】\"></a>03【運算子與運算式】</h1><h2 id=\"1-運算子\"><a href=\"#1-運算子\" class=\"headerlink\" title=\"1. 運算子\"></a>1. 運算子</h2><p>運算子：是一種將資料進行運算的特殊符號，在 PHP 中一共有十多種運算子。</p>\n<h3 id=\"1-1-算術運算子\"><a href=\"#1-1-算術運算子\" class=\"headerlink\" title=\"1.1 算術運算子\"></a>1.1 算術運算子</h3><p><code>+ - \\ * / %</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span> + <span class=\"variable\">$b</span>;  <span class=\"comment\">// 結果：13</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span> - <span class=\"variable\">$b</span>;  <span class=\"comment\">// 結果：7</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span> * <span class=\"variable\">$b</span>;  <span class=\"comment\">// 結果：30</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span> / <span class=\"variable\">$b</span>;  <span class=\"comment\">// 結果：3.3333...</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span> % <span class=\"variable\">$b</span>;  <span class=\"comment\">// 結果：1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-比較運算子\"><a href=\"#1-2-比較運算子\" class=\"headerlink\" title=\"1.2 比較運算子\"></a>1.2 比較運算子</h3><ul>\n<li><code>&gt;</code> , <code>&gt;=</code> , <code>&lt;</code> , <code>&lt;=</code> , <code>==</code> (資料大小相同即可，無需考慮資料資料型別)</li>\n<li><code>==</code>： 比較資料大小是否相同，無需考慮資料型別。</li>\n<li><code>!=</code> , <code>&lt;&gt;</code>： 檢查資料是否不相等。</li>\n<li><code>===</code>： 全等於，要求資料大小和資料型別均相同。</li>\n<li><code>!==</code>： 不全等於，要求資料大小或資料型別有一方不同。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"string\">&#x27;123&#x27;</span>;  <span class=\"comment\">// 字符串</span></span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"number\">123</span>;  <span class=\"comment\">// 整型</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> == <span class=\"variable\">$b</span>);   <span class=\"comment\">// 結果： bool(true)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$a</span> === <span class=\"variable\">$b</span>);   <span class=\"comment\">// 結果： bool(false)   不全等於</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-邏輯運算子\"><a href=\"#1-3-邏輯運算子\" class=\"headerlink\" title=\"1.3 邏輯運算子\"></a>1.3 邏輯運算子</h3><p><code>&amp;&amp;</code>(左邊條件與右邊條件同時成立)</p>\n<p><code>||</code>(有一個滿足即可) !(取反)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$c</span> = <span class=\"string\">&#x27;weekend&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$d</span> = <span class=\"string\">&#x27;goods&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$c</span> == <span class=\"string\">&#x27;weekend&#x27;</span> &amp;&amp; <span class=\"variable\">$d</span> == <span class=\"string\">&#x27;good&#x27;</span>);   <span class=\"comment\">// bool(false)</span></span><br><span class=\"line\"><span class=\"comment\">// &amp;&amp; 可寫成 and</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$c</span> == <span class=\"string\">&#x27;weekend&#x27;</span> <span class=\"keyword\">and</span> <span class=\"variable\">$d</span> == <span class=\"string\">&#x27;good&#x27;</span>);   <span class=\"comment\">// bool(false)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$c</span> == <span class=\"string\">&#x27;weekend&#x27;</span> || <span class=\"variable\">$d</span> == <span class=\"string\">&#x27;good&#x27;</span>);   <span class=\"comment\">// bool(true)</span></span><br><span class=\"line\"><span class=\"comment\">// || 可寫成 or</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$c</span> == <span class=\"string\">&#x27;weekend&#x27;</span> <span class=\"keyword\">or</span> <span class=\"variable\">$d</span> == <span class=\"string\">&#x27;good&#x27;</span>);   <span class=\"comment\">// bool(true)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(!(<span class=\"variable\">$c</span> == <span class=\"string\">&#x27;good&#x27;</span>));   <span class=\"comment\">// bool(true)</span></span><br></pre></td></tr></table></figure>\n\n<p><code>xor</code>(邏輯互斥運算子)</p>\n<ul>\n<li>一對一錯 true</li>\n<li>兩個中一個對&#x2F;錯 false</li>\n<li>兩個一個對 true</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x=<span class=\"number\">10</span> y=<span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>==<span class=\"number\">10</span> <span class=\"keyword\">xor</span> <span class=\"variable\">$y</span>==<span class=\"number\">5</span>);<span class=\"comment\">//bool(false)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>==<span class=\"number\">5</span> <span class=\"keyword\">xor</span> <span class=\"variable\">$y</span>==<span class=\"number\">10</span>);<span class=\"comment\">//bool(false)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$x</span>==<span class=\"number\">10</span> <span class=\"keyword\">xor</span> <span class=\"variable\">$y</span>==<span class=\"number\">10</span>); <span class=\"comment\">//bool(true)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-4-連接運算子\"><a href=\"#1-4-連接運算子\" class=\"headerlink\" title=\"1.4 連接運算子\"></a>1.4 連接運算子</h3><p><code>.</code>(將字符串連接一起) <code>.=</code>(將左邊內容與右邊內容連接起來並重新賦值)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$e</span> = <span class=\"string\">&#x27;hello&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$f</span> = <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$e</span> . <span class=\"variable\">$f</span>;   <span class=\"comment\">// hello123（注意，此處有強製型別轉換）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$e</span> .= <span class=\"variable\">$f</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$e</span>;       <span class=\"comment\">// hello123</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-5-錯誤抑製符\"><a href=\"#1-5-錯誤抑製符\" class=\"headerlink\" title=\"1.5 錯誤抑製符\"></a>1.5 錯誤抑製符</h3><p><code>@</code>(可能出錯的表達式)，在 PHP 中有一些錯誤可以提前預知，但又不想報錯，這就需要錯誤抑製符。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$g</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$f</span> % <span class=\"variable\">$g</span>;    <span class=\"comment\">// 此時會報錯</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> @(<span class=\"variable\">$f</span> % <span class=\"variable\">$g</span>); <span class=\"comment\">// 不會報錯</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-6-三目運算子-問號表達式\"><a href=\"#1-6-三目運算子-問號表達式\" class=\"headerlink\" title=\"1.6 三目運算子(問號表達式)\"></a>1.6 三目運算子(問號表達式)</h3><p><code>表達式 1 ？ 表達式 2：表達式 3</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$g</span> ==<span class=\"number\">0</span>?<span class=\"number\">1</span>:<span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-7-自操作運算子\"><a href=\"#1-7-自操作運算子\" class=\"headerlink\" title=\"1.7 自操作運算子\"></a>1.7 自操作運算子</h3><p><code>++</code> <code>--</code>(前置或後置如果只有自操作，則效果一緻)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$i</span> = <span class=\"variable\">$g</span>++;    <span class=\"comment\">// $g = 1;  $i = 0</span></span><br><span class=\"line\"><span class=\"variable\">$i</span> = ++<span class=\"variable\">$g</span>;    <span class=\"comment\">// $g = 2;  $i = 2;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-8-位運算子\"><a href=\"#1-8-位運算子\" class=\"headerlink\" title=\"1.8 位運算子\"></a>1.8 位運算子</h3><p>計算機碼：計算機在實際存儲資料時，採用的編碼規則(二進位規則)</p>\n<p>計算機碼：原碼、反碼和補碼。數值本身最左邊一位用來充當符號位：正數為 0，負數為 1；</p>\n<p>原碼:資料本身從十進位轉換成二進位得到的結果</p>\n<ul>\n<li>正數，左符號位為 0</li>\n<li>負數：右符號位為 1</li>\n<li>反碼：針對負數，符號位不變，其他位取反。</li>\n<li>補碼：針對負數，反碼+1.（系統中存的為補碼）</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>以 0 為例，若是原碼，則+0 &#x3D; 00000000 -0 &#x3D; 10000000；二者不一樣<br>-0 反碼 11111111 -0 補碼 00000000 與+0 一樣（正數原碼、補碼、反碼為其本身）。</p></blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$j</span> = <span class=\"number\">5</span>;      <span class=\"comment\">// 原碼：00000101</span></span><br><span class=\"line\"><span class=\"variable\">$k</span> = -<span class=\"number\">5</span>;     <span class=\"comment\">// 原碼：10000101  反碼：11111010  補碼：11111011</span></span><br></pre></td></tr></table></figure>\n\n<p>位運算：取出計算機中最小的單位（bit）進行運算<br><code>&amp;</code> <code>|</code> <code>~</code>(按位取反)<br><code>^</code>(按位異或)<br><code>&gt;&gt;</code>(右移)<br><code>&lt;&lt;</code>(左移)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 註：1、系統進行位運算時，均是利用補碼進行運算的     2、運算結束之後，必須轉換為原碼進行顯示</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 按位取與</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$j</span> &amp; <span class=\"variable\">$k</span>);    <span class=\"comment\">// int(1)</span></span><br><span class=\"line\"><span class=\"comment\">/*    5  00000101</span></span><br><span class=\"line\"><span class=\"comment\">     -5  11111011</span></span><br><span class=\"line\"><span class=\"comment\">      &amp;  00000001  判斷：符號位為0，正數，所存即為原碼，無需操作</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 按位取反</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(~ <span class=\"variable\">$k</span>);       <span class=\"comment\">// int(4)</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     -5  11111011</span></span><br><span class=\"line\"><span class=\"comment\">      ~  00000100  正數即為原碼，</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 按位右移</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$k</span> &gt;&gt; <span class=\"number\">1</span>);   <span class=\"comment\">// int(-3)</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$k</span> &gt;&gt; <span class=\"number\">2</span>);   <span class=\"comment\">// int(-2)</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     -5  11111011</span></span><br><span class=\"line\"><span class=\"comment\">    &gt;&gt;1  11111101(右移補符號位)</span></span><br><span class=\"line\"><span class=\"comment\">    &gt;&gt;2  11111110(右移補符號位)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-9-組合比較子-太空船比較子\"><a href=\"#1-9-組合比較子-太空船比較子\" class=\"headerlink\" title=\"1.9 組合比較子(太空船比較子)\"></a>1.9 組合比較子(太空船比較子)</h3><p><code>&lt; = &gt;</code></p>\n<ul>\n<li>$a &lt; $b：回傳 -1</li>\n<li>$a &#x3D; $b：回傳 0</li>\n<li>$a &gt; $b：回傳 1</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>&lt;=&gt;<span class=\"variable\">$b</span>; <span class=\"comment\">//-1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-10-參考運算子-reference-operator\"><a href=\"#1-10-參考運算子-reference-operator\" class=\"headerlink\" title=\"1.10 參考運算子(reference operator)\"></a>1.10 參考運算子(reference operator)</h3><p>參考運算子由 <code>&amp;</code> 符號表示，它允許你創建對變數的引用。</p>\n<p>當通過引用賦值給一個變數時，這兩個變數將引用相同的內存數據，對其中一個變數的更改將影響另一個變數。</p>\n<p>在某些情況下，這可以很有用，因為它允許<strong>多個變數指向相同</strong>的值，而不是創建數據的副本。</p>\n<p>原來：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$m</span>=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"variable\">$n</span>=<span class=\"variable\">$m</span>; <span class=\"comment\">//傳值 開個新的記憶體空間給他</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;m is : <span class=\"subst\">$m</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;n is : <span class=\"subst\">$n</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"variable\">$n</span>=<span class=\"number\">5</span>; <span class=\"comment\">//改變n 不會影響到m</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;m is : <span class=\"subst\">$m</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;n is : <span class=\"subst\">$n</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//5</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>reference operator :</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$o</span> = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"variable\">$p</span> = &amp;<span class=\"variable\">$o</span>; <span class=\"comment\">//reference operator //記憶體是同一個</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;o is : <span class=\"subst\">$o</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//10</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;p is : <span class=\"subst\">$p</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$p</span> = <span class=\"number\">5</span> ;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;o is : <span class=\"subst\">$o</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//5</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;p is : <span class=\"subst\">$p</span>&lt;br&gt;&quot;</span>; <span class=\"comment\">//5</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-11-運算子的優先級\"><a href=\"#1-11-運算子的優先級\" class=\"headerlink\" title=\"1.11 運算子的優先級\"></a>1.11 運算子的優先級</h3><p>指定了在表達式中哪些運算子會被先執行。<br>以下是 PHP 中一些常見的運算子按優先級由高到低的順序：</p>\n<ol>\n<li>**<code>()</code>：括號，最高優先級。</li>\n<li><code>++</code>，<code>--</code>，<code>~</code>，<code>!</code>：自增、自減、按位取反、邏輯取反。</li>\n<li><code>*</code>，<code>/</code>，<code>%</code>：乘法、除法、取餘。</li>\n<li><code>+</code>，<code>-</code>，<code>.</code>：加法、減法、字串連接。</li>\n<li><code>&lt;&lt;</code>，<code>&gt;&gt;</code>：按位左移、按位右移。</li>\n<li><code>&lt;</code>，<code>&lt;=</code>，<code>&gt;</code>，<code>&gt;=</code>：比較。</li>\n<li><code>==</code>，<code>!=</code>，<code>===</code>，<code>!==</code>：等於、不等於、全等於、不全等於。</li>\n<li><code>&amp;</code>：按位與。</li>\n<li><code>^</code>：按位異或。</li>\n<li><code>|</code>：按位或。</li>\n<li><code>&amp;&amp;</code>：邏輯與。</li>\n<li><code>||</code>：邏輯或。</li>\n<li><code>? :</code>：三元條件運算符。</li>\n<li><code>=</code>, <code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>%=</code>：賦值及複合賦值。</li>\n<li><code>,</code>：逗號，用於分隔表達式。</li>\n<li>or &#x2F; and 看到boolean會直接return 第一個boolean</li>\n</ol>\n<h2 id=\"2-箭頭運算子\"><a href=\"#2-箭頭運算子\" class=\"headerlink\" title=\"2. 箭頭運算子\"></a>2. 箭頭運算子</h2><h3 id=\"2-1-胖箭頭\"><a href=\"#2-1-胖箭頭\" class=\"headerlink\" title=\"2.1 胖箭頭 &#x3D;&gt;\"></a>2.1 胖箭頭 &#x3D;&gt;</h3><p><code>=&gt;</code> 是 PHP 中的「箭頭運算子」，它通常用於表示關聯數組（Associative Arrays）中的鍵值對（key-value pair）。</p>\n<p>舉例來說，如果你有一個關聯數組，想要指定每個元素的鍵和值，你可以使用 <code>=&gt;</code> 來連接它們。以下是一個簡單的例子：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$person</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\">    <span class=\"string\">&#x27;name&#x27;</span> =&gt; <span class=\"string\">&#x27;John&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;age&#x27;</span> =&gt; <span class=\"number\">30</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;occupation&#x27;</span> =&gt; <span class=\"string\">&#x27;Developer&#x27;</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>在這個例子中，<code>&#39;name&#39;</code>、<code>&#39;age&#39;</code> 和 <code>&#39;occupation&#39;</code> 是鍵，而 <code>&#39;John&#39;</code>、<code>30</code> 和 <code>&#39;Developer&#39;</code> 是相應的值。箭頭運算子指示了每個鍵和值之間的關係。</p>\n<h3 id=\"2-1-瘦箭頭\"><a href=\"#2-1-瘦箭頭\" class=\"headerlink\" title=\"2.1 瘦箭頭 -&gt;\"></a>2.1 瘦箭頭 -&gt;</h3><p>此外，箭頭運算子也常用於對象（Object）的屬性訪問，例如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$personObject</span> = <span class=\"keyword\">new</span> <span class=\"built_in\">stdClass</span>();</span><br><span class=\"line\"><span class=\"variable\">$personObject</span>-&gt;name = <span class=\"string\">&#x27;John&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$personObject</span>-&gt;age = <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"variable\">$personObject</span>-&gt;occupation = <span class=\"string\">&#x27;Developer&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>結論:</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>-&gt;</code> 用於訪問對象的屬性。</p>\n<p><code>=&gt;</code> 主要用於創建關聯數組和訪問對象屬性。</p></blockquote>\n","feature":true,"text":"03【運算子與運算式】1. 運算子運算子：是一種將資料進行運算的特殊符號，在 PHP 中一共有十多種運算子。 1.1 算術運算子+ - \\ * / % 1234...","permalink":"/post/PHP03【運算子與運算式】","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"PHP","slug":"PHP","count":2,"path":"api/categories/PHP.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":30,"path":"api/tags/桃園資展筆記.json"},{"name":"PHP","slug":"PHP","count":2,"path":"api/tags/PHP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#03%E3%80%90%E9%81%8B%E7%AE%97%E5%AD%90%E8%88%87%E9%81%8B%E7%AE%97%E5%BC%8F%E3%80%91\"><span class=\"toc-text\">03【運算子與運算式】</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">1. 運算子</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E7%AE%97%E8%A1%93%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">1.1 算術運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E6%AF%94%E8%BC%83%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">1.2 比較運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E9%82%8F%E8%BC%AF%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">1.3 邏輯運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E9%80%A3%E6%8E%A5%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">1.4 連接運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-%E9%8C%AF%E8%AA%A4%E6%8A%91%E8%A3%BD%E7%AC%A6\"><span class=\"toc-text\">1.5 錯誤抑製符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-6-%E4%B8%89%E7%9B%AE%E9%81%8B%E7%AE%97%E5%AD%90-%E5%95%8F%E8%99%9F%E8%A1%A8%E9%81%94%E5%BC%8F\"><span class=\"toc-text\">1.6 三目運算子(問號表達式)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-7-%E8%87%AA%E6%93%8D%E4%BD%9C%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">1.7 自操作運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-8-%E4%BD%8D%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">1.8 位運算子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-9-%E7%B5%84%E5%90%88%E6%AF%94%E8%BC%83%E5%AD%90-%E5%A4%AA%E7%A9%BA%E8%88%B9%E6%AF%94%E8%BC%83%E5%AD%90\"><span class=\"toc-text\">1.9 組合比較子(太空船比較子)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-10-%E5%8F%83%E8%80%83%E9%81%8B%E7%AE%97%E5%AD%90-reference-operator\"><span class=\"toc-text\">1.10 參考運算子(reference operator)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-11-%E9%81%8B%E7%AE%97%E5%AD%90%E7%9A%84%E5%84%AA%E5%85%88%E7%B4%9A\"><span class=\"toc-text\">1.11 運算子的優先級</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E7%AE%AD%E9%A0%AD%E9%81%8B%E7%AE%97%E5%AD%90\"><span class=\"toc-text\">2. 箭頭運算子</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E8%83%96%E7%AE%AD%E9%A0%AD\"><span class=\"toc-text\">2.1 胖箭頭 &#x3D;&gt;</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E7%98%A6%E7%AE%AD%E9%A0%AD\"><span class=\"toc-text\">2.1 瘦箭頭 -&gt;</span></a></li></ol></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"基礎語法與資料型別","uid":"ac091d156862e0f366b14e38774ead02","slug":"PHP02【基礎語法與資料型別】","date":"2024-11-25T01:20:05.000Z","updated":"2024-02-04T04:59:25.939Z","comments":true,"path":"api/articles/PHP02【基礎語法與資料型別】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/blog-Article-Cover/PHPSS.png?raw=true","text":"02【基礎語法與資料型別】1. 初步語法PHP 是一種執行在伺服器端的腳本語言，可以嵌入到 HTML 中。使客戶端被動接收結果，故而可以預防客戶端透過查看原始碼...","permalink":"/post/PHP02【基礎語法與資料型別】","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"PHP","slug":"PHP","count":2,"path":"api/categories/PHP.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":30,"path":"api/tags/桃園資展筆記.json"},{"name":"PHP","slug":"PHP","count":2,"path":"api/tags/PHP.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}