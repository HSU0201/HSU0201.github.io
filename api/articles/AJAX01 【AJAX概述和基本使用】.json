{"title":"AJAX 概述和基本使用","uid":"9a2aa4a955d2779579e86c05e126bfd4","slug":"AJAX01 【AJAX概述和基本使用】","date":"2024-01-02T01:52:05.000Z","updated":"2024-01-30T11:45:11.793Z","comments":true,"path":"api/articles/AJAX01 【AJAX概述和基本使用】.json","keywords":null,"cover":"https://raw.githubusercontent.com/HSU0201/images/16361bf98fcfc78c6e956fb9803010ed9a694dd0/ajax/W0xDTV4.png","content":"<h1 id=\"01-【AJAX-概述和基本使用】\"><a href=\"#01-【AJAX-概述和基本使用】\" class=\"headerlink\" title=\"01 【AJAX 概述和基本使用】\"></a>01 【AJAX 概述和基本使用】</h1><h2 id=\"1-AJAX-簡介\"><a href=\"#1-AJAX-簡介\" class=\"headerlink\" title=\"1.AJAX 簡介\"></a>1.AJAX 簡介</h2><p>AJAX 全稱為 Asynchronous JavaScript And <a href=\"https://zh.wikipedia.org/zh-tw/XML\">XML</a>，是一種用於在網頁上以<strong>非同步方式</strong>傳輸資料的技術。它允許在<strong>不重新載入整個網頁</strong>的情況下，使用 JavaScript 從伺服器獲取資料、更新網頁內容，並與伺服器進行互動。<br>AJAX 不是新的程式設計語言，而是一種將現有的標準組合在一起使用的新方式</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>AJAX 名稱中包含 「XML」，但實際上 AJAX 可以使用多種格式的資料進行傳輸，如 JSON、HTML、純文字等。XML 在過去常用於 AJAX，但現在 <strong>JSON</strong> 成為更常見的選擇，因為它更輕量且易於處理</p></blockquote>\n<h2 id=\"2-AJAX-的特點\"><a href=\"#2-AJAX-的特點\" class=\"headerlink\" title=\"2.AJAX 的特點\"></a>2.AJAX 的特點</h2><h3 id=\"2-1-AJAX-的優點\"><a href=\"#2-1-AJAX-的優點\" class=\"headerlink\" title=\"2.1 AJAX 的優點\"></a>2.1 AJAX 的優點</h3><ol>\n<li><p><strong>無需重新整理頁面而與伺服器端進行通信</strong>： AJAX 允許部分頁面內容的動態更新，不必重新載入整個頁面。</p>\n</li>\n<li><p><strong>允許在背景下發送請求、接收回應並處理資料</strong>： AJAX 是<strong>非同步</strong>的，允許瀏覽器在背景下發送 HTTP 請求，並在收到伺服器的回應後處理資料。使用者可以同時進行其他操作，不會被阻塞。</p>\n</li>\n</ol>\n<h3 id=\"2-2-AJAX-的缺點\"><a href=\"#2-2-AJAX-的缺點\" class=\"headerlink\" title=\"2.2 AJAX 的缺點\"></a>2.2 AJAX 的缺點</h3><ol>\n<li><p><strong>沒有瀏覽歷史，不能回退</strong>： 在某些情況下，使用 AJAX 可能導致瀏覽器不正確地記錄瀏覽歷史，使得無法使用瀏覽器的回退按鈕進行上一步操作。這個問題可以通過在 AJAX 操作時手動更新瀏覽器的歷史狀態來解決，例如使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API\">HTML5 History API</a>。</p>\n</li>\n<li><p><strong>存在跨域問題（同源策略）</strong>： AJAX 受到瀏覽器的同源策略的限制，意味著網頁只能向與其自身相同來源的伺服器發送 AJAX 請求。跨域請求可能需要使用跨域資源共享（CORS）等技術來解決。</p>\n</li>\n<li><p><strong>對搜索引擎優化（SEO）不友好</strong>： 傳統的 AJAX 加載內容可能對搜索引擎的爬取和索引造成困難，因為搜索引擎通常無法執行 JavaScript 以獲取動態生成的內容。然而，現代的搜索引擎已經能夠執行 JavaScript 並索引動態生成的內容，因此這個問題已經在某種程度上得到改善。</p>\n</li>\n</ol>\n<h2 id=\"2-HTTP-相關問題\"><a href=\"#2-HTTP-相關問題\" class=\"headerlink\" title=\"2.HTTP 相關問題\"></a>2.HTTP 相關問題</h2><h3 id=\"2-1-MDN-文檔\"><a href=\"#2-1-MDN-文檔\" class=\"headerlink\" title=\"2.1 MDN 文檔\"></a>2.1 MDN 文檔</h3><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview</a></p>\n<h3 id=\"2-2-HTTP-請求互動的基本過程\"><a href=\"#2-2-HTTP-請求互動的基本過程\" class=\"headerlink\" title=\"2.2 HTTP 請求互動的基本過程\"></a>2.2 HTTP 請求互動的基本過程</h3><p><img src=\"https://raw.githubusercontent.com/HSU0201/images/16361bf98fcfc78c6e956fb9803010ed9a694dd0/ajax/W0xDTV4.png\" alt=\"process\"></p>\n<ol>\n<li>前後應用從瀏覽器端向伺服器發送 HTTP 請求(請求報文)</li>\n<li>後臺伺服器接收到請求後, 調度伺服器應用處理請求, 向瀏覽器端返回 HTTP 回應(回應報文)</li>\n<li>瀏覽器端接收到回應, 解析顯示回應體&#x2F;調用監視回檔</li>\n</ol>\n<h3 id=\"2-3-HTTP-報文\"><a href=\"#2-3-HTTP-報文\" class=\"headerlink\" title=\"2.3 HTTP 報文\"></a>2.3 HTTP 報文</h3><p>HTTP（hypertext transport protocol）協定『超文字傳輸協定』，是一種用於瀏覽器和網頁伺服器之間進行通信的協議，它細緻地定義了通信的規則和格式。</p>\n<h4 id=\"2-3-1-請求報文\"><a href=\"#2-3-1-請求報文\" class=\"headerlink\" title=\"2.3.1 請求報文\"></a>2.3.1 請求報文</h4><p>格式與參數</p>\n<ul>\n<li><p>行： 指定請求的方法（如 GET、POST）、資源位置（URI）和所使用的 HTTP 版本。</p>\n</li>\n<li><p>頭： 包含額外的請求資訊，如主機地址（Host）、Cookie、內容類型（Content-Type）和用戶代理（User-Agent）等。</p>\n</li>\n<li><p>空行： 表示頭部的結束，後面即將開始請求體。</p>\n</li>\n<li><p>體： 包含請求所攜帶的資料，僅在 POST 請求中存在。</p>\n</li>\n</ul>\n<p><strong>POST 請求</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">行      POST  /submit_form HTTP/1.1</span><br><span class=\"line\">頭      Host: www.example.com</span><br><span class=\"line\">        Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">        Content-Length: 25</span><br><span class=\"line\">空行</span><br><span class=\"line\">體      username=admin&amp;password=123</span><br></pre></td></tr></table></figure>\n\n<p><strong>GET 請求</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">行      GET /index.html HTTP/1.1</span><br><span class=\"line\">頭      Host: www.example.com</span><br><span class=\"line\">        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0</span><br><span class=\"line\">        Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class=\"line\">        Accept-Language: en-US,en;q=0.5</span><br><span class=\"line\">        Accept-Encoding: gzip, deflate</span><br><span class=\"line\">        Connection: keep-alive</span><br><span class=\"line\">空行</span><br><span class=\"line\">體      GET請求通常沒有請求體，故此示例請求體為空</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注:post 請求才有請求體</p></blockquote>\n<p><strong>Request Headers</strong></p>\n<table>\n<thead>\n<tr>\n<th>Request Headers</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>接受 (Accept)</td>\n<td>瀏覽器可以接受的資料格式（例如：_&#x2F;_）</td>\n</tr>\n<tr>\n<td>接受語言 (Accept-Language)</td>\n<td>用戶端希望接收的語言類型（例如：zh-TW, en-US）</td>\n</tr>\n<tr>\n<td>連線 (Connection)</td>\n<td>維護用戶端和服務端之間的連接狀態（例如：Keep-Alive）</td>\n</tr>\n<tr>\n<td>主機 (Host)</td>\n<td>連接的目標主機和埠號（例如：localhost:8080）</td>\n</tr>\n<tr>\n<td>用戶代理 (User-Agent)</td>\n<td>用戶端的應用程式名稱和版本號</td>\n</tr>\n<tr>\n<td>接受編碼 (Accept-Encoding)</td>\n<td>用戶端可以接受的壓縮資料類型（例如：gzip）</td>\n</tr>\n<tr>\n<td>Cookie</td>\n<td>用戶端暫存的服務端資訊</td>\n</tr>\n<tr>\n<td>內容類型 (Content-Type)</td>\n<td>發送資料的格式，GET 請求通常沒有（例如：application&#x2F;json）</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-3-2-回應報文\"><a href=\"#2-3-2-回應報文\" class=\"headerlink\" title=\"2.3.2 回應報文\"></a>2.3.2 回應報文</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">行      HTTP/1.1  200  OK</span><br><span class=\"line\">頭      Content-Type: text/html; charset=utf-8</span><br><span class=\"line\">        Content-Length: 1234</span><br><span class=\"line\">        Content-encoding: gzip</span><br><span class=\"line\">空行</span><br><span class=\"line\">體      &lt;html&gt;</span><br><span class=\"line\">            &lt;head&gt;</span><br><span class=\"line\">            &lt;/head&gt;</span><br><span class=\"line\">            &lt;body&gt;</span><br><span class=\"line\">                &lt;h1&gt;Welcome to Sample Page&lt;/h1&gt;</span><br><span class=\"line\">                &lt;p&gt;This is a sample HTML page.&lt;/p&gt;</span><br><span class=\"line\">            &lt;/body&gt;</span><br><span class=\"line\">        &lt;/html&gt;</span><br><span class=\"line\">        (html 文本/json 文本/js/css/圖片...)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i0.hdslb.com/bfs/album/7815086ab584cb98b96c542cde0f7347320364b8.png\" alt=\"network\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>負載(Payload)用來查看請求發送的查詢字串和 form data</li>\n<li>Preview 用來查看解析後的返回資料</li>\n<li>Response 用來查看返回資料</li>\n</ul></blockquote>\n<p><strong>Response Headers</strong></p>\n<table>\n<thead>\n<tr>\n<th>Response Headers</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Content-Type</td>\n<td>伺服器發送的類型及採用的編碼方式（例如：text&#x2F;html; charset&#x3D;utf-8）</td>\n</tr>\n<tr>\n<td>Content-Encoding</td>\n<td>伺服器能夠發送的壓縮編碼類型（例如：gzip）</td>\n</tr>\n<tr>\n<td>Content-Length</td>\n<td>伺服器發送的壓縮資料的長度（例如：128）</td>\n</tr>\n<tr>\n<td>Set-Cookie</td>\n<td>伺服器發送到客戶端的暫存資料</td>\n</tr>\n<tr>\n<td>Cache-Control</td>\n<td>快取相關</td>\n</tr>\n<tr>\n<td>Last-Modified</td>\n<td>快取相關</td>\n</tr>\n<tr>\n<td>Etag</td>\n<td>快取相關</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-3-3-post-請求體參數格式\"><a href=\"#2-3-3-post-請求體參數格式\" class=\"headerlink\" title=\"2.3.3 post 請求體參數格式\"></a>2.3.3 post 請求體參數格式</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>　<strong>用 js 傳送表單，如果資料不是以 formData 格式傳出，才需考慮設定 Conntent-Type</strong></p></blockquote>\n<ol>\n<li><p>Content-Type: application&#x2F;x-www-form-urlencoded;charset&#x3D;utf-8<br>這是<strong>最常見</strong>的 POST 請求體格式之一，用於將表單數據發送到伺服器。鍵&#x2F;值對使用<code>等號 (=)</code> 連接，並使用<code>和號 (&amp;) </code>分隔。例如：<br>例如: <code>name=John+Doe&amp;age=30&amp;email=john.doe@example.com</code></p>\n</li>\n<li><p>Content-Type: application&#x2F;json;charset&#x3D;utf-8<br>用於發送 JSON 格式的數據。這通常用於 API 通訊，用戶端將 JSON 對象作為請求主體發送到伺服器。<br>例如: <code>&#123;&quot;name&quot;: &quot;%E5%B0%8F%E6%98%8E&quot;, &quot;age&quot;: 12&#125;</code></p>\n</li>\n<li><p><strong>(了解即可，暫時遇不到)</strong> Content-Type: multipart&#x2F;form-data<br>這種格式用於上傳文件和二進制數據。它允許在同一個 POST 請求中發送文本和二進制數據。每個數據部分都有自己的 Content-Type，並且每個部分都是獨立的。</p>\n</li>\n<li><p>Content-Type: text&#x2F;plain<br>這種格式用於純文本數據，沒有特定的結構。這通常用於簡單的文本消息或自定義格式的請求體。<br>例如:<code>This is a plain text message.</code></p>\n</li>\n</ol>\n<h3 id=\"2-4-常見的回應狀態碼\"><a href=\"#2-4-常見的回應狀態碼\" class=\"headerlink\" title=\"2.4 常見的回應狀態碼\"></a>2.4 常見的回應狀態碼</h3><p><strong>HTTP 協議中常見的狀態碼</strong></p>\n<table>\n<thead>\n<tr>\n<th>狀態碼</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>1xx</code></td>\n<td>指示資訊，表示請求已接收，繼續處理</td>\n</tr>\n<tr>\n<td><code>2xx</code></td>\n<td>成功，表示請求已被成功接收</td>\n</tr>\n<tr>\n<td><code>3xx</code></td>\n<td>重定向，要完成請求必須進行更進一步的操作</td>\n</tr>\n<tr>\n<td><code>4xx</code></td>\n<td>用戶端錯誤，請求有語法錯誤或請求無法實現</td>\n</tr>\n<tr>\n<td><code>5xx</code></td>\n<td>伺服器錯誤，伺服器未能實現合法的請求</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>補充:</p>\n<p>readyState 所有可能的值如下：</p>\n<ul>\n<li>0（還沒開始）</li>\n<li>1（讀取中）</li>\n<li>2（已讀取）</li>\n<li>3（資訊交換中）</li>\n</ul>\n<p><code>狀態碼</code>用於描述 <strong>HTTP 請求</strong>的結果，而 <code>readyState</code> 屬性則用於描述 <strong>XMLHttpRequest 物件的通信狀態</strong>。它們描述了不同層面的通信和處理過程。</p></blockquote>\n<p><strong>常見的 http 狀態碼</strong></p>\n<table>\n<thead>\n<tr>\n<th>狀態碼</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>200</code></td>\n<td>用戶端請求成功</td>\n</tr>\n<tr>\n<td><code>206</code></td>\n<td>客戶端發送帶有 <code>range</code> 頭的 GET 請求，伺服器完成了它</td>\n</tr>\n<tr>\n<td><code>301</code></td>\n<td>重定向（永久）</td>\n</tr>\n<tr>\n<td><code>302</code></td>\n<td>重定向（臨時）</td>\n</tr>\n<tr>\n<td><code>304</code></td>\n<td>資源未被修改，有緩存</td>\n</tr>\n<tr>\n<td><code>403</code></td>\n<td>請求被拒絕</td>\n</tr>\n<tr>\n<td><code>404</code></td>\n<td>資源未找到</td>\n</tr>\n<tr>\n<td><code>500</code></td>\n<td>伺服器錯誤</td>\n</tr>\n<tr>\n<td><code>504</code></td>\n<td>閘道超時</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-5-不同類型的請求及其作用\"><a href=\"#2-5-不同類型的請求及其作用\" class=\"headerlink\" title=\"2.5 不同類型的請求及其作用\"></a>2.5 不同類型的請求及其作用</h3><ol>\n<li><code>GET</code>: 從伺服器端<strong>讀取</strong>數據（查）</li>\n<li><code>POST</code>: 向伺服器端<strong>加入</strong>新數據 （增）</li>\n<li><code>PUT</code>: 更新資源 （改）</li>\n<li><code>DELETE</code>: <strong>刪除</strong>伺服器端資料 （刪）</li>\n</ol>\n<h2 id=\"3-AJAX-的基本使用\"><a href=\"#3-AJAX-的基本使用\" class=\"headerlink\" title=\"3. AJAX 的基本使用\"></a>3. AJAX 的基本使用</h2><h3 id=\"3-1-理解\"><a href=\"#3-1-理解\" class=\"headerlink\" title=\"3.1 理解\"></a>3.1 理解</h3><ul>\n<li><p><strong>Low-Level Interface (低階介面)</strong>:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>例如:<code>$.ajax()</code>方法即是低階介面</p></blockquote>\n<ul>\n<li>直接使用 AJAX 方法的原始和底層方式來進行 AJAX 請求和處理。</li>\n<li>相對於使用 jQuery 提供的高階方法（High-Level Interface）而言。提供更細粒度的控制和靈活性，可以根據特定需求自定義 AJAX 請求的行為和處理方式。</li>\n<li>直接使用 XMLHttpRequest（XHR）對象來執行請求，並提供一系列方法和屬性來設置請求參數、處理回應數據和監聽事件。</li>\n<li>可以更深入地了解和掌握 AJAX 的內部運作機制，同時也可以根據具體需求進行更細節的控制和定製。</li>\n<li>適用於對 AJAX 請求有特殊要求的情境，或者希望直接操作 XHR 對象的開發者。</li>\n</ul>\n</li>\n<li><p><strong>High-Level Interface (高階介面)</strong>:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用單一<br>例如:<code>$.get()</code>、<code>$.getJSON()</code>、<code>$.getScript()</code>方法即是高階介面</p></blockquote>\n<ul>\n<li>使用 jQuery 提供的方法來進行 AJAX 請求和處理。</li>\n<li>提供了更簡潔、抽象的 API，使得處理 AJAX 請求變得更容易和直觀。</li>\n<li>隱藏了底層的細節，讓開發者可以專注於請求的邏輯而不用擔心底層實現。</li>\n<li>提供了便捷的方法來處理請求成功和失敗的情況，以及其他常見的 AJAX 功能。</li>\n<li>可以快速地發送請求並處理回應，減少了開發時間和代碼量。</li>\n<li>適用於大多數情況下，尤其是對於常見的 AJAX 功能和一般性需求。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-2-低階介面-AJAX-使用步驟\"><a href=\"#3-2-低階介面-AJAX-使用步驟\" class=\"headerlink\" title=\"3.2 低階介面 AJAX 使用步驟\"></a>3.2 低階介面 AJAX 使用步驟</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">method</span>: <span class=\"string\">&quot;POST OR GET&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">url</span>: <span class=\"string\">&quot;網址&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">data</span>: <span class=\"string\">&quot;字串、數字、物件或陣列&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">dataType</span>: <span class=\"string\">&quot;xml、html、script、json、jsonp 或 text&quot;</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">done</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">fail</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>$.ajax() 方法:</strong></p>\n<ul>\n<li><p><code>method</code>: 指定傳輸的方法，可以是 <strong>POST</strong> 或 <strong>GET</strong>。</p>\n</li>\n<li><p><code>url</code>: 指定目標網址。</p>\n</li>\n<li><p><code>data</code>: 要傳輸到目標網址的內容，可以是字串、數字、物件或陣列，有時也不需要傳輸過去。</p>\n</li>\n<li><p><code>dataType</code>: 指定回傳內容的型態，可以是 xml、html、script、json、jsonp 或 text 等。<br><strong>處理成功和失敗:</strong></p>\n</li>\n<li><p>使用 <code>.done()</code> 方法來處理傳輸成功時要做的事，小括號中會放一個處理函數。</p>\n</li>\n<li><p>使用 <code>.fail()</code> 方法來處理傳輸失敗時要做的事，小括號中會放一個處理函數。</p>\n</li>\n</ul>\n<h3 id=\"3-3-Shorthand-Methods-方法\"><a href=\"#3-3-Shorthand-Methods-方法\" class=\"headerlink\" title=\"3.3 Shorthand Methods 方法\"></a>3.3 Shorthand Methods 方法</h3><ul>\n<li>Shorthand Methods 是 jQuery 中的簡潔方法，提供方便的快捷方式來執行常見任務和操作。</li>\n<li>方法通常以簡短、易於記憶的形式存在，可以大大簡化編寫程式碼的過程，同時保持可讀性和清晰度。</li>\n<li>Shorthand Methods 包括事件處理、元素選擇、樣式操作、動畫效果等常見操作，命名根據目的和行為使其易於理解和使用，如 <code>.click()</code>、<code>.addClass()</code>、<code>.text()</code>、<code>.fadeIn()</code> 等。</li>\n<li>使用 Shorthand Methods 可使程式碼更簡潔、易於閱讀和維護，提高開發效率，減少重複代碼。但要注意方法<strong>是否已被廢棄</strong>。</li>\n<li>AJAX 提供了幾個 Shorthand Methods，根據傳輸方式及取用內容，可用較少的參數設置來達到與 <code>$.ajax()</code> 一樣的效果。</li>\n</ul>\n<h4 id=\"3-3-1-get-請求\"><a href=\"#3-3-1-get-請求\" class=\"headerlink\" title=\"3.3.1 $.get() 請求\"></a>3.3.1 $.get() 請求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">get</span>(url, data, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;, dataType);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>data 及 dataType 則不一定要填</li>\n<li>dataType 是傳入執行函數的型態，如果不填的話，jQuery 會自動判別，但盡量還是將其填上</li>\n</ul>\n<p><strong>GET 請求設置請求參數</strong></p>\n<p>設置 url 參數</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">get</span>(</span><br><span class=\"line\">  <span class=\"string\">&quot;http://example.com/api/data&quot;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;html&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\">  .<span class=\"title function_\">done</span>(<span class=\"keyword\">function</span> (<span class=\"params\">response</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Success:&quot;</span>, response);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">fail</span>(<span class=\"keyword\">function</span> (<span class=\"params\">error</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&quot;Error:&quot;</span>, error);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>.done()</code> 來接成功時的處理</li>\n<li><code>.fail()</code> 來接失敗時的處理</li>\n</ul>\n<h4 id=\"3-3-2-getJSON-請求\"><a href=\"#3-3-2-getJSON-請求\" class=\"headerlink\" title=\"3.3.2 $.getJSON() 請求\"></a>3.3.2 $.getJSON() 請求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">getJSON</span>(url, data, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>專門用來處理回傳內容是 JSON 的特別方法是 <code>$.getJSON()</code>。</p>\n</li>\n<li><p>如果<strong>成功回傳</strong>，<code>$.getJSON()</code> 會自動將回傳內容轉換為物件型態。</p>\n</li>\n<li><p>如果回傳內容<strong>不是 JSON 格式</strong>，則會自動進入 <code>.fail()</code> 流程。</p>\n</li>\n</ul>\n<p><strong>練習範例</strong>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"string\">&quot;https://sagedaben.com/iSpan/api/spot.php&quot;</span>;</span><br><span class=\"line\">$.<span class=\"title function_\">getJSON</span>(url, <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-3-getScript-請求\"><a href=\"#3-3-3-getScript-請求\" class=\"headerlink\" title=\"3.3.3 $.getScript() 請求\"></a>3.3.3 $.getScript() 請求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">getJSON</span>(url, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>專門用來載入外部 javaScript 檔用的特化方法</li>\n<li>專入成功會自動附加到文件上，不需要特別寫成功時的函數去執行，但有需要的話仍會在成功時的時間點觸發</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"string\">&quot;https://sagedaben.com/iSpan/api/file.php?file=setBtn.js&quot;</span>;</span><br><span class=\"line\">$.<span class=\"title function_\">getScript</span>(url, <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>放一個 class 為 btn 的任何物件</li>\n<li>再載入上面的網址</li>\n<li>載入後，<code>.btn</code> 就有 click 事件，會跳 alert 小視窗</li>\n</ul>\n<h4 id=\"3-3-4-post-請求\"><a href=\"#3-3-4-post-請求\" class=\"headerlink\" title=\"3.3.4 post 請求\"></a>3.3.4 post 請求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">post</span>(url, data, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;&#125;, dataType);</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>專門用來 post 到指定網址用的方法</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">&quot;http://example.com/api/data&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">  <span class=\"attr\">username</span>: <span class=\"string\">&quot;john_doe&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">password</span>: <span class=\"string\">&quot;secretpassword&quot;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataType = <span class=\"string\">&quot;json&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">$.<span class=\"title function_\">post</span>(</span><br><span class=\"line\">  url,</span><br><span class=\"line\">  data,</span><br><span class=\"line\">  <span class=\"keyword\">function</span> (<span class=\"params\">response</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 成功回調函式，在這裡處理成功回傳的資料</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Success:&quot;</span>, response);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  dataType</span><br><span class=\"line\">).<span class=\"title function_\">fail</span>(<span class=\"keyword\">function</span> (<span class=\"params\">error</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 失敗回調函式，在這裡處理請求失敗的情況</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&quot;Error:&quot;</span>, error);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-3-load\"><a href=\"#3-2-3-load\" class=\"headerlink\" title=\"3.2.3 .load()\"></a>3.2.3 .load()</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().<span class=\"title function_\">load</span>(url, data, <span class=\"title function_\">fucntion</span>(<span class=\"params\"></span>)&#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>不送出資料，不寫成功函數，當載入成功時一樣會自動把內容變成該物件的 HTML</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> url = <span class=\"string\">&quot;https://sagedaben.com/iSpan/api/file.php?file=b.html&quot;</span>;</span><br><span class=\"line\">$(<span class=\"string\">&quot;.block&quot;</span>).<span class=\"title function_\">load</span>(url);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>jQuery 物件的方法，會載入指定網址內容變成該物件的 HTML</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;.block&quot;</span>).<span class=\"title function_\">load</span>(<span class=\"string\">&quot;https://sagedaben.com/iSpan/api/file.php?file=d.html .area3&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>專入網址後，可以再進一步的指定要載入的內容區塊</li>\n</ul>\n<h3 id=\"3-3-API-總結\"><a href=\"#3-3-API-總結\" class=\"headerlink\" title=\"3.3 API 總結\"></a>3.3 API 總結</h3><p>使用 jQuery 的 AJAX 方法可以方便地發送各種類型的請求，並且提供了豐富的選項和方法來處理請求的不同情況，這使得 AJAX 開發變得更加靈活和便捷。</p>\n<h2 id=\"4-補充-原生-AJAX-的基本使用\"><a href=\"#4-補充-原生-AJAX-的基本使用\" class=\"headerlink\" title=\"4. [補充]原生 AJAX 的基本使用\"></a>4. [補充]原生 AJAX 的基本使用</h2><h3 id=\"4-1-理解\"><a href=\"#4-1-理解\" class=\"headerlink\" title=\"4.1 理解\"></a>4.1 理解</h3><ol>\n<li>使用<code>XMLHttpRequest</code> (XHR)物件可以與伺服器互動, 也就是發送 ajax 請求</li>\n<li>前端可以獲取到資料，而無需讓整個的頁面重新整理。</li>\n<li>這使得 Web 頁面可以只更新頁面的局部，而不影響使用者的操作。</li>\n</ol>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\">https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest</a><br><code>XMLHttpRequest</code>，AJAX 的所有操作都是通過該物件進行的</p>\n<h3 id=\"4-2-使用步驟\"><a href=\"#4-2-使用步驟\" class=\"headerlink\" title=\"4.2 使用步驟\"></a>4.2 使用步驟</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> xhttp = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\"><span class=\"comment\">// 請求方式</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">open</span>(method, url);</span><br><span class=\"line\"><span class=\"comment\">//可以設置請求頭，一般不設置</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">setRequestHeader</span>(<span class=\"string\">&quot;Content-Type&quot;</span>, <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//get請求不傳 body 參數，只有post請求使用</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">send</span>(body);</span><br><span class=\"line\"><span class=\"comment\">// 事件綁定 處理服務端返回的結果</span></span><br><span class=\"line\"><span class=\"comment\">// on  when 當....時候</span></span><br><span class=\"line\"><span class=\"comment\">// readystate 是 xhttp 物件中的屬性, 表示狀態 0 1 2 3 4</span></span><br><span class=\"line\"><span class=\"comment\">//狀態 0 表示未初始化  1 open方法調用完畢 2 send方法已經調用完畢 3 服務端返回部分結果 4 服務端返回了所有結果</span></span><br><span class=\"line\"><span class=\"comment\">// change  改變</span></span><br><span class=\"line\">xhttp.<span class=\"property\">onreadystatechange</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//判斷 (服務端返回了所有的結果)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xhttp.<span class=\"property\">readyState</span> == <span class=\"number\">4</span> &amp;&amp; xhttp.<span class=\"property\">status</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhttp.<span class=\"property\">status</span>); <span class=\"comment\">//狀態碼</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhttp.<span class=\"property\">statusText</span>); <span class=\"comment\">//狀態字串</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhttp.<span class=\"title function_\">getAllResponseHeaders</span>()); <span class=\"comment\">//所有回應頭</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(xhttp.<span class=\"property\">response</span>); <span class=\"comment\">//回應體</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-1-get-請求\"><a href=\"#4-2-1-get-請求\" class=\"headerlink\" title=\"4.2.1 get 請求\"></a>4.2.1 get 請求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  創建對象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> xhttp = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\"><span class=\"comment\">// 2. 初始化 設置請求方法和url</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;http://127.0.0.1:8000/server&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 3. 發送</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">send</span>();</span><br><span class=\"line\"><span class=\"comment\">// 4. 事件綁定 處理服務端返回的結果</span></span><br><span class=\"line\">xhttp.<span class=\"property\">onreadystatechange</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// readyState 是 xhttp 物件中的屬性, 表示狀態 0 1 2 3 4</span></span><br><span class=\"line\">  <span class=\"comment\">//判斷 (服務端返回了所有的結果)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xhttp.<span class=\"property\">readyState</span> === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//判斷回應狀態碼 200  404  403 401 500</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xhttp.<span class=\"property\">status</span> &gt;= <span class=\"number\">200</span> &amp;&amp; xhttp.<span class=\"property\">status</span> &lt; <span class=\"number\">300</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 處理結果 行 頭 空行 體</span></span><br><span class=\"line\">      <span class=\"comment\">// 回應</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;狀態碼&quot;</span>, xhttp.<span class=\"property\">status</span>); <span class=\"comment\">// 狀態碼</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;狀態字串&quot;</span>, xhttp.<span class=\"property\">statusText</span>); <span class=\"comment\">// 狀態字串</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;所有回應頭&quot;</span>, xhttp.<span class=\"title function_\">getAllResponseHeaders</span>()); <span class=\"comment\">// 所有回應頭</span></span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;回應體&quot;</span>, xhttp.<span class=\"property\">response</span>); <span class=\"comment\">// 回應體</span></span><br><span class=\"line\">      <span class=\"comment\">//設置 result 的文本</span></span><br><span class=\"line\">      result.<span class=\"property\">innerHTML</span> = xhttp.<span class=\"property\">response</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>GET 請求設置請求參數</strong></p>\n<p>設置 url 參數</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhttp.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;GET&quot;</span>, <span class=\"string\">&quot;http://127.0.0.1:8000/server?a=100&amp;b=200&amp;c=300&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i0.hdslb.com/bfs/album/6503382b9601cfc3e01d146acc072a6da94db603.png\" alt=\"image-20220624212741956\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/24762725394ed29f5644b01259f0b0ef.png\"></p>\n<h4 id=\"4-2-2-post-請求\"><a href=\"#4-2-2-post-請求\" class=\"headerlink\" title=\"4.2.2 post 請求\"></a>4.2.2 post 請求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  創建對象</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> xhttp = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\"><span class=\"comment\">// 2. 初始化 設置類型（請求方式）與url</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;POST&quot;</span>, <span class=\"string\">&quot;http://127.0.0.1:8000/server&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//設置請求頭</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">setRequestHeader</span>(<span class=\"string\">&quot;Content-Type&quot;</span>, <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 自訂頭資訊</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">setRequesHeader</span>(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;ykyk&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 3. 發送   設置請求參數（請求體）</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;a=100&amp;b=200&amp;c=300&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// 4. 事件綁定</span></span><br><span class=\"line\">xhttp.<span class=\"property\">onreadystatechange</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 判斷</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xhttp.<span class=\"property\">readyState</span> === <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xhttp.<span class=\"property\">status</span> &gt;= <span class=\"number\">200</span> &amp;&amp; xhttp.<span class=\"property\">status</span> &lt; <span class=\"number\">300</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 處理服務端返回的結果</span></span><br><span class=\"line\">      result.<span class=\"property\">innerHTML</span> = xhttp.<span class=\"property\">response</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>後端設置</strong></p>\n<p>設置回應頭允許自訂請求頭 post 改成 all</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Access-Control-Allow-Header&quot;</span>, <span class=\"string\">&quot;*&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-3-取消發送無用的參數\"><a href=\"#4-2-3-取消發送無用的參數\" class=\"headerlink\" title=\"4.2.3 取消發送無用的參數\"></a>4.2.3 取消發送無用的參數</h4><p>有的時候有的參數是可以不填寫的，這時儘管是空串也會隨著請求發過去，我們可以將參數的值設置成<code>undefined</code>，這樣就不會隨請求發過去了</p>\n<h3 id=\"4-3-請求超時與網路異常\"><a href=\"#4-3-請求超時與網路異常\" class=\"headerlink\" title=\"4.3 請求超時與網路異常\"></a>4.3 請求超時與網路異常</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 超時設置 （2秒） 超過2s請求就取消  status 狀態變成 cancel</span></span><br><span class=\"line\">xhttp.<span class=\"property\">timeout</span> = <span class=\"number\">2000</span>;</span><br><span class=\"line\"><span class=\"comment\">// 超時回檔</span></span><br><span class=\"line\">xhttp.<span class=\"property\">ontimeout</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;網路超時，請稍後重試&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 網路異常回檔</span></span><br><span class=\"line\">xhttp.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;網路異常，請稍後重試&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-取消請求\"><a href=\"#4-4-取消請求\" class=\"headerlink\" title=\"4.4 取消請求\"></a>4.4 取消請求</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//     手動取消請求</span></span><br><span class=\"line\"><span class=\"comment\">//    network中的status中pending為等待中</span></span><br><span class=\"line\"><span class=\"comment\">//    取消就變成cancel</span></span><br><span class=\"line\">xhttp.<span class=\"title function_\">abort</span>();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"補充-5-AJAX-請求狀態\"><a href=\"#補充-5-AJAX-請求狀態\" class=\"headerlink\" title=\"[補充]5 AJAX 請求狀態\"></a>[補充]5 AJAX 請求狀態</h2><p><code>xhttp.readyState</code> 可以用來查看請求當前的狀態<br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/readyState\">https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/readyState</a></p>\n<p><img src=\"https://i0.hdslb.com/bfs/album/1b95ed0be7824a04e45b0dd9f776037bcb441417.png\" alt=\"status\"></p>\n<ul>\n<li>0: 表示 XMLHttpRequest 實例已經生成，但是 open()方法還沒有被調用</li>\n<li>1: 表示 send()方法還沒有被調用，仍然可以使用 setRequestHeader()，設定 HTTP 請求的頭資訊</li>\n<li>2: 表示 send()方法已經執行，並且頭資訊和狀態碼已經收到</li>\n<li>3: 表示正在接收伺服器傳來的 body 部分的資料</li>\n<li>4: 表示伺服器資料已經完全接收，或者本次接收已經失敗了</li>\n</ul>\n<h2 id=\"補充-6-API-總結\"><a href=\"#補充-6-API-總結\" class=\"headerlink\" title=\"[補充]6 API 總結\"></a>[補充]6 API 總結</h2><ul>\n<li>XMLHttpRequest()：創建 xhttp 物件的構造函式</li>\n<li>status：回應狀態碼值，如 200、404</li>\n<li>statusText：回應狀態文本，如 ’ok‘、‘not found’</li>\n<li>readyState：標識請求狀態的唯讀屬性 0-1-2-3-4</li>\n<li>onreadystatechange：綁定 readyState 改變的監聽</li>\n<li>responseType：指定回應資料類型，如果是 ‘json’，得到回應後自動解析回應</li>\n<li>response：回應體資料，類型取決於 responseType 的指定</li>\n<li>timeout：指定請求超時時間，默認為 0 代表沒有限制</li>\n<li>ontimeout：綁定超時的監聽</li>\n<li>onerror：綁定請求網路錯誤的監聽</li>\n<li>open()：初始化一個請求，參數為：(method, url[, async])</li>\n<li>send(data)：發送請求</li>\n<li>abort()：插斷要求 （發出到返回之間）</li>\n<li>getResponseHeader(name)：獲取指定名稱的回應頭值</li>\n<li>getAllResponseHeaders()：獲取所有回應頭組成的字串</li>\n<li>setRequestHeader(name, value)：設置請求頭</li>\n</ul>\n","feature":null,"text":"01 【AJAX 概述和基本使用】1.AJAX 簡介AJAX 全稱為 Asynchronous JavaScript And XML，是一種用於在網頁上以非同步...","permalink":"/post/AJAX01 【AJAX概述和基本使用】","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"AJAX","slug":"AJAX","count":1,"path":"api/categories/AJAX.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":7,"path":"api/tags/桃園資展筆記.json"},{"name":"AJAX","slug":"AJAX","count":1,"path":"api/tags/AJAX.json"},{"name":"jQuery","slug":"jQuery","count":1,"path":"api/tags/jQuery.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#01-%E3%80%90AJAX-%E6%A6%82%E8%BF%B0%E5%92%8C%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E3%80%91\"><span class=\"toc-text\">01 【AJAX 概述和基本使用】</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-AJAX-%E7%B0%A1%E4%BB%8B\"><span class=\"toc-text\">1.AJAX 簡介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-AJAX-%E7%9A%84%E7%89%B9%E9%BB%9E\"><span class=\"toc-text\">2.AJAX 的特點</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-AJAX-%E7%9A%84%E5%84%AA%E9%BB%9E\"><span class=\"toc-text\">2.1 AJAX 的優點</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-AJAX-%E7%9A%84%E7%BC%BA%E9%BB%9E\"><span class=\"toc-text\">2.2 AJAX 的缺點</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-HTTP-%E7%9B%B8%E9%97%9C%E5%95%8F%E9%A1%8C\"><span class=\"toc-text\">2.HTTP 相關問題</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-MDN-%E6%96%87%E6%AA%94\"><span class=\"toc-text\">2.1 MDN 文檔</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-HTTP-%E8%AB%8B%E6%B1%82%E4%BA%92%E5%8B%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E9%81%8E%E7%A8%8B\"><span class=\"toc-text\">2.2 HTTP 請求互動的基本過程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-HTTP-%E5%A0%B1%E6%96%87\"><span class=\"toc-text\">2.3 HTTP 報文</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-1-%E8%AB%8B%E6%B1%82%E5%A0%B1%E6%96%87\"><span class=\"toc-text\">2.3.1 請求報文</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-2-%E5%9B%9E%E6%87%89%E5%A0%B1%E6%96%87\"><span class=\"toc-text\">2.3.2 回應報文</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-3-post-%E8%AB%8B%E6%B1%82%E9%AB%94%E5%8F%83%E6%95%B8%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">2.3.3 post 請求體參數格式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%B8%B8%E8%A6%8B%E7%9A%84%E5%9B%9E%E6%87%89%E7%8B%80%E6%85%8B%E7%A2%BC\"><span class=\"toc-text\">2.4 常見的回應狀態碼</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E4%B8%8D%E5%90%8C%E9%A1%9E%E5%9E%8B%E7%9A%84%E8%AB%8B%E6%B1%82%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">2.5 不同類型的請求及其作用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-AJAX-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">3. AJAX 的基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">3.1 理解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E4%BD%8E%E9%9A%8E%E4%BB%8B%E9%9D%A2-AJAX-%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%A9%9F\"><span class=\"toc-text\">3.2 低階介面 AJAX 使用步驟</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-Shorthand-Methods-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">3.3 Shorthand Methods 方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-1-get-%E8%AB%8B%E6%B1%82\"><span class=\"toc-text\">3.3.1 $.get() 請求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-2-getJSON-%E8%AB%8B%E6%B1%82\"><span class=\"toc-text\">3.3.2 $.getJSON() 請求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-3-getScript-%E8%AB%8B%E6%B1%82\"><span class=\"toc-text\">3.3.3 $.getScript() 請求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-4-post-%E8%AB%8B%E6%B1%82\"><span class=\"toc-text\">3.3.4 post 請求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-3-load\"><span class=\"toc-text\">3.2.3 .load()</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-API-%E7%B8%BD%E7%B5%90\"><span class=\"toc-text\">3.3 API 總結</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E8%A3%9C%E5%85%85-%E5%8E%9F%E7%94%9F-AJAX-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4. [補充]原生 AJAX 的基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">4.1 理解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%A9%9F\"><span class=\"toc-text\">4.2 使用步驟</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-1-get-%E8%AB%8B%E6%B1%82\"><span class=\"toc-text\">4.2.1 get 請求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-2-post-%E8%AB%8B%E6%B1%82\"><span class=\"toc-text\">4.2.2 post 請求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-3-%E5%8F%96%E6%B6%88%E7%99%BC%E9%80%81%E7%84%A1%E7%94%A8%E7%9A%84%E5%8F%83%E6%95%B8\"><span class=\"toc-text\">4.2.3 取消發送無用的參數</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E8%AB%8B%E6%B1%82%E8%B6%85%E6%99%82%E8%88%87%E7%B6%B2%E8%B7%AF%E7%95%B0%E5%B8%B8\"><span class=\"toc-text\">4.3 請求超時與網路異常</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E5%8F%96%E6%B6%88%E8%AB%8B%E6%B1%82\"><span class=\"toc-text\">4.4 取消請求</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A3%9C%E5%85%85-5-AJAX-%E8%AB%8B%E6%B1%82%E7%8B%80%E6%85%8B\"><span class=\"toc-text\">[補充]5 AJAX 請求狀態</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A3%9C%E5%85%85-6-API-%E7%B8%BD%E7%B5%90\"><span class=\"toc-text\">[補充]6 API 總結</span></a></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"ES6 介绍","uid":"1e00bbc5a1a969d8b4414c942e9fedc9","slug":"ES601 【ES6 介绍】","date":"2024-01-24T00:06:25.000Z","updated":"2024-01-30T12:54:52.424Z","comments":true,"path":"api/articles/ES601 【ES6 介绍】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/es6/1_8nfBRAssY0DuETYwdwyqqw.png?raw=true","text":"01 【ES6 介紹】ECMAScript 6.0（以下簡稱 ES6）是 JavaScript 語言的下一代標準，已於 2015 年 6 月正式發布。它的目標是...","permalink":"/post/ES601 【ES6 介绍】","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"ES6","slug":"ES6","count":3,"path":"api/categories/ES6.json"}],"tags":[{"name":"ES6","slug":"ES6","count":3,"path":"api/tags/ES6.json"},{"name":"桃園資展筆記","slug":"桃園資展筆記","count":7,"path":"api/tags/桃園資展筆記.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"photoshop 快捷鍵","uid":"2011ff6695f520987816df543df8d79b","slug":"PS02【基礎知識】","date":"2023-12-18T13:15:32.000Z","updated":"2024-01-29T16:05:15.542Z","comments":true,"path":"api/articles/PS02【基礎知識】.json","keywords":null,"cover":"https://github.com/HSU0201/images/blob/main/visual-design/improvements-ps.png.img.png?raw=true","text":"圖像處理筆記解析度 解析度的單位有： dpi（點每英寸） lpi（線每英寸） ppi（每英寸像素） “像素” 存在於電腦顯示領域 “點” 存在於列印或印刷領域 ...","permalink":"/post/PS02【基礎知識】","photos":[],"count_time":{"symbolsCount":655,"symbolsTime":"1 mins."},"categories":[{"name":"photoshop","slug":"photoshop","count":2,"path":"api/categories/photoshop.json"}],"tags":[{"name":"桃園資展筆記","slug":"桃園資展筆記","count":7,"path":"api/tags/桃園資展筆記.json"},{"name":"視覺工具","slug":"視覺工具","count":3,"path":"api/tags/視覺工具.json"},{"name":"photoshop","slug":"photoshop","count":2,"path":"api/tags/photoshop.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}