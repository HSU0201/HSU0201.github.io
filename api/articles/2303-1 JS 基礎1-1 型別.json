{"title":"JavaScript 基礎- 第1天","uid":"1517f5e85f0012c69f183e7960bb5313","slug":"2303-1 JS 基礎1-1 型別","date":"2023-03-17T16:00:00.000Z","updated":"2023-04-13T09:49:17.871Z","comments":true,"path":"api/articles/2303-1 JS 基礎1-1 型別.json","keywords":null,"cover":null,"content":"<h2 id=\"資料型別\"><a href=\"#資料型別\" class=\"headerlink\" title=\"資料型別\"></a>資料型別</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>電腦世界中的萬事成物都是資料。</p></blockquote>\n<p>電腦程式可以處理大量的資料，為了方便資料的管理，將資料分成了不同的型別：</p>\n<p>注：通過 typeof 關鍵字檢測資料型別</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;title&gt;JavaScript 基礎 - 資料型別&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  \n  &lt;script&gt; \n    &#x2F;&#x2F; 檢測 1 是什麼型別資料，結果為 number\n    document.write(typeof 1)\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h3 id=\"數值型別\"><a href=\"#數值型別\" class=\"headerlink\" title=\"數值型別\"></a>數值型別</h3><p>即我們數學中學習到的數位，可以是整數、小數、正數、負數</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;title&gt;JavaScript 基礎 - 資料型別&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  \n  &lt;script&gt; \n    let score &#x3D; 100 &#x2F;&#x2F; 正整數\n    let price &#x3D; 12.345 &#x2F;&#x2F; 小數\n    let temperature &#x3D; -40 &#x2F;&#x2F; 負數\n\n    document.write(typeof score) &#x2F;&#x2F; 結果為 number\n    document.write(typeof price) &#x2F;&#x2F; 結果為 number\n    document.write(typeof temperature) &#x2F;&#x2F; 結果為 number\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>JavaScript 中的數數值型別與數學中的數字是一樣的，分為正數、負數、小數等。</p>\n<h3 id=\"字串型別\"><a href=\"#字串型別\" class=\"headerlink\" title=\"字串型別\"></a>字串型別</h3><p>通過單引號（ <code>&#39;&#39;</code>） 、雙引號（ <code>&quot;&quot;</code>）或反引號包裹的資料都叫字串，單引號和雙引號沒有本質上的區別，推薦使用單引號。</p>\n<p>注意事項：</p>\n<ol>\n<li>無論單引號或是雙引號必須成對使用</li>\n<li>單引號&#x2F;雙引號可以互相嵌套，但是不以自已嵌套自已</li>\n<li>必要時可以使用轉義符 <code>\\</code>，輸出單引號或雙引號</li>\n</ol>\n<p>*範本字串<br>-使用場景-拼接字串和變數、在沒有它之前，要拼接變數比較麻煩<br>-語法<br>    Ø &#96;&#96; (反引號)<br>    Ø 在英文輸入模式下按鍵盤的tab鍵上方那個鍵（1左邊那個鍵）<br>    Ø 內容拼接變數時，用 ${ } 包住變數</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;title&gt;JavaScript 基礎 - 資料型別&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  \n  &lt;script&gt; \n    let user_name &#x3D; &#39;小徐&#39; &#x2F;&#x2F; 使用單引號\n    let gender &#x3D; &quot;男&quot; &#x2F;&#x2F; 使用雙引號\n    let str &#x3D; &#39;123&#39; &#x2F;&#x2F; 看上去是數字，但是用引號包裹了就成了字串了\n    let str1 &#x3D; &#39;&#39; &#x2F;&#x2F; 這種情況叫空字串\n    \n    documeent.write(typeof user_name) &#x2F;&#x2F; 結果為 string\n    documeent.write(typeof gender) &#x2F;&#x2F; 結果為 string\n    documeent.write(typeof str) &#x2F;&#x2F; 結果為 string\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h3 id=\"布林型別\"><a href=\"#布林型別\" class=\"headerlink\" title=\"布林型別\"></a>布林型別</h3><p>表示肯定或否定時在電腦中對應的是布林型別資料，它有兩個固定的值 <code>true</code> 和 <code>false</code>，表示肯定的資料用 <code>true</code>，表示否定的資料用 <code>false</code>。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;title&gt;JavaScript 基礎 - 資料型別&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  \n  &lt;script&gt; \n    &#x2F;&#x2F;  我帥不帥？回答 是 或 否\n    let isCool &#x3D; true &#x2F;&#x2F; 是的，帥死了！\n    isCool &#x3D; false &#x2F;&#x2F; 不，是個醜人！\n\n    document.write(typeof isCool) &#x2F;&#x2F; 結果為 boolean\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3><p>未定義是比較特殊的型別，只有一個值 undefined，只聲明變數，不賦值的情況下，變數的預設值為 undefined，一般很少【直接】為某個變數賦值為 undefined。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;title&gt;JavaScript 基礎 - 資料型別&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  \n  &lt;script&gt; \n    &#x2F;&#x2F; 只聲明了變數，並末賦值\n    let tmp;\n    document.write(typeof tmp) &#x2F;&#x2F; 結果為 undefined\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p><strong>注：JavaScript 中變數的值決定了變數的資料型別。</strong></p>\n<h2 id=\"型別轉換\"><a href=\"#型別轉換\" class=\"headerlink\" title=\"型別轉換\"></a>型別轉換</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>理解弱型別語言的特徵，掌握顯式型別轉換的方法</p></blockquote>\n<p>在 JavaScript 中資料被分成了不同的型別，如數值、字串、布林值、undefined，在實際程式設計的過程中，不同資料型別之間存在著轉換的關係。</p>\n<h3 id=\"隱式轉換\"><a href=\"#隱式轉換\" class=\"headerlink\" title=\"隱式轉換\"></a>隱式轉換</h3><p>某些運算子被執行時，系統內部自動將資料型別進行轉換，這種轉換稱為隱式轉換。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;title&gt;JavaScript 基礎 - 隱式轉換&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  &lt;script&gt; \n    let num &#x3D; 13 &#x2F;&#x2F; 數值\n    let num2 &#x3D; &#39;2&#39; &#x2F;&#x2F; 字串\n\n    &#x2F;&#x2F; 結果為 132\n    &#x2F;&#x2F; 原因是將數值 num 轉換成了字串，相當於 &#39;13&#39;\n    &#x2F;&#x2F; 然後 + 將兩個字串拼接到了一起\n    console.log(num + num2)\n\n    &#x2F;&#x2F; 結果為 11\n    &#x2F;&#x2F; 原因是將字串 num2 轉換成了數值，相當於 2\n    &#x2F;&#x2F; 然後數值 13 減去 數值 2\n    console.log(num - num2)\n\n    let a &#x3D; prompt(&#39;請輸入一個數字&#39;)\n    let b &#x3D; prompt(&#39;請再輸入一個數字&#39;)\n\n    alert(a + b);\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>注：資料型別的隱式轉換是 JavaScript 的特徵，後續學習中還會遇到，目前先需要理解什麼是隱式轉換。</p>\n<p>補充介紹範本字串的拼接的使用</p>\n<h3 id=\"顯式轉換\"><a href=\"#顯式轉換\" class=\"headerlink\" title=\"顯式轉換\"></a>顯式轉換</h3><p>編寫程式時過度依靠系統內部的隱式轉換是不嚴禁的，因為隱式轉換規律並不清晰，大多是靠經驗總結的規律。為了避免因隱式轉換帶來的問題，通常根邏輯需要對資料進行顯示轉換。</p>\n<h4 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h4><p>通過 <code>Number</code> 顯示轉換成數值型別，當轉換失敗時結果為 <code>NaN</code>（Not a Number）即不是一個數字。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;title&gt;JavaScript 基礎 - 隱式轉換&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n  &lt;script&gt;\n    let t &#x3D; &#39;12&#39;\n    let f &#x3D; 8\n\n    &#x2F;&#x2F; 顯式將字串 12 轉換成數值 12\n    t &#x3D; Number(t)\n\n    &#x2F;&#x2F; 檢測轉換後的型別\n    &#x2F;&#x2F; console.log(typeof t);\n    console.log(t + f) &#x2F;&#x2F; 結果為 20\n\n    &#x2F;&#x2F; 並不是所有的值都可以被轉成數值型別\n    let str &#x3D; &#39;hello&#39;\n    &#x2F;&#x2F; 將 hello 轉成數值是不現實的，當無法轉換成\n    &#x2F;&#x2F; 數值時，得到的結果為 NaN （Not a Number）\n    console.log(Number(str))\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n\n","feature":null,"text":"資料型別 電腦世界中的萬事成物都是資料。 電腦程式可以處理大量的資料，為了方便資料的管理，將資料分成了不同的型別： 注：通過 typeof 關鍵字檢測資料型別 &lt;!DOCTYPE html&gt; &lt;html lang&#x3D;&quot;en&quot;&gt; ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B3%87%E6%96%99%E5%9E%8B%E5%88%A5\"><span class=\"toc-text\">資料型別</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B8%E5%80%BC%E5%9E%8B%E5%88%A5\"><span class=\"toc-text\">數值型別</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E4%B8%B2%E5%9E%8B%E5%88%A5\"><span class=\"toc-text\">字串型別</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%83%E6%9E%97%E5%9E%8B%E5%88%A5\"><span class=\"toc-text\">布林型別</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#undefined\"><span class=\"toc-text\">undefined</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B\"><span class=\"toc-text\">型別轉換</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9A%B1%E5%BC%8F%E8%BD%89%E6%8F%9B\"><span class=\"toc-text\">隱式轉換</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%AF%E5%BC%8F%E8%BD%89%E6%8F%9B\"><span class=\"toc-text\">顯式轉換</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Number\"><span class=\"toc-text\">Number</span></a></li></ol></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JavaScript 基礎- 第1天","uid":"1517f5e85f0012c69f183e7960bb5313","slug":"2303-1 JS 基礎1 宣告","date":"2023-03-17T16:00:00.000Z","updated":"2023-04-13T10:47:55.267Z","comments":true,"path":"api/articles/2303-1 JS 基礎1 宣告.json","keywords":null,"cover":null,"text":" 瞭解變數、資料類型、運算子等基礎概念，能夠實現資料類型的轉換，結合四則運算體會如何程式設計。 體會現實世界中的事物與電腦的關係 理解什麼是資料並知道資料的分類 理解變數存儲資料的“容器” 掌握常見運算子的使用，瞭解優先順序關係 知道 JavaScript 資料類型隱式轉換的特徵...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"CSS 08-高級技巧","uid":"e6004c997fa8a9529d5026785922b3ae","slug":"2301-2 CSS 08 高級技巧","date":"2023-03-17T02:50:27.000Z","updated":"2023-03-27T01:38:20.131Z","comments":true,"path":"api/articles/2301-2 CSS 08 高級技巧.json","keywords":null,"cover":null,"text":"CSS高級技巧目標 理解 元素顯示隱藏最常見的寫法 精靈圖產生的目的 去除圖片底側空白縫隙的方法 應用 寫出最常見的滑鼠樣式 使用精靈圖技術 用滑動門做巡覽列案例 1. 元素的顯示與隱藏 目的：讓一個元素在頁面中消失或者顯示出來 場景：類似網站廣告，當我們點擊關閉就不見了，但是我...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"https://github.com/HSU0201","twitter":"","stackoverflow":"https://stackoverflow.com/users/21010008/hsu","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}