{"title":"CSS 01-層疊樣式表","uid":"e201a2a619b1945f4ef64af1b2319404","slug":"2301-2 CSS 01 層疊樣式表","date":"2023-03-10T02:00:27.000Z","updated":"2023-03-27T01:38:33.293Z","comments":true,"path":"api/articles/2301-2 CSS 01 層疊樣式表.json","keywords":null,"cover":null,"content":"<h2 id=\"學習目標\"><a href=\"#學習目標\" class=\"headerlink\" title=\"學習目標\"></a>學習目標</h2><ul>\n<li>理解<ul>\n<li>css的目的作用</li>\n<li>css的三種引入方式</li>\n</ul>\n</li>\n<li>應用<ul>\n<li>css三種引用方式的書寫</li>\n<li>通過樣式規則給標籤添加簡單的樣式</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"1-HTML的局限性\"><a href=\"#1-HTML的局限性\" class=\"headerlink\" title=\"1.HTML的局限性\"></a>1.HTML的局限性</h1><p>HTML非常單純， 只關注內容的語義， </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">比如:\n&lt;h1&gt;表明這是一個大標題，&lt;p&gt; 表明這是一個段落，\n&lt;img&gt; 表明這兒有一個圖片， &lt;a&gt; 表示此處有連結。</code></pre>\n\n<p>以至於早期的網站雖然很多，但都有一個共同的特點<em>醜</em><br>但要改變高度或者變一個顏色，就需要大量重複操作</p>\n<p><strong>總結：</strong></p>\n<ul>\n<li>HTML滿足不了設計者的需求</li>\n<li>操作html屬性不方便</li>\n<li>HTML裡面添加樣式帶來的是無盡的臃腫和繁瑣</li>\n</ul>\n<h1 id=\"2-CSS-網頁的美容師\"><a href=\"#2-CSS-網頁的美容師\" class=\"headerlink\" title=\"2.CSS 網頁的美容師\"></a>2.CSS 網頁的美容師</h1><ul>\n<li>讓網頁更加豐富多彩，佈局更加靈活自如。   </li>\n<li>CSS的貢獻是:讓 HTML 從<strong>樣式</strong>中脫離，實現了HTML專注去做<strong>結構呈現</strong>，樣式交給css</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>理想中的結果： 結構(html)與樣式(css)相分離</strong>  </p></blockquote>\n<p>如果JavaScript是網頁的魔法師，那麼CSS它是我們網頁的美容師</p>\n<h1 id=\"3-CSS初識\"><a href=\"#3-CSS初識\" class=\"headerlink\" title=\"3.CSS初識\"></a>3.CSS初識</h1><ul>\n<li><p>概念：</p>\n<p> CSS(Cascading Style Sheets)  ，通常稱為CSS樣式表或層疊樣式表（階層式樣式表）</p>\n</li>\n<li><p>作用：</p>\n<ul>\n<li>主要用於<strong>設置</strong> HTML頁面中的文本內容（字體、大小、對齊方式等）、圖片的外形（寬高、邊框樣式、邊距等）以及<strong>版面的佈局和外觀顯示樣式。</strong></li>\n<li>CSS以HTML為基礎，提供了豐富的功能，如字體、顏色、背景的控制及整體排版等，而且還可以針對不同的流覽器設置不同的樣式。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"4-引入CSS樣式表（書寫位置）\"><a href=\"#4-引入CSS樣式表（書寫位置）\" class=\"headerlink\" title=\"4. 引入CSS樣式表（書寫位置）\"></a>4. 引入CSS樣式表（書寫位置）</h1><pre class=\"line-numbers language-none\"><code class=\"language-none\">要書寫css樣式，那css樣式書寫的位置在哪呢？</code></pre>\n\n<h2 id=\"4-1-行內式（內聯樣式）\"><a href=\"#4-1-行內式（內聯樣式）\" class=\"headerlink\" title=\"4.1 行內式（內聯樣式）\"></a>4.1 行內式（內聯樣式）</h2><ul>\n<li><p>概念：</p>\n<p> 稱行內樣式、行間樣式.</p>\n<p> 是通過標籤的style屬性來設置元素的樣式</p>\n</li>\n<li><p>其基本語法格式如下：</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;標籤名 style&#x3D;&quot;屬性1:屬性值1; 屬性2:屬性值2; 屬性3:屬性值3;&quot;&gt; \n  內容 \n&lt;&#x2F;標籤名&gt;</code></pre>\n\n<p>實際上任何HTML標籤都擁有style屬性，用來設置行內式。</p>\n<ul>\n<li>案例：</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;div style&#x3D;&quot;color: red; font-size: 12px;&quot;&gt;\n  青春不常在，抓緊談戀愛\n&lt;&#x2F;div&gt;</code></pre>\n\n<ul>\n<li>注意：<ul>\n<li>style其實就是標籤的屬性</li>\n<li>樣式屬性和值中間是<code>:</code></li>\n<li>多組屬性值之間用<code>;</code>隔開。</li>\n<li>只能控制當前的標籤和以及嵌套在其中的字標籤，造成代碼冗餘</li>\n</ul>\n</li>\n<li>缺點：<ul>\n<li>沒有實現樣式和結構相分離</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-2-內部樣式表（內嵌樣式表）\"><a href=\"#4-2-內部樣式表（內嵌樣式表）\" class=\"headerlink\" title=\"4.2 內部樣式表（內嵌樣式表）\"></a>4.2 內部樣式表（內嵌樣式表）</h2><ul>\n<li><p>概念：</p>\n<p> 稱內嵌式</p>\n<p> 是將CSS代碼集中寫在HTML文檔的head頭部標籤中，並且用style標籤定義</p>\n</li>\n<li><p>其基本語法格式如下：</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;head&gt;\n&lt;style type&#x3D;&quot;text&#x2F;CSS&quot;&gt;\n    選擇器（選擇的標籤） &#123; \n      屬性1: 屬性值1;\n      屬性2: 屬性值2; \n      屬性3: 屬性值3;\n    &#125;\n&lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;</code></pre>\n\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;style&gt;\n   div &#123;\n    color: red;\n    font-size: 12px;\n   &#125;\n&lt;&#x2F;style&gt;</code></pre>\n\n<ul>\n<li><p>注意：</p>\n<ul>\n<li>style標籤一般位於head標籤中，當然理論上他可以放在HTML文檔的任何地方。</li>\n<li>type&#x3D;”text&#x2F;css”  在html5中可以省略。</li>\n<li>只能控制當前的頁面</li>\n</ul>\n</li>\n<li><p>缺點：</p>\n<p>  沒有徹底分離</p>\n</li>\n</ul>\n<h3 id=\"綜合案例\"><a href=\"#綜合案例\" class=\"headerlink\" title=\"綜合案例\"></a>綜合案例</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;style&gt;\n   &#x2F;*選擇器&#123;屬性:值；&#125;*&#x2F;\n   p &#123;\n      color:#06C; \n      font-size:14px;  \n    &#125;  &#x2F;*文字的顏色是 藍色*&#x2F;\n   h4 &#123;\n     color:#900;\n   &#125;\n   h1 &#123;\n     color:#090; \n     font-size:16px; \n    &#125;\n   body &#123; \n     background:url(bg2.jpg);\n   &#125;\n&lt;&#x2F;style&gt;</code></pre>\n\n<h2 id=\"4-3-外部樣式表（外鏈式）\"><a href=\"#4-3-外部樣式表（外鏈式）\" class=\"headerlink\" title=\"4.3 外部樣式表（外鏈式）\"></a>4.3 外部樣式表（外鏈式）</h2><ul>\n<li><p>概念：</p>\n<p> 稱鏈入式</p>\n<p> 是將所有的樣式放在一個或多個以**.CSS**為副檔名的外部樣式表檔中，</p>\n<p> 通過link標籤將外部樣式表檔連結到HTML文檔中</p>\n</li>\n<li><p>其基本語法格式如下：</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;head&gt;\n  &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;css檔路徑&quot;&gt;\n&lt;&#x2F;head&gt;</code></pre>\n\n<ul>\n<li>注意：  <ul>\n<li>link 是個單標籤</li>\n<li>link標籤需要放在head頭部標籤中，並且指定link標籤的三個屬性</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>屬性</th>\n<th align=\"left\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>rel</td>\n<td align=\"left\">定義當前文檔與被連結文檔之間的關係，在這裡需要指定為“stylesheet”，表示被連結的文檔是一個樣式表檔。</td>\n</tr>\n<tr>\n<td>type</td>\n<td align=\"left\">定義所連結文檔的類型，在這裡需要指定為“text&#x2F;CSS”，表示連結的外部檔為CSS樣式表。我們都可以省略</td>\n</tr>\n<tr>\n<td>href</td>\n<td align=\"left\">定義所連結外部樣式表檔的URL，可以是相對路徑，也可以是絕對路徑。</td>\n</tr>\n</tbody></table>\n<h2 id=\"4-4-三種樣式表總結（位置）\"><a href=\"#4-4-三種樣式表總結（位置）\" class=\"headerlink\" title=\"4.4 三種樣式表總結（位置）\"></a>4.4 三種樣式表總結（位置）</h2><table>\n<thead>\n<tr>\n<th>樣式表</th>\n<th>優點</th>\n<th>缺點</th>\n<th>使用情況</th>\n<th>控制範圍</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>行內樣式表</td>\n<td>書寫方便，權重高</td>\n<td>沒有實現樣式和結構相分離</td>\n<td>較少</td>\n<td>控制一個標籤（少）</td>\n</tr>\n<tr>\n<td>內部樣式表</td>\n<td>部分結構和樣式相分離</td>\n<td>沒有徹底分離</td>\n<td>較多</td>\n<td>控制一個頁面（中）</td>\n</tr>\n<tr>\n<td>外部樣式表</td>\n<td>完全實現結構和樣式相分離</td>\n<td>需要引入</td>\n<td>最多，強烈推薦</td>\n<td>控制整個網站（多）</td>\n</tr>\n</tbody></table>\n<h3 id=\"團隊約定-代碼風格\"><a href=\"#團隊約定-代碼風格\" class=\"headerlink\" title=\"團隊約定-代碼風格\"></a>團隊約定-代碼風格</h3><p>樣式書寫一般有兩種：</p>\n<ul>\n<li>一種是緊湊格式 (Compact)</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">h3 &#123; color: deeppink;font-size: 20px;&#125;</code></pre>\n\n<ul>\n<li>一種是展開格式（推薦）</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">h3 &#123;\n  color: deeppink;\n  font-size: 20px;    \n&#125;</code></pre>\n\n<h3 id=\"團隊約定-代碼大小寫\"><a href=\"#團隊約定-代碼大小寫\" class=\"headerlink\" title=\"團隊約定-代碼大小寫\"></a>團隊約定-代碼大小寫</h3><p>樣式選擇器，屬性名，屬性值關鍵字全部使用小寫字母書寫，屬性字串允許使用大小寫。</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;* 推薦 *&#x2F;\nh3&#123;\n  color: pink;\n&#125;\n  \n&#x2F;* 不推薦 *&#x2F;\nH3&#123;\n  COLOR: PINK;\n&#125;</code></pre>\n\n\n<h1 id=\"5-總結CSS樣式規則\"><a href=\"#5-總結CSS樣式規則\" class=\"headerlink\" title=\"5. 總結CSS樣式規則\"></a>5. 總結CSS樣式規則</h1><p>使用HTML時，需要遵從一定的規範。CSS亦如此，要想熟練地使用CSS對網頁進行修飾，首先需要瞭解CSS樣式規則，</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>選擇器 {屬性:值;}</p></blockquote>\n<p><strong>總結：</strong></p>\n<ol>\n<li>選擇器用於指定CSS樣式作用的HTML標籤，花括弧內是對該物件設置的具體樣式。</li>\n<li>屬性和屬性值以<strong>鍵值對</strong>的形式出現。</li>\n<li>屬性是對指定的物件設置的樣式屬性，例如字體大小、文本顏色等。</li>\n<li>屬性和屬性值之間用英文**:**連接。</li>\n<li>多個“鍵值對”之間用英文**;**進行區分。</li>\n</ol>\n<h1 id=\"拓展閱讀\"><a href=\"#拓展閱讀\" class=\"headerlink\" title=\"@拓展閱讀\"></a>@拓展閱讀</h1><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzAwNTAzMjcxNg==&mid=2651424749&idx=1&sn=f58bca144f50bff00ba7d1675cc8b8e7&scene=4\">CSS的發展史</a></p>\n","feature":null,"text":"學習目標 理解 css的目的作用 css的三種引入方式 應用 css三種引用方式的書寫 通過樣式規則給標籤添加簡單的樣式 1.HTML的局限性HTML非常單純， 只關注內容的語義， 比如: &lt;h1&gt;表明這是一個大標題，&lt;p&gt; 表明這是一個段落， &lt;i...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%B8%E7%BF%92%E7%9B%AE%E6%A8%99\"><span class=\"toc-text\">學習目標</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-HTML%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7\"><span class=\"toc-text\">1.HTML的局限性</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-CSS-%E7%B6%B2%E9%A0%81%E7%9A%84%E7%BE%8E%E5%AE%B9%E5%B8%AB\"><span class=\"toc-text\">2.CSS 網頁的美容師</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-CSS%E5%88%9D%E8%AD%98\"><span class=\"toc-text\">3.CSS初識</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E5%BC%95%E5%85%A5CSS%E6%A8%A3%E5%BC%8F%E8%A1%A8%EF%BC%88%E6%9B%B8%E5%AF%AB%E4%BD%8D%E7%BD%AE%EF%BC%89\"><span class=\"toc-text\">4. 引入CSS樣式表（書寫位置）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E8%A1%8C%E5%85%A7%E5%BC%8F%EF%BC%88%E5%85%A7%E8%81%AF%E6%A8%A3%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">4.1 行內式（內聯樣式）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E5%85%A7%E9%83%A8%E6%A8%A3%E5%BC%8F%E8%A1%A8%EF%BC%88%E5%85%A7%E5%B5%8C%E6%A8%A3%E5%BC%8F%E8%A1%A8%EF%BC%89\"><span class=\"toc-text\">4.2 內部樣式表（內嵌樣式表）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B6%9C%E5%90%88%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">綜合案例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E5%A4%96%E9%83%A8%E6%A8%A3%E5%BC%8F%E8%A1%A8%EF%BC%88%E5%A4%96%E9%8F%88%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">4.3 外部樣式表（外鏈式）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-4-%E4%B8%89%E7%A8%AE%E6%A8%A3%E5%BC%8F%E8%A1%A8%E7%B8%BD%E7%B5%90%EF%BC%88%E4%BD%8D%E7%BD%AE%EF%BC%89\"><span class=\"toc-text\">4.4 三種樣式表總結（位置）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%98%E9%9A%8A%E7%B4%84%E5%AE%9A-%E4%BB%A3%E7%A2%BC%E9%A2%A8%E6%A0%BC\"><span class=\"toc-text\">團隊約定-代碼風格</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%98%E9%9A%8A%E7%B4%84%E5%AE%9A-%E4%BB%A3%E7%A2%BC%E5%A4%A7%E5%B0%8F%E5%AF%AB\"><span class=\"toc-text\">團隊約定-代碼大小寫</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E7%B8%BD%E7%B5%90CSS%E6%A8%A3%E5%BC%8F%E8%A6%8F%E5%89%87\"><span class=\"toc-text\">5. 總結CSS樣式規則</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8B%93%E5%B1%95%E9%96%B1%E8%AE%80\"><span class=\"toc-text\">@拓展閱讀</span></a>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CSS 02-基礎選擇器","uid":"fe80011ed56b79e3fb28c137c216c8eb","slug":"2301-2 CSS 02 基礎選擇器","date":"2023-03-11T02:50:27.000Z","updated":"2023-03-27T01:38:34.756Z","comments":true,"path":"api/articles/2301-2 CSS 02 基礎選擇器.json","keywords":null,"cover":null,"text":"CSS選擇器 找到特定的HTML頁面元素能夠使用基礎選擇器給頁面元素添加樣式 1. CSS選擇器作用（重點）選擇器的作用css 只做兩件事 選人，做事 h3 &#123; color: red; &#125; 這段代碼就是2件事， 把 h3選出來， 然後 把它變成了 紅色。 選擇...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"Html列表和表單","uid":"c280a2edc22e967ceed619afcdbab7b6","slug":"2301-1 Html 05 列表和表單","date":"2023-03-09T02:31:01.000Z","updated":"2023-04-12T08:42:09.627Z","comments":true,"path":"api/articles/2301-1 Html 05 列表和表單.json","keywords":null,"cover":null,"text":"1. 列表標籤（重點）學習目標 理解 無序列表的應用場景 自訂列表的應用場景 應用 無序列表語法 自訂清單語法 容器裡面裝載著結構，樣式一致的文字或圖表的一種形式，叫列表 特點：列表最大的特點就是 整齊 、整潔、 有序，跟表格類似，但是他可組合自由度會更高。 1.1 無序列表 u...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"HTML","slug":"HTML","count":5,"path":"api/categories/HTML.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"https://github.com/HSU0201/images/blob/main/blogimage.jpg?raw=true","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}