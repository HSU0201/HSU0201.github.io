{"title":"JavaScript Web APIs - 第5天","uid":"ba21313bf340a72e13573e85234fd6fe","slug":"20230327JavaScript Web APIs - 第5天","date":"2023-03-27T01:22:08.000Z","updated":"2023-03-29T13:30:25.272Z","comments":true,"path":"api/articles/20230327JavaScript Web APIs - 第5天.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>目標： 能夠利用JS操作流覽器,具備利用本機存放區實現學生就業表的能力</p></blockquote>\n<ul>\n<li>BOM操作</li>\n<li>綜合案例</li>\n</ul>\n<h1 id=\"js組成\"><a href=\"#js組成\" class=\"headerlink\" title=\"js組成\"></a>js組成</h1><p>JavaScript的組成</p>\n<ul>\n<li><p>ECMAScript:</p>\n<ul>\n<li>規定了js基礎語法核心知識。</li>\n<li>比如：變數、分支語句、迴圈語句、物件等等</li>\n</ul>\n</li>\n<li><p>Web APIs :</p>\n<ul>\n<li>DOM   文檔物件模型， 定義了一套操作HTML文檔的API</li>\n<li>BOM   流覽器物件模型，定義了一套操作流覽器視窗的API</li>\n</ul>\n</li>\n</ul>\n<p> <img src=\"/../img/dom.png\" alt=\"dom\"></p>\n<h1 id=\"window對象\"><a href=\"#window對象\" class=\"headerlink\" title=\"window對象\"></a>window對象</h1><p><strong>BOM</strong> (Browser Object Model ) 是流覽器物件模型</p>\n<ul>\n<li>window物件是一個全域物件，也可以說是JavaScript中的頂級物件</li>\n<li>像document、alert()、console.log()這些都是window的屬性，基本BOM的屬性和方法都是window的</li>\n<li>所有通過var定義在全域作用域中的變數、函數都會變成window物件的屬性和方法</li>\n<li>window物件下的屬性和方法調用的時候可以省略window</li>\n</ul>\n<p> <img src=\"/../img/bom.png\" alt=\"bom\"></p>\n<h1 id=\"計時器-延遲函數\"><a href=\"#計時器-延遲函數\" class=\"headerlink\" title=\"計時器-延遲函數\"></a>計時器-延遲函數</h1><p>JavaScript 內置的一個用來讓代碼延遲執行的函數，叫 <code>setTimeout</code></p>\n<p><strong>語法：</strong></p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">setTimeout(回呼函數, 延遲時間)</code></pre>\n\n<p>setTimeout 僅僅只執行一次，所以可以理解為就是把一段代碼延遲執行, 平時省略window</p>\n<p>間歇函數 setInterval : 每隔一段時間就執行一次， , 平時省略window</p>\n<p>清除延時函數：</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">clearTimeout(timerId)</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意點</p>\n<ol>\n<li>延時函數需要等待,所以後面的代碼先執行</li>\n<li>返回值是一個正整數，表示計時器的編號</li>\n</ol></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; 計時器之延遲函數\n\n    &#x2F;&#x2F; 1. 開啟延遲函數\n    let timerId &#x3D; setTimeout(function () &#123;\n      console.log(&#39;我只執行一次&#39;)\n    &#125;, 3000)\n\n    &#x2F;&#x2F; 1.1 延遲函數返回的還是一個正整數數位，表示延遲函數的編號\n    console.log(timerId)\n\n    &#x2F;&#x2F; 1.2 延遲函數需要等待時間，所以下面的代碼優先執行\n\n    &#x2F;&#x2F; 2. 關閉延遲函數\n    clearTimeout(timerId)\n\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n<h1 id=\"location對象\"><a href=\"#location對象\" class=\"headerlink\" title=\"location對象\"></a>location對象</h1><p>location (位址) 它拆分並保存了 URL 位址的各個組成部分， 它是一個物件</p>\n<table>\n<thead>\n<tr>\n<th>屬性&#x2F;方法</th>\n<th>說明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>href</td>\n<td>屬性，獲取完整的 URL 位址，賦值時用於地址的跳轉</td>\n</tr>\n<tr>\n<td>search</td>\n<td>屬性，獲取位址中攜帶的參數，符號 ？後面部分</td>\n</tr>\n<tr>\n<td>hash</td>\n<td>屬性，獲取位址中的啥希值，符號 # 後面部分</td>\n</tr>\n<tr>\n<td>reload()</td>\n<td>方法，用來刷新當前頁面，傳入參數 true 時表示強制刷新</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n  &lt;form&gt;\n    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;search&quot;&gt; &lt;button&gt;搜索&lt;&#x2F;button&gt;\n  &lt;&#x2F;form&gt;\n  &lt;a href&#x3D;&quot;#&#x2F;music&quot;&gt;音樂&lt;&#x2F;a&gt;\n  &lt;a href&#x3D;&quot;#&#x2F;download&quot;&gt;下載&lt;&#x2F;a&gt;\n\n  &lt;button class&#x3D;&quot;reload&quot;&gt;刷新頁面&lt;&#x2F;button&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; location 對象  \n    &#x2F;&#x2F; 1. href屬性 （重點） 得到完整地址，賦值則是跳轉到新地址\n    console.log(location.href)\n    &#x2F;&#x2F; location.href &#x3D; &#39;http:&#x2F;&#x2F;www.itcast.cn&#39;\n\n    &#x2F;&#x2F; 2. search屬性  得到 ? 後面的地址 \n    console.log(location.search)  &#x2F;&#x2F; ?search&#x3D;筆記本\n\n    &#x2F;&#x2F; 3. hash屬性  得到 # 後面的地址\n    console.log(location.hash)\n\n    &#x2F;&#x2F; 4. reload 方法  刷新頁面\n    const btn &#x3D; document.querySelector(&#39;.reload&#39;)\n    btn.addEventListener(&#39;click&#39;, function () &#123;\n      &#x2F;&#x2F; location.reload() &#x2F;&#x2F; 頁面刷新\n      location.reload(true) &#x2F;&#x2F; 強制頁面刷新 ctrl+f5\n    &#125;)\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n<h1 id=\"navigator對象\"><a href=\"#navigator對象\" class=\"headerlink\" title=\"navigator對象\"></a>navigator對象</h1><p>navigator是物件，該物件下記錄了流覽器自身的相關資訊</p>\n<p>常用屬性和方法：</p>\n<ul>\n<li>通過 userAgent 檢測流覽器的版本及平臺</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 檢測 userAgent（流覽器資訊）\n(function () &#123;\n  const userAgent &#x3D; navigator.userAgent\n  &#x2F;&#x2F; 驗證是否為Android或iPhone\n  const android &#x3D; userAgent.match(&#x2F;(Android);?[\\s\\&#x2F;]+([\\d.]+)?&#x2F;)\n  const iphone &#x3D; userAgent.match(&#x2F;(iPhone\\sOS)\\s([\\d_]+)&#x2F;)\n  &#x2F;&#x2F; 如果是Android或iPhone，則跳轉至移動網站\n  if (android || iphone) &#123;\n    location.href &#x3D; &#39;http:&#x2F;&#x2F;google.com&#39;\n  &#125;&#125;)();</code></pre>\n\n<h1 id=\"histroy對象\"><a href=\"#histroy對象\" class=\"headerlink\" title=\"histroy對象\"></a>histroy對象</h1><p>history (歷史)是物件，主要管理歷史記錄， 該物件與流覽器位址欄的操作相對應，如前進、後退等</p>\n<p><strong>使用場景</strong></p>\n<p>history物件一般在實際開發中比較少用</p>\n<p>常見方法：</p>\n<table>\n<thead>\n<tr>\n<th>history對象方法</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>back()</td>\n<td>後退功能</td>\n</tr>\n<tr>\n<td>forward()</td>\n<td>前進功能</td>\n</tr>\n<tr>\n<td>go(參數)</td>\n<td>前進後退功能，如果參數是1前進1個頁面，-1則後退1個頁面</td>\n</tr>\n</tbody></table>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n  &lt;button class&#x3D;&quot;back&quot;&gt;←後退&lt;&#x2F;button&gt;\n  &lt;button class&#x3D;&quot;forward&quot;&gt;前進→&lt;&#x2F;button&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; histroy對象\n\n    &#x2F;&#x2F; 1.前進\n    const forward &#x3D; document.querySelector(&#39;.forward&#39;)\n    forward.addEventListener(&#39;click&#39;, function () &#123;\n      &#x2F;&#x2F; history.forward() \n      history.go(1)\n    &#125;)\n    &#x2F;&#x2F; 2.後退\n    const back &#x3D; document.querySelector(&#39;.back&#39;)\n    back.addEventListener(&#39;click&#39;, function () &#123;\n      &#x2F;&#x2F; history.back()\n      history.go(-1)\n    &#125;)\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n</code></pre>\n\n<h1 id=\"本機存放區（今日重點）\"><a href=\"#本機存放區（今日重點）\" class=\"headerlink\" title=\"本機存放區（今日重點）\"></a>本機存放區（今日重點）</h1><p>本機存放區：將資料存儲在本地流覽器中</p>\n<p>常見的使用場景：</p>\n<p><a href=\"https://todomvc.com/examples/vanilla-es6/\">https://todomvc.com/examples/vanilla-es6/</a>    頁面刷新資料不丟失</p>\n<p>好處：</p>\n<p>1、頁面刷新或者關閉不丟失資料，實現資料持久化</p>\n<p>2、容量較大，sessionStorage和 localStorage 約 5M 左右</p>\n<h2 id=\"localStorage（重點）\"><a href=\"#localStorage（重點）\" class=\"headerlink\" title=\"localStorage（重點）\"></a>localStorage（重點）</h2><p><strong>作用:</strong> 資料可以長期保留在本地流覽器中，刷新頁面和關閉頁面，資料也不會丟失，除非手動刪除。</p>\n<p><strong>特性：</strong>以鍵值對的形式存儲，並且存儲的是字串， 省略了window</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>語法:<br>儲存數據 <code>localStorage.setItem(&#39;key&#39;, value)</code><br>讀取數據 <code>localStorage.getItem(&#39;key&#39;)</code><br>刪除數據 <code>localStorage.removeItem(&#39;key&#39;)</code></p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n\n&lt;head&gt;\n  &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n  &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n  &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n  &lt;title&gt;本機存放區-localstorage&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n\n&lt;body&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; 本機存放區 - localstorage 存儲的是字串 \n    &#x2F;&#x2F; 1. 存儲\n    localStorage.setItem(&#39;age&#39;, 18)\n\n    &#x2F;&#x2F; 2. 獲取\n    console.log(typeof localStorage.getItem(&#39;age&#39;))\n\n    &#x2F;&#x2F; 3. 刪除\n    localStorage.removeItem(&#39;age&#39;)\n\n    &#x2F;&#x2F; 4. 改(重新存)\n    localStorage.setItem(&#39;age&#39;, 19999)\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n\n&lt;&#x2F;html&gt;</code></pre>\n\n<h2 id=\"sessionStorage（瞭解）\"><a href=\"#sessionStorage（瞭解）\" class=\"headerlink\" title=\"sessionStorage（瞭解）\"></a>sessionStorage（瞭解）</h2><p>特性：</p>\n<ul>\n<li>用法跟localStorage基本相同</li>\n<li>區別是：當頁面流覽器被關閉時，存儲在 sessionStorage 的資料會被清除</li>\n</ul>\n<p>存儲：sessionStorage.setItem(key,value)</p>\n<p>獲取：sessionStorage.getItem(key)</p>\n<p>刪除：sessionStorage.removeItem(key)</p>\n<h2 id=\"localStorage-存儲複雜資料類型\"><a href=\"#localStorage-存儲複雜資料類型\" class=\"headerlink\" title=\"localStorage 存儲複雜資料類型\"></a>localStorage 存儲複雜資料類型</h2><p><strong>問題：</strong>本地只能存儲<em>字串</em>,無法存儲複雜資料類型.</p>\n<p><strong>解決：</strong>需要將複雜資料類型轉換成 JSON字串,在存儲到本地</p>\n<p><strong>語法：</strong>JSON.stringify(複雜資料類型)</p>\n<p>JSON字串：</p>\n<ul>\n<li>首先是1個字串</li>\n<li>屬性名使用雙引號引起來，不能單引號</li>\n<li>屬性值如果是字串型也必須雙引號</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; 本機存放區複雜資料類型\n    const goods &#x3D; &#123;\n      name: &#39;小米&#39;,\n      price: 1999\n    &#125;\n    &#x2F;&#x2F; 存储 複雜數據類型  -無法直接使用，不能直接使用對象\n    &#x2F;&#x2F; localStorage.setItem(&#39;goods&#39;, goods)\n    &#x2F;&#x2F; 取\n    &#x2F;&#x2F; console.log(localStorage.getItem(&#39;goods&#39;))\n\n    &#x2F;&#x2F; 1. 把物件轉換為JSON字串  JSON.stringify\n    localStorage.setItem(&#39;goods&#39;, JSON.stringify(goods))\n    &#x2F;&#x2F; console.log(typeof localStorage.getItem(&#39;goods&#39;))\n\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n\n<p><strong>問題：</strong>因為本機存放區裡面取出來的是<strong>字串</strong>，不是物件，無法直接使用</p>\n<p>**解決： **把取出來的字串轉換為物件</p>\n<p><strong>語法：</strong>JSON.parse(JSON字串)</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n  &lt;script&gt;\n    &#x2F;&#x2F; 本機存放區複雜資料類型\n    const goods &#x3D; &#123;\n      name: &#39;小米&#39;,\n      price: 1999\n    &#125;\n    &#x2F;&#x2F; 存储 複雜數據類型    -無法直接使用，不能直接使用對象\n    &#x2F;&#x2F; localStorage.setItem(&#39;goods&#39;, goods)\n    &#x2F;&#x2F; 取\n    &#x2F;&#x2F; console.log(localStorage.getItem(&#39;goods&#39;))\n\n    &#x2F;&#x2F; 1. 把物件轉換為JSON字串  JSON.stringify\n    localStorage.setItem(&#39;goods&#39;, JSON.stringify(goods))\n    &#x2F;&#x2F; console.log(typeof localStorage.getItem(&#39;goods&#39;))\n\n    &#x2F;&#x2F; 2. 把JSON字串轉換為物件  JSON.parse\n    console.log(JSON.parse(localStorage.getItem(&#39;goods&#39;)))\n\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n<h1 id=\"綜合案例\"><a href=\"#綜合案例\" class=\"headerlink\" title=\"綜合案例\"></a>綜合案例</h1><h2 id=\"陣列map-方法\"><a href=\"#陣列map-方法\" class=\"headerlink\" title=\"陣列map 方法\"></a>陣列map 方法</h2><p><strong>使用場景：</strong></p>\n<p>map 可以遍歷陣列處理資料，並且返回新的陣列</p>\n<p><strong>語法：</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;body&gt;\n  &lt;script&gt;\n  const arr &#x3D; [&#39;red&#39;, &#39;blue&#39;, &#39;pink&#39;]\n  &#x2F;&#x2F; 1. 陣列 map方法 處理資料並且 返回一個陣列\n   const newArr &#x3D; arr.map(function (ele, index) &#123;\n    &#x2F;&#x2F; console.log(ele)  &#x2F;&#x2F; 陣列元素\n    &#x2F;&#x2F; console.log(index) &#x2F;&#x2F; 索引號\n    return ele + &#39;顏色&#39;  &#x2F;&#x2F;讓數組中每個元素添加&#39;顏色&#39;\n  &#125;)\n  console.log(newArr)  &#x2F;&#x2F;[&#39;red顏色&#39;, &#39;blue顏色&#39;, &#39;pink顏色&#39;] \n&lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>map 也稱為映射。映射是個術語，指兩個元素的集之間元素相互“<strong>對應</strong>”的關係。</p>\n<p><strong>map重點在於有返回值</strong>，forEach沒有返回值（undefined）</p></blockquote>\n<h2 id=\"陣列join方法\"><a href=\"#陣列join方法\" class=\"headerlink\" title=\"陣列join方法\"></a>陣列join方法</h2><p><strong>作用：</strong>join() 方法用於把陣列中的所有元素轉換一個字串</p>\n<p><strong>語法：</strong></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n  &lt;script&gt;\n    const arr &#x3D; [&#39;red&#39;, &#39;blue&#39;, &#39;pink&#39;]\n\n    &#x2F;&#x2F; 1. 陣列 map方法 處理資料並且 返回一個陣列\n    const newArr &#x3D; arr.map(function (ele, index) &#123;\n      &#x2F;&#x2F; console.log(ele)  &#x2F;&#x2F; 陣列元素\n      &#x2F;&#x2F; console.log(index) &#x2F;&#x2F; 索引號\n      return ele + &#39;顏色&#39;\n    &#125;)\n    console.log(newArr)\n\n    &#x2F;&#x2F; 2. 陣列join方法  把陣列轉換為字串\n    &#x2F;&#x2F; 小括弧為空則逗號分割\n    console.log(newArr.join())  &#x2F;&#x2F; red顏色,blue顏色,pink顏色\n    &#x2F;&#x2F; 小括弧是空字串，則元素之間沒有分隔符號\n    console.log(newArr.join(&#39;&#39;))  &#x2F;&#x2F;red顏色blue顏色pink顏色\n    console.log(newArr.join(&#39;|&#39;))  &#x2F;&#x2F;red顏色|blue顏色|pink顏色\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n\n\n\n\n\n\n\n\n\n","feature":null,"text":" 目標： 能夠利用JS操作流覽器,具備利用本機存放區實現學生就業表的能力 BOM操作 綜合案例 js組成JavaScript的組成 ECMAScript: 規定了js基礎語法核心知識。 比如：變數、分支語句、迴圈語句、物件等等 Web APIs : DOM 文檔物件模型， 定義了...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":15,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":15,"path":"api/tags/javaScript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#js%E7%B5%84%E6%88%90\"><span class=\"toc-text\">js組成</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#window%E5%B0%8D%E8%B1%A1\"><span class=\"toc-text\">window對象</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A8%88%E6%99%82%E5%99%A8-%E5%BB%B6%E9%81%B2%E5%87%BD%E6%95%B8\"><span class=\"toc-text\">計時器-延遲函數</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#location%E5%B0%8D%E8%B1%A1\"><span class=\"toc-text\">location對象</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#navigator%E5%B0%8D%E8%B1%A1\"><span class=\"toc-text\">navigator對象</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#histroy%E5%B0%8D%E8%B1%A1\"><span class=\"toc-text\">histroy對象</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E6%A9%9F%E5%AD%98%E6%94%BE%E5%8D%80%EF%BC%88%E4%BB%8A%E6%97%A5%E9%87%8D%E9%BB%9E%EF%BC%89\"><span class=\"toc-text\">本機存放區（今日重點）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#localStorage%EF%BC%88%E9%87%8D%E9%BB%9E%EF%BC%89\"><span class=\"toc-text\">localStorage（重點）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sessionStorage%EF%BC%88%E7%9E%AD%E8%A7%A3%EF%BC%89\"><span class=\"toc-text\">sessionStorage（瞭解）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#localStorage-%E5%AD%98%E5%84%B2%E8%A4%87%E9%9B%9C%E8%B3%87%E6%96%99%E9%A1%9E%E5%9E%8B\"><span class=\"toc-text\">localStorage 存儲複雜資料類型</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%B6%9C%E5%90%88%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">綜合案例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%99%A3%E5%88%97map-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">陣列map 方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%99%A3%E5%88%97join%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">陣列join方法</span></a></li></ol></li></ol>","author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"(./source/img/1.jpg)","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JavaScript Web APIs - 第6天","uid":"1359ad702c466c1bb96b6c62885f8401","slug":"20230328JavaScript Web APIs - 第6天","date":"2023-03-28T01:22:08.000Z","updated":"2023-03-30T03:57:26.346Z","comments":true,"path":"api/articles/20230328JavaScript Web APIs - 第6天.json","keywords":null,"cover":[],"text":" 目標：能夠利用規則運算式完成小兔鮮註冊頁面的表單驗證，具備常見的表單驗證能力 規則運算式 綜合案例 階段案例 規則運算式規則運算式（Regular Expression）是一種字串匹配的模式（規則） 使用場景： 例如驗證表單：手機號表單要求用戶只能輸入11位元的數字 (匹配) ...","link":"","photos":[],"count_time":{"symbolsCount":"9.2k","symbolsTime":"8 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":15,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":15,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"(./source/img/1.jpg)","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"JavaScript Web APIs - 第4天","uid":"00643405d99d1bca34738d1b7609799a","slug":"20230326JavaScript Web APIs - 第4天","date":"2023-03-26T01:22:08.000Z","updated":"2023-03-29T01:41:00.239Z","comments":true,"path":"api/articles/20230326JavaScript Web APIs - 第4天.json","keywords":null,"cover":null,"text":" 進一步學習 DOM 相關知識，實現可交互的網頁特效 能夠插入、刪除和替換元素節點 能夠依據元素節點關係查找節點 日期對象掌握 Date 日期物件的使用，動態獲取當前電腦的時間。 ECMAScript 中內置了獲取系統時間的物件 Date，使用 Date 時與之前學習的內置物件 ...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":15,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":15,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"(./source/img/1.jpg)","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null}}