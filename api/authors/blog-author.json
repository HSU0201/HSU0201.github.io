{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"240126React零碎知識點","uid":"226913a9ccc4a580478e5d60de981fd1","slug":"240126React零碎知識點","date":"2024-01-27T11:32:36.000Z","updated":"2024-01-27T11:33:06.513Z","comments":true,"path":"api/articles/240126React零碎知識點.json","keywords":null,"cover":null,"text":"渲染（Rendering）在軟體開發和電腦圖形領域中，”渲染” 指的是將資料或程式碼轉換為可視化的形式或格式的過程。在不同的上下文中，”渲染” 的含義可能有所不同。 **瀏覽器中的渲染引擎(Rendering Engine)**：瀏覽器的渲染引擎是負責將網頁的 HTML、CSS ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":3,"path":"api/categories/React.json"}],"tags":[{"name":"資策會上課筆記","slug":"資策會上課筆記","count":5,"path":"api/tags/資策會上課筆記.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"240125React零碎知識點","uid":"2c4df57117660657820746cd0823ec89","slug":"240125React零碎知識點","date":"2024-01-25T12:35:16.000Z","updated":"2024-01-27T11:31:08.606Z","comments":true,"path":"api/articles/240125React零碎知識點.json","keywords":null,"cover":null,"text":"在 React 應用程式部署前的檔案和資料夾清理在 React 應用程式的開發過程中，有一些檔案和資料夾是開發時使用的，但在最終的發布版本中並不需要包含。在進行壓縮、打包或部署到生產環境時，建議考慮刪除以下檔案和資料夾： 1. package-lock.json：package-...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":3,"path":"api/categories/React.json"}],"tags":[{"name":"資策會上課筆記","slug":"資策會上課筆記","count":5,"path":"api/tags/資策會上課筆記.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"240124React零碎知識點","uid":"6587c0dcefcdc69eda60933087e365f3","slug":"240124React零碎知識點","date":"2024-01-24T11:28:08.000Z","updated":"2024-01-27T11:30:36.369Z","comments":true,"path":"api/articles/240124React零碎知識點.json","keywords":null,"cover":null,"text":"單向資料流程（One-Way Data Flow）單向資料流程是一種軟體設計模式，其中資料在應用程式中的流動方向是單一且明確的。這種模式通常應用在使用者介面（UI）的開發中，特別是在 React 等前端框架中。以下是單向資料流程的一些優缺點： 優點： 可預測性： 單向資料流程使應...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"React","slug":"React","count":3,"path":"api/categories/React.json"}],"tags":[{"name":"資策會上課筆記","slug":"資策會上課筆記","count":5,"path":"api/tags/資策會上課筆記.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"240127前期練習-建立開發環境","uid":"0634d188a86a5b5d91c4c97fbcbf73a7","slug":"240124前期練習-建立開發環境","date":"2024-01-24T11:24:33.000Z","updated":"2024-01-27T11:26:07.188Z","comments":true,"path":"api/articles/240124前期練習-建立開發環境.json","keywords":null,"cover":null,"text":"前期練習 - 建立開發環境Github Repo 注意: 是用 branch(分支)的同一 repo 的協作者進行方式，並非 fork(分叉)，分叉的管理流程會較複雜不同。 建立一個共同 repo，每個組員區分分支(branch) 建立自己私有的數個 repo，主要作測試，或前期...","link":"","photos":[],"count_time":{"symbolsCount":924,"symbolsTime":"1 mins."},"categories":[{"name":"github","slug":"github","count":2,"path":"api/categories/github.json"}],"tags":[{"name":"資策會上課筆記","slug":"資策會上課筆記","count":5,"path":"api/tags/資策會上課筆記.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"如何發問程式碼問題","uid":"70dadd491ec3695ca3bd2adef4b59f9a","slug":"240124如何發問程式碼問題","date":"2024-01-24T11:17:41.000Z","updated":"2024-01-27T11:26:04.081Z","comments":true,"path":"api/articles/240124如何發問程式碼問題.json","keywords":null,"cover":null,"text":"如何發問程式碼問題使用 Gist (推薦!!!)Gist 是 Github 的一個免費服務，且任何人都可以使用這個服務，不論你是否擁有 Github 帳號。 以開發者的角度來說，最基本的功能就是可以分享片段的原始碼。有別於 Github 的 Repository，Gist 可以只...","link":"","photos":[],"count_time":{"symbolsCount":630,"symbolsTime":"1 mins."},"categories":[{"name":"github","slug":"github","count":2,"path":"api/categories/github.json"}],"tags":[{"name":"資策會上課筆記","slug":"資策會上課筆記","count":5,"path":"api/tags/資策會上課筆記.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 進階 - 第4天","uid":"956114e1932534f6adc2e3848138c40e","slug":"2303-3 JS 進階4-1 深淺拷貝","date":"2023-04-01T01:22:08.000Z","updated":"2023-04-13T09:16:37.267Z","comments":true,"path":"api/articles/2303-3 JS 進階4-1 深淺拷貝.json","keywords":null,"cover":null,"text":"深淺拷貝淺拷貝首先淺拷貝和深拷貝只針對參考類型 淺拷貝：拷貝的是位址 常見方法： 拷貝物件：Object.assgin() &#x2F; 展開運運算元 {…obj} 拷貝物件 拷貝陣列：Array.prototype.concat() 或者 […arr] 如果是單一資料型別拷貝值...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 進階 - 第4天","uid":"956114e1932534f6adc2e3848138c40e","slug":"2303-3 JS 進階4-2 異常處理","date":"2023-04-01T01:22:08.000Z","updated":"2023-04-13T09:16:22.204Z","comments":true,"path":"api/articles/2303-3 JS 進階4-2 異常處理.json","keywords":null,"cover":null,"text":"異常處理 瞭解 JavaScript 中程式異常處理的方法，提升代碼運行的健壯性。 throw異常處理是指預估代碼執行過程中可能發生的錯誤，然後最大程度的避免錯誤的發生導致整個程式無法繼續運行 總結： throw 拋出異常資訊，程式也會終止執行 throw 後面跟的是錯誤提示資訊...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 進階 - 第4天","uid":"956114e1932534f6adc2e3848138c40e","slug":"2303-3 JS 進階4-3 處理this","date":"2023-04-01T01:22:08.000Z","updated":"2023-04-13T09:15:36.220Z","comments":true,"path":"api/articles/2303-3 JS 進階4-3 處理this.json","keywords":null,"cover":null,"text":"處理this 瞭解函數中 this 在不同場景下的預設值，知道動態指定函數 this 值的方法。 this 是 JavaScript 最具“魅惑”的知識點，不同的應用場合 this 的取值可能會有意想不到的結果，在此我們對以往學習過的關於【 this 預設的取值】情況進行歸納和總...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 進階 - 第4天","uid":"956114e1932534f6adc2e3848138c40e","slug":"2303-3 JS 進階4-4 防抖節流","date":"2023-04-01T01:22:08.000Z","updated":"2023-04-13T09:14:41.375Z","comments":true,"path":"api/articles/2303-3 JS 進階4-4 防抖節流.json","keywords":null,"cover":null,"text":"防抖節流節流 和防抖的區別是？ 防抖（debounce） 所謂防抖，就是指觸發事件後在 n 秒內函數只能執行一次(最後一次)，如果在 n 秒內又觸發了事件，則會重新計算函數執行時間 節流（throttle） 所謂節流，就是指連續觸發事件但是在 n 秒中只執行一次函數(不會被打斷)...","link":"","photos":[],"count_time":{"symbolsCount":266,"symbolsTime":"1 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 進階 - 第3天","uid":"c43b2d50b25bb22e84622db700db53eb","slug":"2303-3 JS 進階3","date":"2023-03-31T01:22:08.000Z","updated":"2023-04-05T01:18:28.622Z","comments":true,"path":"api/articles/2303-3 JS 進階3.json","keywords":null,"cover":[],"text":" 瞭解構造函數原型物件的語法特徵，掌握 JavaScript 中物件導向程式設計的實現方式，基於物件導向程式設計思想實現 DOM 操作的封裝。 瞭解物件導向程式設計的一般特徵 掌握基於構造函數原型物件的邏輯封裝 掌握基於原型物件實現的繼承 理解什麼原型鏈及其作用 能夠處理常式異常...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 進階 - 第2天","uid":"b57064d0869ba36d27730b8b11beee0b","slug":"2303-3 JS 進階2","date":"2023-03-30T01:22:08.000Z","updated":"2023-04-04T00:04:34.343Z","comments":true,"path":"api/articles/2303-3 JS 進階2.json","keywords":null,"cover":[],"text":" 瞭解物件導向程式設計的基礎概念及構造函數的作用，體會 JavaScript 一切皆物件的語言特徵，掌握常見的物件屬性和方法的使用。 瞭解物件導向程式設計中的一般概念 能夠基於構造函數創建物件 理解 JavaScript 中一切皆物件的語言特徵 理解引用物件類型值存儲的的特徵 掌...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 進階 - 第1天","uid":"35ba1b013b453118df98cec61f2a93fb","slug":"2303-3 JS 進階1","date":"2023-03-29T01:22:08.000Z","updated":"2023-04-01T13:58:55.500Z","comments":true,"path":"api/articles/2303-3 JS 進階1.json","keywords":null,"cover":null,"text":" 學習作用域、變數提升、閉包等語言特徵，加深對 JavaScript 的理解，掌握變數賦值、函式宣告的簡潔語法，降低代碼的冗餘度。 理解作用域對程式執行的影響 能夠分析程式執行的作用域範圍 理解閉包本質，利用閉包創建隔離作用域 瞭解什麼變數提升及函數提升 掌握箭頭函數、解析剩餘參...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"19 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript Web APIs - 第6天","uid":"1359ad702c466c1bb96b6c62885f8401","slug":"2303-2 JS Web APIs 06","date":"2023-03-28T01:22:08.000Z","updated":"2023-03-30T03:57:26.346Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 06.json","keywords":null,"cover":[],"text":" 目標：能夠利用規則運算式完成小兔鮮註冊頁面的表單驗證，具備常見的表單驗證能力 規則運算式 綜合案例 階段案例 規則運算式規則運算式（Regular Expression）是一種字串匹配的模式（規則） 使用場景： 例如驗證表單：手機號表單要求用戶只能輸入11位元的數字 (匹配) ...","link":"","photos":[],"count_time":{"symbolsCount":"9.2k","symbolsTime":"8 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript Web APIs - 第5天","uid":"ba21313bf340a72e13573e85234fd6fe","slug":"2303-2 JS Web APIs 05","date":"2023-03-27T01:22:08.000Z","updated":"2023-03-29T13:30:25.272Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 05.json","keywords":null,"cover":[],"text":" 目標： 能夠利用JS操作流覽器,具備利用本機存放區實現學生就業表的能力 BOM操作 綜合案例 js組成JavaScript的組成 ECMAScript: 規定了js基礎語法核心知識。 比如：變數、分支語句、迴圈語句、物件等等 Web APIs : DOM 文檔物件模型， 定義了...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript Web APIs - 第4天","uid":"00643405d99d1bca34738d1b7609799a","slug":"2303-2 JS Web APIs 04","date":"2023-03-26T01:22:08.000Z","updated":"2023-04-13T09:55:14.689Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 04.json","keywords":null,"cover":null,"text":" 進一步學習 DOM 相關知識，實現可交互的網頁特效 能夠插入、刪除和替換元素節點 能夠依據元素節點關係查找節點 日期對象掌握 Date 日期物件的使用，動態獲取當前電腦的時間。 ECMAScript 中內置了獲取系統時間的物件 Date，使用 Date 時與之前學習的內置物件 ...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript Web APIs - 第3天","uid":"4c656a1bef12133b7e372d516df2e64e","slug":"2303-2 JS Web APIs 03 事件流","date":"2023-03-25T01:22:08.000Z","updated":"2023-03-28T02:29:37.721Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 03 事件流.json","keywords":null,"cover":[],"text":" 進一步學習 事件進階，實現更多交互的網頁特效，結合事件流的特徵優化事件執行的效率 掌握阻止事件冒泡的方法 理解事件委託的實現原理 事件流事件流是對事件執行過程的描述，瞭解事件的執行過程有助於加深對事件的理解，提升開發實踐中對事件運用的靈活度。 如上圖所示，任意事件被觸發時總會經...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript Web APIs - 第2天","uid":"b74e92afe19531c6070a34e8d8d93dcd","slug":"2303-2 JS Web APIs 02 事件","date":"2023-03-24T01:22:08.000Z","updated":"2023-03-26T12:06:58.484Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 02 事件.json","keywords":null,"cover":null,"text":" 學會通過為DOM註冊事件來實現可交互的網頁特效。 能夠判斷函數運行的環境並確字 this 所指代的物件 理解事件的作用，知道應用事件的 3 個步驟 學習會為 DOM 註冊事件，實現簡單可交互的網頁特交。 事件事件是程式設計語言中的術語，它是用來描述程式的行為或狀態的，一旦行為或...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript Web APIs - 第1天","uid":"0a48fb7912b57657825a8de1e5528e6f","slug":"2303-2 JS Web APIs 01 DOM","date":"2023-03-23T01:22:08.000Z","updated":"2023-03-26T01:51:05.947Z","comments":true,"path":"api/articles/2303-2 JS Web APIs 01 DOM.json","keywords":null,"cover":null,"text":"複習：splice() 方法用於添加或刪除陣列中的元素。 注意：這種方法會改變原始陣列。 刪除陣列： splice(起始位置， 刪除的個數) 比如：1 let arr &#x3D; [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;] ...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 基礎 - 第5天","uid":"866ec5a135e50f1f3d3c59488d09d968","slug":"2303-1 JS 基礎5 對象","date":"2023-03-21T16:00:00.000Z","updated":"2023-03-25T02:06:41.780Z","comments":true,"path":"api/articles/2303-1 JS 基礎5 對象.json","keywords":null,"cover":null,"text":" 知道物件資料類型的特徵，能夠利用陣列物件渲染頁面 理解什麼是物件，掌握定義物件的語法 掌握數學物件的使用 對象 物件為無序的資料的集合，是 JavaScript 資料類型的一種，之前已經學習了數數值型別、字串類型、布林類型、undefined。物件資料類型可以被理解成是一種資料...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 基礎 - 第4天","uid":"eddf66a4e61c3de8ab537ceecfc30415","slug":"2303-1 JS 基礎4 函式","date":"2023-03-20T16:00:00.000Z","updated":"2023-04-13T09:33:49.317Z","comments":true,"path":"api/articles/2303-1 JS 基礎4 函式.json","keywords":null,"cover":null,"text":" 理解封裝的意義，能夠通過函式的聲明實現邏輯的封裝，知道物件資料類型的特徵，結合數學物件實現簡單計算功能。 理解函式的封裝的特徵 掌握函式宣告的語法 理解什麼是函式的返回值 知道並能使用常見的內置函式 函式 -理解函式的封裝特性，掌握函式的語法規則-function，是被設計為執...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 基礎 - 第3天","uid":"d6326a002590bf2cbb1500ce76554880","slug":"2303-1 JS 基礎3 for語句","date":"2023-03-19T16:00:00.000Z","updated":"2023-04-13T09:35:40.731Z","comments":true,"path":"api/articles/2303-1 JS 基礎3 for語句.json","keywords":null,"cover":null,"text":"if 多分支語句和 switch的區別： 共同點 都能實現多分支選擇， 多選1 大部分情況下可以互換 區別： switch…case語句通常處理case為比較確定值的情況，而if…else…語句更加靈活，通常用於範圍判斷(大於，等於某個範圍)。 switch 語句進行判斷後直接執...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 基礎 - 第3天","uid":"d6326a002590bf2cbb1500ce76554880","slug":"2303-1 JS 基礎3-1 陣列","date":"2023-03-19T16:00:00.000Z","updated":"2023-04-13T09:36:02.401Z","comments":true,"path":"api/articles/2303-1 JS 基礎3-1 陣列.json","keywords":null,"cover":null,"text":"陣列 知道什麼是陣列及其應用的場景，掌握陣列聲明及訪問的語法。 陣列是什麼？陣列：(Array)是一種可以按順序保存資料的資料類型 使用場景：如果有多個資料可以用陣列保存起來，然後放到一個變數中，管理非常方便 陣列的基本使用定義陣列和陣列單元&lt;script&gt; &#x2...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 基礎 - 第2天","uid":"119b4406e4e9c28d94cef591716ce0ed","slug":"2303-1 JS 基礎2 運算子&語句","date":"2023-03-18T16:00:00.000Z","updated":"2023-03-25T02:06:36.479Z","comments":true,"path":"api/articles/2303-1 JS 基礎2 運算子&語句.json","keywords":null,"cover":null,"text":" 理解什麼是流程控制，知道條件控制的種類並掌握其對應的語法規則，具備利用迴圈編寫簡易ATM取款機程式能力 運算子 語句 綜合案例 運算子算術運算子數字是用來計算的，比如：乘法 * 、除法 &#x2F; 、加法 + 、減法 - 等等，所以經常和算術運算子一起。 算術運算子：也叫數學...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"10 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 基礎- 第1天","uid":"1517f5e85f0012c69f183e7960bb5313","slug":"2303-1 JS 基礎1 宣告","date":"2023-03-17T16:00:00.000Z","updated":"2023-04-13T10:47:55.267Z","comments":true,"path":"api/articles/2303-1 JS 基礎1 宣告.json","keywords":null,"cover":null,"text":" 瞭解變數、資料類型、運算子等基礎概念，能夠實現資料類型的轉換，結合四則運算體會如何程式設計。 體會現實世界中的事物與電腦的關係 理解什麼是資料並知道資料的分類 理解變數存儲資料的“容器” 掌握常見運算子的使用，瞭解優先順序關係 知道 JavaScript 資料類型隱式轉換的特徵...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"JavaScript 基礎- 第1天","uid":"1517f5e85f0012c69f183e7960bb5313","slug":"2303-1 JS 基礎1-1 型別","date":"2023-03-17T16:00:00.000Z","updated":"2023-04-13T09:49:17.871Z","comments":true,"path":"api/articles/2303-1 JS 基礎1-1 型別.json","keywords":null,"cover":null,"text":"資料型別 電腦世界中的萬事成物都是資料。 電腦程式可以處理大量的資料，為了方便資料的管理，將資料分成了不同的型別： 注：通過 typeof 關鍵字檢測資料型別 &lt;!DOCTYPE html&gt; &lt;html lang&#x3D;&quot;en&quot;&gt; ...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/categories/javaScript.json"}],"tags":[{"name":"javaScript","slug":"javaScript","count":20,"path":"api/tags/javaScript.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 08-高級技巧","uid":"e6004c997fa8a9529d5026785922b3ae","slug":"2301-2 CSS 08 高級技巧","date":"2023-03-17T02:50:27.000Z","updated":"2023-03-27T01:38:20.131Z","comments":true,"path":"api/articles/2301-2 CSS 08 高級技巧.json","keywords":null,"cover":null,"text":"CSS高級技巧目標 理解 元素顯示隱藏最常見的寫法 精靈圖產生的目的 去除圖片底側空白縫隙的方法 應用 寫出最常見的滑鼠樣式 使用精靈圖技術 用滑動門做巡覽列案例 1. 元素的顯示與隱藏 目的：讓一個元素在頁面中消失或者顯示出來 場景：類似網站廣告，當我們點擊關閉就不見了，但是我...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 07-定位(position)","uid":"a80bc05c620a4e285b16be71646cc7c5","slug":"2301-2 CSS 07 定位(position)","date":"2023-03-16T02:50:27.000Z","updated":"2023-03-27T01:38:16.278Z","comments":true,"path":"api/articles/2301-2 CSS 07 定位(position).json","keywords":null,"cover":null,"text":"定位(position)目標 理解 為什麼要用定位 定位的4種分類 4種定位的各自特點 為什麼常用子絕父相佈局 1. CSS 佈局的三種機制 網頁佈局的核心 —— 就是用 CSS 來擺放盒子位置。 CSS 提供了 3 種機制來設置盒子的擺放位置，分別是普通流、浮動和定位，其中： ...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 06-浮動(float)","uid":"9ff528d9337f78a8c4f9529b9dd287e6","slug":"2301-2 CSS 06 浮動(float)","date":"2023-03-15T02:50:27.000Z","updated":"2023-03-27T01:38:12.086Z","comments":true,"path":"api/articles/2301-2 CSS 06 浮動(float).json","keywords":null,"cover":null,"text":"1. 浮動(float)目標 記憶 CSS 的佈局的三種機制 理解 普通流在佈局中的特點 為什麼用浮動 為什麼要清除浮動 應用 利用浮動完成巡覽列案例 清除浮動 1.1 CSS 佈局的三種機制 網頁佈局的核心——就是用 CSS 來擺放盒子。 CSS 提供了 3 種機制來設置盒子的...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 05-盒子模型+拓展規範","uid":"8c021a3b84d7a0602ad12ca159c8b3ca","slug":"2301-2 CSS 05 盒子模型+拓展規範","date":"2023-03-14T02:50:27.000Z","updated":"2023-03-27T01:38:07.612Z","comments":true,"path":"api/articles/2301-2 CSS 05 盒子模型+拓展規範.json","keywords":null,"cover":null,"text":"盒子模型（CSS重點） css學習三大重點： css 盒子模型 、 浮動 、 定位 目標： 理解： 盒子模型有那四部分組成 內邊距的作用以及對盒子的影響 padding設置不同數值個數分別代表的意思 塊級盒子居中對齊需要的2個條件 外邊距合併的解決方法 應用： 利用邊框複合寫法給...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 04-複合選擇器+三大特性","uid":"494b4979132be1c92e421450a897b835","slug":"2301-2 CSS 04 複合選擇器+三大特性","date":"2023-03-13T02:50:27.000Z","updated":"2023-03-27T01:38:38.183Z","comments":true,"path":"api/articles/2301-2 CSS 04 複合選擇器+三大特性.json","keywords":null,"cover":null,"text":"1. CSS複合選擇器目標 理解 理解css複合選擇器分別的應用場景 應用 使用後代選擇器給元素添加樣式 使用並集選擇器給元素添加樣式 使用偽類別選取器 為什麼要學習css複合選擇器 目的是為了可以選擇更準確更精細的目標元素標籤。 複合選擇器是由兩個或多個基礎選擇器，通過不同的方...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 03-文本樣式屬性調試工具","uid":"d86c07d9a08e828d31cdbce6c02ea3bd","slug":"2301-2 CSS 03 文本樣式屬性調試工具","date":"2023-03-12T02:50:27.000Z","updated":"2023-03-27T01:38:36.375Z","comments":true,"path":"api/articles/2301-2 CSS 03 文本樣式屬性調試工具.json","keywords":null,"cover":null,"text":" 應用 使用css字體樣式完成對字體的設置 使用css外觀屬性給頁面元素添加樣式 使用常用的emment語法 能夠使用開發人員工具代碼調試 1.font字體1.1 font-size:大小 作用：font-size屬性用於設置字型大小 p &#123; font-size:20p...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 02-基礎選擇器","uid":"fe80011ed56b79e3fb28c137c216c8eb","slug":"2301-2 CSS 02 基礎選擇器","date":"2023-03-11T02:50:27.000Z","updated":"2023-03-27T01:38:34.756Z","comments":true,"path":"api/articles/2301-2 CSS 02 基礎選擇器.json","keywords":null,"cover":null,"text":"CSS選擇器 找到特定的HTML頁面元素能夠使用基礎選擇器給頁面元素添加樣式 1. CSS選擇器作用（重點）選擇器的作用css 只做兩件事 選人，做事 h3 &#123; color: red; &#125; 這段代碼就是2件事， 把 h3選出來， 然後 把它變成了 紅色。 選擇...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"CSS 01-層疊樣式表","uid":"e201a2a619b1945f4ef64af1b2319404","slug":"2301-2 CSS 01 層疊樣式表","date":"2023-03-10T02:00:27.000Z","updated":"2023-03-27T01:38:33.293Z","comments":true,"path":"api/articles/2301-2 CSS 01 層疊樣式表.json","keywords":null,"cover":null,"text":"學習目標 理解 css的目的作用 css的三種引入方式 應用 css三種引用方式的書寫 通過樣式規則給標籤添加簡單的樣式 1.HTML的局限性HTML非常單純， 只關注內容的語義， 比如: &lt;h1&gt;表明這是一個大標題，&lt;p&gt; 表明這是一個段落， &lt;i...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"CSS","slug":"CSS","count":8,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":8,"path":"api/tags/CSS.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"Html列表和表單","uid":"c280a2edc22e967ceed619afcdbab7b6","slug":"2301-1 Html 05 列表和表單","date":"2023-03-09T02:31:01.000Z","updated":"2023-04-12T08:42:09.627Z","comments":true,"path":"api/articles/2301-1 Html 05 列表和表單.json","keywords":null,"cover":null,"text":"1. 列表標籤（重點）學習目標 理解 無序列表的應用場景 自訂列表的應用場景 應用 無序列表語法 自訂清單語法 容器裡面裝載著結構，樣式一致的文字或圖表的一種形式，叫列表 特點：列表最大的特點就是 整齊 、整潔、 有序，跟表格類似，但是他可組合自由度會更高。 1.1 無序列表 u...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"HTML","slug":"HTML","count":5,"path":"api/categories/HTML.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"Html表格","uid":"9251ae9d685dc3ab72877b4e42919649","slug":"2301-1 Html 04 表格","date":"2023-03-08T02:31:01.000Z","updated":"2023-04-12T08:42:25.571Z","comments":true,"path":"api/articles/2301-1 Html 04 表格.json","keywords":null,"cover":null,"text":"為了讓我們頁面顯示的更加整齊，需要學習三個表（表格、表單、清單） 表格 table(會使用)目標： 理解： 表格用來做什麼的 表格的基本結構組成 應用： 寫出n行n列的表格 簡單的合併儲存格 表格作用： 表格主要用於顯示、展示資料。因為它可以讓資料顯示得非常的規整，可讀性非常好。...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"HTML","slug":"HTML","count":5,"path":"api/categories/HTML.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"HTML常用標籤","uid":"cbe5237b8ff5a57f8171e301da77c028","slug":"2301-1 Html 03 常用標籤","date":"2023-03-07T02:31:01.000Z","updated":"2023-04-12T08:42:43.140Z","comments":true,"path":"api/articles/2301-1 Html 03 常用標籤.json","keywords":null,"cover":null,"text":"學習目標 理解： 相對路徑三種形式 應用 排版標籤 文本格式化標籤 圖像標籤 連結 相對路徑，絕對路徑的使用 1. HTML常用標籤 首先 HTML和CSS是兩種完全不同的語言，我們學的是結構，就只寫HTML標籤，認識標籤就可以了。 不會再給結構標籤指定樣式了。 HTML標籤有很...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"HTML","slug":"HTML","count":5,"path":"api/categories/HTML.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"Html認識HTML","uid":"76dff37ffad444f9899a2462f98081d7","slug":"2301-1 Html 02 認識Html","date":"2023-03-06T02:31:01.000Z","updated":"2023-04-12T08:42:54.642Z","comments":true,"path":"api/articles/2301-1 Html 02 認識Html.json","keywords":null,"cover":null,"text":"學習目標 理解 HTML的概念 HTML標籤的分類 HTML標籤的關係 HTML標籤的語義化 應用 HTML骨架格式 sublime基本使用 1. HTML 初識 HTML 指的是超文字標記語言 (Hyper Text Markup Language)是用來描述網頁的一種語言。 ...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"HTML","slug":"HTML","count":5,"path":"api/categories/HTML.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"Html認識WEB","uid":"ea9f8724503553e7e983e98765f0c811","slug":"2301-1 Html 01 前言及標準","date":"2023-03-05T02:31:01.000Z","updated":"2023-04-12T08:41:48.806Z","comments":true,"path":"api/articles/2301-1 Html 01 前言及標準.json","keywords":null,"cover":null,"text":"1. 認識網頁網頁主要由文字、圖像和超連結等元素構成。 當然，除了這些元素，網頁中還可以包含音訊、視頻以及Flash等。 總結網頁有圖片、連結、文字等元素組成，就是要把這部分網頁元素用代碼寫出來，通常是 HTML 格式的檔（.htm 或 .html）必須通過流覽器來閱讀。 2. ...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"HTML","slug":"HTML","count":5,"path":"api/categories/HTML.json"}],"tags":[{"name":"HTML","slug":"HTML","count":5,"path":"api/tags/HTML.json"}],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":null},{"title":"前端之路","uid":"71434f06eb628cf7a92f4f3d96cc0406","slug":"2300 hello-world","date":"2022-12-31T16:00:00.000Z","updated":"2023-03-27T01:37:42.513Z","comments":true,"path":"api/articles/2300 hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":386,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Hsu's Blog","slug":"blog-author","avatar":"./source/img/1.jpg","link":"/","description":"“Stay curious, keep learning, and never stop creating.”","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":5,"tags":38,"word_count":"241k","post_count":39}